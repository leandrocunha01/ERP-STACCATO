-- MySQL Script generated by MySQL Workbench
-- Fri Aug 16 00:19:08 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`loja`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`loja` ;

CREATE TABLE IF NOT EXISTS `mydb`.`loja` (
  `idLoja` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `descricao` VARCHAR(45) NULL DEFAULT NULL,
  `nomeFantasia` VARCHAR(45) NOT NULL,
  `razaoSocial` VARCHAR(60) NOT NULL,
  `tel` VARCHAR(18) NOT NULL,
  `tel2` VARCHAR(18) NULL DEFAULT NULL,
  `inscEstadual` VARCHAR(20) NOT NULL,
  `sigla` VARCHAR(4) NULL DEFAULT NULL,
  `cnpj` VARCHAR(18) NOT NULL,
  `codUF` INT(11) NOT NULL DEFAULT '0',
  `porcentagemFrete` DOUBLE NOT NULL DEFAULT '4',
  `valorMinimoFrete` DOUBLE NOT NULL DEFAULT '80',
  `certificadoSerie` VARCHAR(32) NULL DEFAULT NULL,
  `certificadoSenha` VARCHAR(45) NULL DEFAULT NULL,
  `porcentagemPIS` DOUBLE NULL DEFAULT NULL,
  `porcentagemCOFINS` DOUBLE NULL DEFAULT NULL,
  `custoTransporteTon` DOUBLE NULL DEFAULT NULL,
  `custoTransporte1` DOUBLE NULL DEFAULT NULL,
  `custoTransporte2` DOUBLE NULL DEFAULT NULL,
  `custoFuncionario` DOUBLE NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idLoja`),
  UNIQUE INDEX `idLoja_UNIQUE` (`idLoja` ASC),
  FULLTEXT INDEX `idxFT` (`descricao`, `nomeFantasia`, `razaoSocial`))
ENGINE = InnoDB
AUTO_INCREMENT = 9
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`alcadas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`alcadas` ;

CREATE TABLE IF NOT EXISTS `mydb`.`alcadas` (
  `idAlcada` INT(11) NOT NULL AUTO_INCREMENT,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `tipoFuncionario` VARCHAR(45) NOT NULL DEFAULT '',
  `debito` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `credito` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `cheque` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `dinheiro` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `boleto` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idAlcada`),
  UNIQUE INDEX `idAlcada_UNIQUE` (`idAlcada` ASC),
  INDEX `fk_Alçadas_Loja1_idx` (`idLoja` ASC),
  CONSTRAINT `fk_Alçadas_Loja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `mydb`.`loja` (`idLoja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`cfop_entr`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`cfop_entr` ;

CREATE TABLE IF NOT EXISTS `mydb`.`cfop_entr` (
  `idCFOP` INT(11) NOT NULL AUTO_INCREMENT,
  `CFOP_DE` VARCHAR(18) NULL DEFAULT NULL,
  `CFOP_FE` VARCHAR(18) NULL DEFAULT NULL,
  `CFOP_IN` VARCHAR(18) NULL DEFAULT NULL,
  `NAT` VARCHAR(750) NULL DEFAULT NULL,
  `OBS` BLOB NULL DEFAULT NULL,
  PRIMARY KEY (`idCFOP`))
ENGINE = InnoDB
AUTO_INCREMENT = 132
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`cfop_sai`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`cfop_sai` ;

CREATE TABLE IF NOT EXISTS `mydb`.`cfop_sai` (
  `idCFOP` INT(11) NOT NULL AUTO_INCREMENT,
  `CFOP_DE` VARCHAR(15) NULL DEFAULT NULL,
  `CFOP_FE` VARCHAR(18) NULL DEFAULT NULL,
  `CFOP_IN` VARCHAR(18) NULL DEFAULT NULL,
  `NAT` VARCHAR(600) NULL DEFAULT NULL,
  `OBS` BLOB NULL DEFAULT NULL,
  PRIMARY KEY (`idCFOP`))
ENGINE = InnoDB
AUTO_INCREMENT = 163
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`cidade`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`cidade` ;

CREATE TABLE IF NOT EXISTS `mydb`.`cidade` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `codigo` INT(11) NOT NULL,
  `nome` VARCHAR(255) NOT NULL,
  `uf` CHAR(2) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 16709
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`usuario` ;

CREATE TABLE IF NOT EXISTS `mydb`.`usuario` (
  `idUsuario` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `user` VARCHAR(20) NOT NULL,
  `passwd` VARCHAR(42) NOT NULL,
  `tipo` VARCHAR(45) NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NULL DEFAULT NULL,
  `especialidade` INT(10) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idUsuario`),
  UNIQUE INDEX `user_UNIQUE` (`user` ASC),
  UNIQUE INDEX `nome_UNIQUE` (`nome` ASC),
  INDEX `fk_Usuario_Loja1_idx` (`idLoja` ASC),
  FULLTEXT INDEX `idxFT` (`nome`, `tipo`),
  CONSTRAINT `fk_Usuario_Loja1`
    FOREIGN KEY (`idLoja`)
    REFERENCES `mydb`.`loja` (`idLoja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 113
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`profissional`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`profissional` ;

CREATE TABLE IF NOT EXISTS `mydb`.`profissional` (
  `idProfissional` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idLoja` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idUsuarioRel` INT(10) UNSIGNED NULL DEFAULT NULL,
  `pfpj` VARCHAR(45) NULL DEFAULT NULL,
  `nome_razao` VARCHAR(45) NOT NULL,
  `nomeFantasia` VARCHAR(45) NULL DEFAULT NULL,
  `cpf` VARCHAR(14) NULL DEFAULT NULL,
  `cnpj` VARCHAR(18) NULL DEFAULT NULL,
  `inscEstadual` VARCHAR(45) NULL DEFAULT NULL,
  `contatoNome` VARCHAR(45) NULL DEFAULT NULL,
  `contatoCPF` VARCHAR(45) NULL DEFAULT NULL,
  `contatoApelido` VARCHAR(45) NULL DEFAULT NULL,
  `contatoRG` VARCHAR(45) NULL DEFAULT NULL,
  `tel` VARCHAR(45) NULL DEFAULT NULL,
  `telCel` VARCHAR(18) NULL DEFAULT NULL,
  `telCom` VARCHAR(18) NULL DEFAULT NULL,
  `idNextel` VARCHAR(16) NULL DEFAULT NULL,
  `nextel` VARCHAR(18) NULL DEFAULT NULL,
  `email` VARCHAR(45) NULL DEFAULT NULL,
  `tipoProf` VARCHAR(45) NULL DEFAULT NULL,
  `banco` VARCHAR(45) NULL DEFAULT NULL,
  `agencia` VARCHAR(45) NULL DEFAULT NULL,
  `cc` VARCHAR(45) NULL DEFAULT NULL,
  `poupanca` TINYINT(1) NULL DEFAULT NULL,
  `nomeBanco` VARCHAR(45) NULL DEFAULT NULL,
  `cpfBanco` VARCHAR(45) NULL DEFAULT NULL,
  `cnpjBanco` VARCHAR(45) NULL DEFAULT NULL,
  `comissao` DECIMAL(15,4) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idProfissional`),
  INDEX `fk_profissional_loja_idx` (`idLoja` ASC),
  INDEX `fk_profissional_usiuario_idx` (`idUsuarioRel` ASC),
  FULLTEXT INDEX `idxFT` (`nome_razao`, `tipoProf`),
  CONSTRAINT `fk_profissional_loja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `mydb`.`loja` (`idLoja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_profissional_usiuario`
    FOREIGN KEY (`idUsuarioRel`)
    REFERENCES `mydb`.`usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 4028
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`cliente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`cliente` ;

CREATE TABLE IF NOT EXISTS `mydb`.`cliente` (
  `idCliente` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `pfpj` VARCHAR(45) NOT NULL,
  `nome_razao` VARCHAR(100) NOT NULL,
  `nomeFantasia` VARCHAR(100) NULL DEFAULT NULL,
  `cpf` VARCHAR(14) NULL DEFAULT NULL,
  `cnpj` VARCHAR(18) NULL DEFAULT NULL,
  `dataNasc` DATE NULL DEFAULT NULL,
  `inscEstadual` VARCHAR(45) NULL DEFAULT NULL,
  `contatoNome` VARCHAR(100) NULL DEFAULT NULL,
  `contatoCPF` VARCHAR(45) NULL DEFAULT NULL,
  `contatoApelido` VARCHAR(100) NULL DEFAULT NULL,
  `contatoRG` VARCHAR(45) NULL DEFAULT NULL,
  `tel` VARCHAR(18) NULL DEFAULT NULL,
  `telCel` VARCHAR(18) NULL DEFAULT NULL,
  `telCom` VARCHAR(18) NULL DEFAULT NULL,
  `idNextel` VARCHAR(16) NULL DEFAULT NULL,
  `nextel` VARCHAR(18) NULL DEFAULT NULL,
  `email` VARCHAR(150) NULL DEFAULT NULL,
  `idUsuarioRel` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idCadastroRel` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idProfissionalRel` INT(10) UNSIGNED NULL DEFAULT NULL,
  `credito` DECIMAL(15,4) NULL DEFAULT NULL,
  `incompleto` TINYINT(1) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idCliente`),
  INDEX `fk_Cliente_Usuario1_idx` (`idUsuarioRel` ASC),
  INDEX `fk_Cliente_Cliente1_idx` (`idCadastroRel` ASC),
  INDEX `fk_Cliente_Profissional1_idx` (`idProfissionalRel` ASC),
  INDEX `fk_Cadastro_Produto_idx` (`idCliente` ASC),
  FULLTEXT INDEX `idxFT` (`nome_razao`, `nomeFantasia`, `cpf`, `cnpj`),
  CONSTRAINT `fk_Cliente_Cliente1`
    FOREIGN KEY (`idCadastroRel`)
    REFERENCES `mydb`.`cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Cliente_Profissional1`
    FOREIGN KEY (`idProfissionalRel`)
    REFERENCES `mydb`.`profissional` (`idProfissional`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Cliente_Usuario1`
    FOREIGN KEY (`idUsuarioRel`)
    REFERENCES `mydb`.`usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 17908
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`cliente_has_endereco`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`cliente_has_endereco` ;

CREATE TABLE IF NOT EXISTS `mydb`.`cliente_has_endereco` (
  `idEndereco` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idCliente` INT(10) UNSIGNED NULL DEFAULT NULL,
  `descricao` VARCHAR(100) NULL DEFAULT NULL,
  `cep` VARCHAR(10) NULL DEFAULT NULL,
  `logradouro` VARCHAR(90) NULL DEFAULT NULL,
  `numero` VARCHAR(45) NULL DEFAULT NULL,
  `complemento` VARCHAR(100) NULL DEFAULT NULL,
  `bairro` VARCHAR(72) NULL DEFAULT NULL,
  `cidade` VARCHAR(50) NULL DEFAULT NULL,
  `uf` VARCHAR(45) NULL DEFAULT NULL,
  `codUF` INT(11) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idEndereco`),
  INDEX `fk_Cliente_has_Endereco_Cliente1_idx` (`idCliente` ASC),
  CONSTRAINT `fk_Cliente_has_Endereco_Cliente1`
    FOREIGN KEY (`idCliente`)
    REFERENCES `mydb`.`cliente` (`idCliente`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 9412
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`conta_a_pagar_has_pagamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`conta_a_pagar_has_pagamento` ;

CREATE TABLE IF NOT EXISTS `mydb`.`conta_a_pagar_has_pagamento` (
  `idPagamento` INT(11) NOT NULL AUTO_INCREMENT,
  `dataEmissao` DATE NULL DEFAULT NULL,
  `idCompra` INT(11) NULL DEFAULT NULL,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `contraParte` VARCHAR(90) NULL DEFAULT NULL,
  `nfe` INT NULL DEFAULT NULL,
  `valor` DECIMAL(15,4) NOT NULL,
  `tipo` VARCHAR(45) NOT NULL,
  `parcela` INT(11) NULL DEFAULT NULL,
  `dataPagamento` DATE NULL DEFAULT NULL,
  `observacao` VARCHAR(200) NULL DEFAULT NULL,
  `status` VARCHAR(45) NOT NULL DEFAULT 'PENDENTE',
  `dataRealizado` DATE NULL DEFAULT NULL,
  `valorReal` DECIMAL(15,4) NULL DEFAULT NULL,
  `tipoReal` VARCHAR(45) NULL DEFAULT NULL,
  `parcelaReal` INT(11) NULL DEFAULT NULL,
  `contaDestino` VARCHAR(45) NULL DEFAULT NULL,
  `tipoDet` VARCHAR(45) NULL DEFAULT NULL,
  `centroCusto` VARCHAR(45) NULL DEFAULT NULL,
  `grupo` VARCHAR(45) NULL DEFAULT NULL,
  `subGrupo` VARCHAR(45) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idPagamento`),
  UNIQUE INDEX `idPagamento_UNIQUE` (`idPagamento` ASC),
  INDEX `contapagar_idLoja_idx` (`idLoja` ASC),
  INDEX `idCompra` (`idCompra` ASC),
  INDEX `index3_pagar` (`status` ASC),
  INDEX `index4_pagar` (`dataPagamento` ASC, `status` ASC),
  INDEX `index5_pagar` (`status` ASC, `desativado` ASC),
  INDEX `index6_pagar` (`idPagamento` ASC, `nfe` ASC, `valorReal` ASC),
  INDEX `index7_pagar` (`nfe` ASC),
  CONSTRAINT `contapagar_idLoja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `mydb`.`loja` (`idLoja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 86294
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`conta_a_receber_has_pagamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`conta_a_receber_has_pagamento` ;

CREATE TABLE IF NOT EXISTS `mydb`.`conta_a_receber_has_pagamento` (
  `idPagamento` INT(11) NOT NULL AUTO_INCREMENT,
  `dataEmissao` DATE NULL DEFAULT NULL,
  `idVenda` VARCHAR(30) NULL DEFAULT NULL,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `contraParte` VARCHAR(90) NULL DEFAULT NULL,
  `nfe` VARCHAR(45) NULL DEFAULT NULL,
  `valor` DECIMAL(15,4) NOT NULL,
  `tipo` VARCHAR(45) NOT NULL,
  `parcela` INT(11) NULL DEFAULT NULL,
  `dataPagamento` DATE NULL DEFAULT NULL,
  `observacao` VARCHAR(200) NULL DEFAULT NULL,
  `status` VARCHAR(45) NOT NULL DEFAULT 'PENDENTE',
  `representacao` TINYINT(1) NOT NULL DEFAULT '0',
  `dataRealizado` DATE NULL DEFAULT NULL,
  `valorReal` DECIMAL(15,4) NULL DEFAULT NULL,
  `tipoReal` VARCHAR(45) NULL DEFAULT NULL,
  `parcelaReal` INT(11) NULL DEFAULT NULL,
  `contaDestino` VARCHAR(45) NULL DEFAULT NULL,
  `tipoDet` VARCHAR(45) NULL DEFAULT NULL,
  `centroCusto` INT(11) NULL DEFAULT NULL,
  `grupo` VARCHAR(45) NULL DEFAULT NULL,
  `subGrupo` VARCHAR(45) NULL DEFAULT NULL,
  `comissao` TINYINT(1) NOT NULL DEFAULT '0',
  `taxa` TINYINT(1) NOT NULL DEFAULT '0',
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idPagamento`),
  UNIQUE INDEX `idPagamento_UNIQUE` (`idPagamento` ASC),
  INDEX `fk_Conta_Venda_idx` (`idVenda` ASC),
  INDEX `contareceber_idLoja_idx` (`idLoja` ASC),
  INDEX `index3` (`status` ASC),
  INDEX `index4` (`dataPagamento` ASC, `representacao` ASC, `status` ASC),
  CONSTRAINT `contareceber_idLoja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `mydb`.`loja` (`idLoja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Conta_Venda2`
    FOREIGN KEY (`idVenda`)
    REFERENCES `mydb`.`venda` (`idVenda`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 68609
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`despesa`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`despesa` ;

CREATE TABLE IF NOT EXISTS `mydb`.`despesa` (
  `idDepesa` INT(11) NOT NULL AUTO_INCREMENT,
  `tipo` VARCHAR(90) NULL DEFAULT NULL,
  `receita` TINYINT(1) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idDepesa`))
ENGINE = InnoDB
AUTO_INCREMENT = 37
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`estoque`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`estoque` ;

CREATE TABLE IF NOT EXISTS `mydb`.`estoque` (
  `idEstoque` INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idNFe` INT(11) UNSIGNED NULL DEFAULT NULL,
  `recebidoPor` VARCHAR(45) NULL DEFAULT NULL,
  `status` VARCHAR(45) NULL DEFAULT 'TEMP',
  `idProduto` INT(10) UNSIGNED NULL DEFAULT NULL,
  `fornecedor` VARCHAR(100) NULL DEFAULT NULL,
  `descricao` VARCHAR(250) NULL DEFAULT NULL,
  `observacao` VARCHAR(200) NULL DEFAULT NULL,
  `lote` VARCHAR(45) NULL DEFAULT NULL,
  `local` VARCHAR(100) NULL DEFAULT 'TEMP',
  `bloco` VARCHAR(45) NULL DEFAULT NULL,
  `quant` DECIMAL(15,4) NULL DEFAULT NULL,
  `quantUpd` INT(11) NOT NULL DEFAULT '0',
  `un` VARCHAR(45) NULL DEFAULT NULL,
  `caixas` DOUBLE NULL DEFAULT NULL,
  `codBarras` VARCHAR(45) NULL DEFAULT NULL,
  `codComercial` VARCHAR(45) NULL DEFAULT NULL,
  `ncm` VARCHAR(45) NULL DEFAULT NULL,
  `cfop` VARCHAR(45) NULL DEFAULT NULL,
  `valorUnid` DECIMAL(15,4) NULL DEFAULT NULL,
  `valor` DECIMAL(15,4) NULL DEFAULT NULL,
  `codBarrasTrib` VARCHAR(45) NULL DEFAULT NULL,
  `unTrib` VARCHAR(45) NULL DEFAULT NULL,
  `quantTrib` DECIMAL(15,4) NULL DEFAULT NULL,
  `valorTrib` DECIMAL(15,4) NULL DEFAULT NULL,
  `desconto` DECIMAL(15,4) NULL DEFAULT NULL,
  `compoeTotal` INT(11) NULL DEFAULT NULL,
  `numeroPedido` VARCHAR(45) NULL DEFAULT NULL,
  `itemPedido` INT(11) NULL DEFAULT NULL,
  `tipoICMS` VARCHAR(45) NULL DEFAULT NULL,
  `orig` VARCHAR(45) NULL DEFAULT NULL,
  `cstICMS` VARCHAR(45) NULL DEFAULT NULL,
  `modBC` VARCHAR(45) NULL DEFAULT NULL,
  `vBC` DECIMAL(15,4) NULL DEFAULT NULL,
  `pICMS` DECIMAL(15,4) NULL DEFAULT NULL,
  `vICMS` DECIMAL(15,4) NULL DEFAULT NULL,
  `modBCST` VARCHAR(45) NULL DEFAULT NULL,
  `pMVAST` DECIMAL(15,4) NULL DEFAULT NULL,
  `vBCST` DECIMAL(15,4) NULL DEFAULT NULL,
  `pICMSST` DECIMAL(15,4) NULL DEFAULT NULL,
  `vICMSST` DECIMAL(15,4) NULL DEFAULT NULL,
  `cEnq` VARCHAR(45) NULL DEFAULT NULL,
  `cstIPI` VARCHAR(45) NULL DEFAULT NULL,
  `vBCIPI` DECIMAL(15,4) NULL DEFAULT NULL,
  `pIPI` DECIMAL(15,4) NULL DEFAULT NULL,
  `vIPI` DECIMAL(15,4) NULL DEFAULT NULL,
  `cstPIS` VARCHAR(45) NULL DEFAULT NULL,
  `vBCPIS` DECIMAL(15,4) NULL DEFAULT NULL,
  `pPIS` DECIMAL(15,4) NULL DEFAULT NULL,
  `vPIS` DECIMAL(15,4) NULL DEFAULT NULL,
  `cstCOFINS` VARCHAR(45) NULL DEFAULT NULL,
  `vBCCOFINS` DECIMAL(15,4) NULL DEFAULT NULL,
  `pCOFINS` DECIMAL(15,4) NULL DEFAULT NULL,
  `vCOFINS` DECIMAL(15,4) NULL DEFAULT NULL,
  `valorGare` DECIMAL(15,4) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idEstoque`),
  UNIQUE INDEX `idEstoque_UNIQUE` (`idEstoque` ASC),
  INDEX `estoque_idProduto_idx` (`idProduto` ASC),
  INDEX `estoque_recebido_idx` (`recebidoPor` ASC),
  INDEX `estoque_nfe_idx` (`idNFe` ASC),
  INDEX `index5_estoque` (`idEstoque` ASC, `idNFe` ASC, `valor` ASC, `tipoICMS` ASC),
  FULLTEXT INDEX `index4` (`descricao`, `codComercial`))
ENGINE = InnoDB
AUTO_INCREMENT = 17222
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`fornecedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`fornecedor` ;

CREATE TABLE IF NOT EXISTS `mydb`.`fornecedor` (
  `idFornecedor` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `razaoSocial` VARCHAR(45) NOT NULL,
  `nomeFantasia` VARCHAR(45) NULL DEFAULT NULL,
  `cnpj` VARCHAR(18) NULL DEFAULT NULL,
  `inscEstadual` VARCHAR(45) NULL DEFAULT NULL,
  `contatoNome` VARCHAR(45) NULL DEFAULT NULL,
  `contatoCPF` VARCHAR(45) NULL DEFAULT NULL,
  `contatoApelido` VARCHAR(45) NULL DEFAULT NULL,
  `contatoRG` VARCHAR(45) NULL DEFAULT NULL,
  `tel` VARCHAR(18) NULL DEFAULT NULL,
  `telCel` VARCHAR(18) NULL DEFAULT NULL,
  `telCom` VARCHAR(18) NULL DEFAULT NULL,
  `idNextel` VARCHAR(16) NULL DEFAULT NULL,
  `nextel` VARCHAR(18) NULL DEFAULT NULL,
  `email` VARCHAR(300) NULL DEFAULT NULL,
  `comissao1` DOUBLE NULL DEFAULT NULL,
  `comissao2` DOUBLE NULL DEFAULT NULL,
  `comissaoLoja` DOUBLE NULL DEFAULT NULL,
  `aliquotaSt` DOUBLE NULL DEFAULT '0',
  `st` VARCHAR(45) NULL DEFAULT 'Sem ST',
  `especialidade` INT(10) NULL DEFAULT '0',
  `representacao` TINYINT(1) NOT NULL DEFAULT '0',
  `validadeProdutos` DATE NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idFornecedor`),
  INDEX `fornecedor_view` (`idFornecedor` ASC, `razaoSocial` ASC, `comissaoLoja` ASC),
  INDEX `fornecedor_view2` (`razaoSocial` ASC),
  FULLTEXT INDEX `idxFT` (`razaoSocial`, `nomeFantasia`, `cnpj`, `contatoCPF`))
ENGINE = InnoDB
AUTO_INCREMENT = 298
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`produto` ;

CREATE TABLE IF NOT EXISTS `mydb`.`produto` (
  `idProduto` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idProdutoUpd` INT(11) NOT NULL DEFAULT '0',
  `idEstoque` INT(11) UNSIGNED NULL DEFAULT NULL,
  `idFornecedor` INT(10) UNSIGNED NOT NULL,
  `idFornecedorUpd` INT(11) NOT NULL DEFAULT '0',
  `fornecedor` VARCHAR(100) NOT NULL,
  `fornecedorUpd` INT(11) NOT NULL DEFAULT '0',
  `descricao` VARCHAR(250) NOT NULL,
  `descricaoUpd` INT(11) NOT NULL DEFAULT '0',
  `estoqueRestante` DECIMAL(15,4) NULL DEFAULT NULL,
  `estoqueRestanteUpd` INT(11) NOT NULL DEFAULT '0',
  `un` VARCHAR(10) NOT NULL,
  `unUpd` INT(11) NOT NULL DEFAULT '0',
  `un2` VARCHAR(10) NULL DEFAULT NULL,
  `un2Upd` INT(11) NULL DEFAULT '0',
  `colecao` VARCHAR(200) NULL DEFAULT NULL,
  `colecaoUpd` INT(11) NOT NULL DEFAULT '0',
  `tipo` VARCHAR(100) NULL DEFAULT NULL,
  `tipoUpd` INT(11) NOT NULL DEFAULT '0',
  `minimo` DOUBLE NULL DEFAULT NULL,
  `minimoUpd` INT(11) NOT NULL DEFAULT '0',
  `multiplo` DOUBLE NULL DEFAULT NULL,
  `multiploUpd` INT(11) NULL DEFAULT '0',
  `m2cx` DECIMAL(15,4) NULL DEFAULT NULL,
  `m2cxUpd` INT(11) NOT NULL DEFAULT '0',
  `pccx` DECIMAL(15,4) NULL DEFAULT NULL,
  `pccxUpd` INT(11) NOT NULL DEFAULT '0',
  `kgcx` DECIMAL(15,4) NULL DEFAULT NULL,
  `kgcxUpd` INT(11) NOT NULL DEFAULT '0',
  `formComercial` VARCHAR(100) NULL DEFAULT NULL,
  `formComercialUpd` INT(11) NOT NULL DEFAULT '0',
  `codComercial` VARCHAR(100) NOT NULL,
  `codComercialUpd` INT(11) NOT NULL DEFAULT '0',
  `codBarras` VARCHAR(100) NULL DEFAULT '0',
  `codBarrasUpd` INT(11) NOT NULL DEFAULT '0',
  `ncm` VARCHAR(10) NULL DEFAULT NULL,
  `ncmUpd` INT(11) NOT NULL DEFAULT '0',
  `ncmEx` VARCHAR(2) NULL DEFAULT NULL,
  `ncmExUpd` INT(11) NOT NULL DEFAULT '0',
  `cfop` VARCHAR(4) NULL DEFAULT NULL,
  `cfopUpd` INT(11) NOT NULL DEFAULT '0',
  `icms` DECIMAL(15,4) NULL DEFAULT NULL,
  `icmsUpd` INT(11) NOT NULL DEFAULT '0',
  `cst` VARCHAR(3) NULL DEFAULT '000',
  `cstUpd` INT(11) NOT NULL DEFAULT '0',
  `qtdPallet` DECIMAL(15,4) NULL DEFAULT NULL,
  `qtdPalletUpd` INT(11) NOT NULL DEFAULT '0',
  `custo` DECIMAL(15,4) NOT NULL,
  `custoUpd` INT(11) NOT NULL DEFAULT '0',
  `ipi` DECIMAL(15,4) NULL DEFAULT NULL,
  `ipiUpd` INT(11) NOT NULL DEFAULT '0',
  `st` DECIMAL(15,4) NULL DEFAULT NULL,
  `stUpd` INT(11) NOT NULL DEFAULT '0',
  `sticms` DECIMAL(15,4) NULL DEFAULT NULL,
  `sticmsUpd` INT(11) NULL DEFAULT NULL,
  `mva` DECIMAL(15,4) NULL DEFAULT NULL,
  `mvaUpd` INT(11) NULL DEFAULT NULL,
  `precoVenda` DECIMAL(15,4) NULL DEFAULT NULL,
  `precoVendaUpd` INT(11) NOT NULL DEFAULT '0',
  `markup` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `markupUpd` INT(11) NOT NULL DEFAULT '0',
  `comissao` DECIMAL(15,4) NULL DEFAULT NULL,
  `comissaoUpd` INT(11) NOT NULL DEFAULT '0',
  `observacoes` VARCHAR(800) NULL DEFAULT NULL,
  `observacoesUpd` INT(11) NOT NULL DEFAULT '0',
  `origem` INT(11) NULL DEFAULT NULL,
  `origemUpd` INT(11) NOT NULL DEFAULT '0',
  `temLote` VARCHAR(5) NULL DEFAULT 'NÃO',
  `temLoteUpd` INT(11) NOT NULL DEFAULT '0',
  `ui` VARCHAR(10) NOT NULL DEFAULT '0',
  `uiUpd` INT(11) NOT NULL DEFAULT '0',
  `validade` DATE NULL DEFAULT NULL,
  `validadeUpd` INT(11) NOT NULL DEFAULT '0',
  `descontinuado` TINYINT(1) NOT NULL DEFAULT '0',
  `descontinuadoUpd` INT(11) NOT NULL DEFAULT '0',
  `atualizarTabelaPreco` TINYINT(1) NOT NULL DEFAULT '0',
  `representacao` TINYINT(1) NOT NULL DEFAULT '0',
  `estoque` TINYINT(1) NULL DEFAULT '0',
  `promocao` TINYINT(1) NULL DEFAULT '0',
  `idProdutoRelacionado` INT(11) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idProduto`),
  UNIQUE INDEX `idProduto_UNIQUE` (`idProduto` ASC),
  INDEX `index` (`fornecedor` ASC, `descricao` ASC, `colecao` ASC, `codComercial` ASC, `formComercial` ASC, `ui` ASC),
  INDEX `descontinuado` (`descontinuado` ASC),
  INDEX `fk_Produto_Estoque_idx` (`idEstoque` ASC),
  INDEX `fk_Produto_Fornecedor_idx` (`idFornecedor` ASC),
  FULLTEXT INDEX `idxFT` (`fornecedor`, `descricao`, `colecao`, `codComercial`),
  FULLTEXT INDEX `index7` (`fornecedor`),
  CONSTRAINT `fk_Produto_Estoque`
    FOREIGN KEY (`idEstoque`)
    REFERENCES `mydb`.`estoque` (`idEstoque`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Produto_Fornecedor`
    FOREIGN KEY (`idFornecedor`)
    REFERENCES `mydb`.`fornecedor` (`idFornecedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 281954
DEFAULT CHARACTER SET = utf8
COMMENT = '													'
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`nfe`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`nfe` ;

CREATE TABLE IF NOT EXISTS `mydb`.`nfe` (
  `idNFe` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idVenda` VARCHAR(30) NULL DEFAULT NULL,
  `numeroNFe` INT(11) NULL DEFAULT NULL,
  `tipo` VARCHAR(45) NOT NULL,
  `xml` MEDIUMTEXT NULL DEFAULT NULL,
  `status` VARCHAR(45) NOT NULL DEFAULT 'AUTORIZADO',
  `cnpjDest` VARCHAR(14) NULL DEFAULT NULL,
  `cnpjOrig` VARCHAR(14) NULL DEFAULT NULL,
  `chaveAcesso` VARCHAR(50) NOT NULL,
  `obs` VARCHAR(500) NULL DEFAULT NULL,
  `transportadora` VARCHAR(100) NULL DEFAULT NULL,
  `gare` DECIMAL NULL DEFAULT NULL,
  `gareData` TIMESTAMP NULL DEFAULT NULL,
  `valor` DECIMAL(15,4) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idNFe`),
  INDEX `nfe_tipo_index` (`idNFe` ASC, `tipo` ASC, `numeroNFe` ASC),
  INDEX `fk_nfe_venda` (`idVenda` ASC),
  INDEX `index4_nfe` (`numeroNFe` ASC),
  FULLTEXT INDEX `index3` (`cnpjDest`),
  CONSTRAINT `fk_nfe_venda`
    FOREIGN KEY (`idVenda`)
    REFERENCES `mydb`.`venda` (`idVenda`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 24015
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`venda_has_produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`venda_has_produto` ;

CREATE TABLE IF NOT EXISTS `mydb`.`venda_has_produto` (
  `idVendaProduto` INT(11) NOT NULL AUTO_INCREMENT,
  `idRelacionado` INT(11) NULL DEFAULT NULL,
  `selecionado` TINYINT(1) NULL DEFAULT '0',
  `entregou` VARCHAR(100) NULL DEFAULT NULL,
  `recebeu` VARCHAR(100) NULL DEFAULT NULL,
  `status` VARCHAR(45) NULL DEFAULT NULL,
  `statusOriginal` VARCHAR(45) NULL DEFAULT NULL,
  `idCompra` INT(11) UNSIGNED NULL DEFAULT NULL,
  `idNFeSaida` INT(11) UNSIGNED NULL DEFAULT NULL,
  `idNFeFutura` INT(11) UNSIGNED NULL DEFAULT NULL,
  `fornecedor` VARCHAR(45) NOT NULL,
  `idVenda` VARCHAR(30) NOT NULL,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `idProduto` INT(10) UNSIGNED NOT NULL,
  `produto` VARCHAR(150) NULL DEFAULT NULL,
  `obs` VARCHAR(1000) NOT NULL,
  `lote` VARCHAR(45) NULL DEFAULT NULL,
  `prcUnitario` DECIMAL(15,4) NOT NULL,
  `descUnitario` DECIMAL(15,4) NULL DEFAULT NULL,
  `caixas` DOUBLE NOT NULL,
  `quant` DECIMAL(15,4) NOT NULL,
  `un` VARCHAR(45) NOT NULL,
  `unCaixa` DECIMAL(15,4) NOT NULL,
  `codComercial` VARCHAR(100) NOT NULL,
  `formComercial` VARCHAR(100) NOT NULL,
  `parcial` DECIMAL(15,4) NOT NULL,
  `desconto` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `parcialDesc` DECIMAL(15,4) NOT NULL,
  `descGlobal` DECIMAL(15,4) NOT NULL,
  `total` DECIMAL(15,4) NOT NULL,
  `mostrarDesconto` TINYINT(1) NOT NULL DEFAULT '0',
  `estoque` TINYINT(1) NULL DEFAULT NULL,
  `promocao` TINYINT(1) NULL DEFAULT NULL,
  `reposicaoEntrega` TINYINT(1) NULL DEFAULT NULL,
  `reposicaoReceb` TINYINT(1) NULL DEFAULT NULL,
  `dataPrevCompra` DATE NULL DEFAULT NULL,
  `dataRealCompra` DATE NULL DEFAULT NULL,
  `dataPrevConf` DATE NULL DEFAULT NULL,
  `dataRealConf` DATE NULL DEFAULT NULL,
  `dataPrevFat` DATE NULL DEFAULT NULL,
  `dataRealFat` DATE NULL DEFAULT NULL,
  `dataPrevColeta` DATE NULL DEFAULT NULL,
  `dataRealColeta` DATE NULL DEFAULT NULL,
  `dataPrevReceb` DATE NULL DEFAULT NULL,
  `dataRealReceb` DATE NULL DEFAULT NULL,
  `dataPrevEnt` DATE NULL DEFAULT NULL,
  `dataRealEnt` DATE NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idVendaProduto`),
  UNIQUE INDEX `idVendaProduto_UNIQUE` (`idVendaProduto` ASC),
  INDEX `fk_vendaproduto_produto_idx` (`idProduto` ASC),
  INDEX `fk_vendaproduto_venda_idx` (`idVenda` ASC),
  INDEX `fk_vendaproduto_relac_idx` (`idRelacionado` ASC),
  INDEX `fk_vendaproduto_loja_idx` (`idLoja` ASC),
  INDEX `fk_vendaproduto_nfe_idx` (`idNFeSaida` ASC, `idNFeFutura` ASC),
  INDEX `fk_vendaproduto_nfe_futura_idx` (`idNFeFutura` ASC),
  CONSTRAINT `fk_vendaproduto_loja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `mydb`.`loja` (`idLoja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_vendaproduto_nfe`
    FOREIGN KEY (`idNFeSaida`)
    REFERENCES `mydb`.`nfe` (`idNFe`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_vendaproduto_nfe_futura`
    FOREIGN KEY (`idNFeFutura`)
    REFERENCES `mydb`.`nfe` (`idNFe`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_vendaproduto_produto`
    FOREIGN KEY (`idProduto`)
    REFERENCES `mydb`.`produto` (`idProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_vendaproduto_relac`
    FOREIGN KEY (`idRelacionado`)
    REFERENCES `mydb`.`venda_has_produto` (`idVendaProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_vendaproduto_venda`
    FOREIGN KEY (`idVenda`)
    REFERENCES `mydb`.`venda` (`idVenda`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 62818
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`pedido_fornecedor_has_produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`pedido_fornecedor_has_produto` ;

CREATE TABLE IF NOT EXISTS `mydb`.`pedido_fornecedor_has_produto` (
  `idPedido` INT(11) NOT NULL AUTO_INCREMENT,
  `selecionado` TINYINT(1) NULL DEFAULT '0',
  `aliquotaSt` DOUBLE NULL DEFAULT NULL,
  `st` VARCHAR(45) NULL DEFAULT NULL,
  `status` VARCHAR(45) NOT NULL DEFAULT 'PENDENTE',
  `statusFinanceiro` VARCHAR(45) NULL DEFAULT 'PENDENTE',
  `ordemCompra` INT(11) NULL DEFAULT NULL,
  `ordemRepresentacao` VARCHAR(45) NULL DEFAULT NULL,
  `idVenda` VARCHAR(30) NULL DEFAULT NULL,
  `idVendaProduto` INT(11) NULL DEFAULT NULL,
  `idCompra` INT(11) UNSIGNED NULL DEFAULT NULL,
  `fornecedor` VARCHAR(45) NOT NULL,
  `idProduto` INT(11) UNSIGNED NULL DEFAULT NULL,
  `descricao` VARCHAR(200) NULL DEFAULT NULL,
  `obs` VARCHAR(400) NULL DEFAULT NULL,
  `colecao` VARCHAR(200) NULL DEFAULT NULL,
  `codComercial` VARCHAR(100) NULL DEFAULT NULL,
  `quant` DECIMAL(15,4) NULL DEFAULT NULL,
  `quantUpd` INT(11) NOT NULL DEFAULT '0',
  `quantConsumida` DECIMAL(15,4) NULL DEFAULT NULL,
  `un` VARCHAR(45) NULL DEFAULT NULL,
  `un2` VARCHAR(45) NULL DEFAULT NULL,
  `caixas` DOUBLE NULL DEFAULT NULL,
  `prcUnitario` DECIMAL(15,4) NULL DEFAULT NULL,
  `preco` DECIMAL(15,4) NULL DEFAULT NULL,
  `kgcx` DECIMAL(15,4) NULL DEFAULT NULL,
  `formComercial` VARCHAR(100) NULL DEFAULT NULL,
  `codBarras` VARCHAR(45) NULL DEFAULT NULL,
  `dataPrevCompra` DATE NULL DEFAULT NULL,
  `dataRealCompra` DATE NULL DEFAULT NULL,
  `dataPrevConf` DATE NULL DEFAULT NULL,
  `dataRealConf` DATE NULL DEFAULT NULL,
  `dataPrevFat` DATE NULL DEFAULT NULL,
  `dataRealFat` DATE NULL DEFAULT NULL,
  `dataPrevColeta` DATE NULL DEFAULT NULL,
  `dataRealColeta` DATE NULL DEFAULT NULL,
  `dataPrevReceb` DATE NULL DEFAULT NULL,
  `dataRealReceb` DATE NULL DEFAULT NULL,
  `dataPrevEnt` DATE NULL DEFAULT NULL,
  `dataRealEnt` DATE NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idPedido`),
  INDEX `idCompra` (`idCompra` ASC),
  INDEX `idVenda` (`idVenda` ASC),
  INDEX `pedidofornecedor_idvendaproduto` (`idVendaProduto` ASC),
  INDEX `fk_PedidoForn_Produto_idx` (`idProduto` ASC),
  CONSTRAINT `fk_PedidoForn_Produto`
    FOREIGN KEY (`idProduto`)
    REFERENCES `mydb`.`produto` (`idProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PedidoForn_Venda`
    FOREIGN KEY (`idVenda`)
    REFERENCES `mydb`.`venda` (`idVenda`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_PedidoForn_VendaProduto`
    FOREIGN KEY (`idVendaProduto`)
    REFERENCES `mydb`.`venda_has_produto` (`idVendaProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 48999
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`estoque_has_compra`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`estoque_has_compra` ;

CREATE TABLE IF NOT EXISTS `mydb`.`estoque_has_compra` (
  `idEstoque` INT(11) UNSIGNED NOT NULL,
  `idCompra` INT(11) UNSIGNED NOT NULL,
  `idPedido` INT(11) NOT NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idEstoque`, `idCompra`, `idPedido`),
  INDEX `fk_estoquecompra_compra_idx` (`idCompra` ASC),
  INDEX `fk_estoquecompra_pedido_idx` (`idPedido` ASC),
  CONSTRAINT `fk_estoquecompra_compra`
    FOREIGN KEY (`idCompra`)
    REFERENCES `mydb`.`pedido_fornecedor_has_produto` (`idCompra`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_estoquecompra_estoque`
    FOREIGN KEY (`idEstoque`)
    REFERENCES `mydb`.`estoque` (`idEstoque`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_estoquecompra_pedido`
    FOREIGN KEY (`idPedido`)
    REFERENCES `mydb`.`pedido_fornecedor_has_produto` (`idPedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`estoque_has_consumo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`estoque_has_consumo` ;

CREATE TABLE IF NOT EXISTS `mydb`.`estoque_has_consumo` (
  `idConsumo` INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idEstoque` INT(11) UNSIGNED NOT NULL,
  `idVendaProduto` INT(11) NULL DEFAULT NULL,
  `idPedido` INT(11) NULL DEFAULT NULL,
  `status` VARCHAR(45) NULL DEFAULT 'TEMP',
  `local` VARCHAR(100) NULL DEFAULT 'TEMP',
  `idProduto` INT(11) UNSIGNED NULL DEFAULT NULL,
  `fornecedor` VARCHAR(100) NULL DEFAULT NULL,
  `descricao` VARCHAR(250) NULL DEFAULT NULL,
  `quant` DECIMAL(15,4) NULL DEFAULT NULL,
  `quantUpd` INT(11) NOT NULL DEFAULT '0',
  `un` VARCHAR(45) NULL DEFAULT NULL,
  `caixas` DOUBLE NULL DEFAULT NULL,
  `codBarras` VARCHAR(45) NULL DEFAULT NULL,
  `codComercial` VARCHAR(45) NULL DEFAULT NULL,
  `ncm` VARCHAR(45) NULL DEFAULT NULL,
  `cfop` VARCHAR(45) NULL DEFAULT NULL,
  `valorUnid` DECIMAL(15,4) NULL DEFAULT NULL,
  `valor` DECIMAL(15,4) NULL DEFAULT NULL,
  `codBarrasTrib` VARCHAR(45) NULL DEFAULT NULL,
  `unTrib` VARCHAR(45) NULL DEFAULT NULL,
  `quantTrib` DECIMAL(15,4) NULL DEFAULT NULL,
  `valorTrib` DECIMAL(15,4) NULL DEFAULT NULL,
  `desconto` DECIMAL(15,4) NULL DEFAULT NULL,
  `compoeTotal` INT(11) NULL DEFAULT NULL,
  `numeroPedido` VARCHAR(45) NULL DEFAULT NULL,
  `itemPedido` INT(11) NULL DEFAULT NULL,
  `tipoICMS` VARCHAR(45) NULL DEFAULT NULL,
  `orig` VARCHAR(45) NULL DEFAULT NULL,
  `cstICMS` VARCHAR(45) NULL DEFAULT NULL,
  `modBC` VARCHAR(45) NULL DEFAULT NULL,
  `vBC` DECIMAL(15,4) NULL DEFAULT NULL,
  `pICMS` DECIMAL(15,4) NULL DEFAULT NULL,
  `vICMS` DECIMAL(15,4) NULL DEFAULT NULL,
  `modBCST` VARCHAR(45) NULL DEFAULT NULL,
  `pMVAST` DECIMAL(15,4) NULL DEFAULT NULL,
  `vBCST` DECIMAL(15,4) NULL DEFAULT NULL,
  `pICMSST` DECIMAL(15,4) NULL DEFAULT NULL,
  `vICMSST` DECIMAL(15,4) NULL DEFAULT NULL,
  `cEnq` VARCHAR(45) NULL DEFAULT NULL,
  `cstIPI` VARCHAR(45) NULL DEFAULT NULL,
  `cstPIS` VARCHAR(45) NULL DEFAULT NULL,
  `vBCPIS` DECIMAL(15,4) NULL DEFAULT NULL,
  `pPIS` DECIMAL(15,4) NULL DEFAULT NULL,
  `vPIS` DECIMAL(15,4) NULL DEFAULT NULL,
  `cstCOFINS` VARCHAR(45) NULL DEFAULT NULL,
  `vBCCOFINS` DECIMAL(15,4) NULL DEFAULT NULL,
  `pCOFINS` DECIMAL(15,4) NULL DEFAULT NULL,
  `vCOFINS` DECIMAL(15,4) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idConsumo`),
  UNIQUE INDEX `idConsumo_UNIQUE` (`idConsumo` ASC),
  INDEX `estoqueconsumo_idvendaproduto` (`idVendaProduto` ASC),
  INDEX `estoqueconsumo_estoque_idx` (`idEstoque` ASC),
  INDEX `fk_EstoqueConsumo_Produto_idx` (`idProduto` ASC),
  INDEX `estoqueconsumo_pedido_idx` (`idPedido` ASC),
  CONSTRAINT `estoqueconsumo_estoque`
    FOREIGN KEY (`idEstoque`)
    REFERENCES `mydb`.`estoque` (`idEstoque`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `estoqueconsumo_idVendaProduto`
    FOREIGN KEY (`idVendaProduto`)
    REFERENCES `mydb`.`venda_has_produto` (`idVendaProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `estoqueconsumo_pedido`
    FOREIGN KEY (`idPedido`)
    REFERENCES `mydb`.`pedido_fornecedor_has_produto` (`idPedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_EstoqueConsumo_Produto`
    FOREIGN KEY (`idProduto`)
    REFERENCES `mydb`.`produto` (`idProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 49767
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`forma_pagamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`forma_pagamento` ;

CREATE TABLE IF NOT EXISTS `mydb`.`forma_pagamento` (
  `idPagamento` INT(11) NOT NULL AUTO_INCREMENT,
  `pagamento` VARCHAR(45) NULL DEFAULT NULL,
  `parcelas` INT(11) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idPagamento`))
ENGINE = InnoDB
AUTO_INCREMENT = 37
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`forma_pagamento_has_loja`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`forma_pagamento_has_loja` ;

CREATE TABLE IF NOT EXISTS `mydb`.`forma_pagamento_has_loja` (
  `idPagamento` INT(11) NOT NULL,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idPagamento`, `idLoja`),
  INDEX `fk_pagamento_loja_idx` (`idLoja` ASC),
  CONSTRAINT `fk_pag_loja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `mydb`.`loja` (`idLoja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`forma_pagamento_has_taxa`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`forma_pagamento_has_taxa` ;

CREATE TABLE IF NOT EXISTS `mydb`.`forma_pagamento_has_taxa` (
  `idTaxa` INT(11) NOT NULL AUTO_INCREMENT,
  `idPagamento` INT(11) NULL DEFAULT NULL,
  `parcela` INT(11) NULL DEFAULT NULL,
  `taxa` DOUBLE NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idTaxa`),
  INDEX `fk_pagamento_idx` (`idPagamento` ASC),
  CONSTRAINT `fk_pagamento`
    FOREIGN KEY (`idPagamento`)
    REFERENCES `mydb`.`forma_pagamento` (`idPagamento`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 495
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`fornecedor_has_endereco`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`fornecedor_has_endereco` ;

CREATE TABLE IF NOT EXISTS `mydb`.`fornecedor_has_endereco` (
  `idEndereco` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idFornecedor` INT(10) UNSIGNED NULL DEFAULT NULL,
  `descricao` VARCHAR(45) NULL DEFAULT NULL,
  `cep` VARCHAR(10) NULL DEFAULT NULL,
  `logradouro` VARCHAR(90) NULL DEFAULT NULL,
  `numero` VARCHAR(45) NULL DEFAULT NULL,
  `complemento` VARCHAR(45) NULL DEFAULT NULL,
  `bairro` VARCHAR(72) NULL DEFAULT NULL,
  `cidade` VARCHAR(50) NULL DEFAULT NULL,
  `uf` VARCHAR(45) NULL DEFAULT NULL,
  `codUF` INT(11) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idEndereco`),
  INDEX `fk_Fornecedor_has_Endereco_Fornecedor1_idx` (`idFornecedor` ASC),
  CONSTRAINT `fk_Fornecedor_has_Endereco_Fornecedor1`
    FOREIGN KEY (`idFornecedor`)
    REFERENCES `mydb`.`fornecedor` (`idFornecedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 4
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`gare_aliquotas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`gare_aliquotas` ;

CREATE TABLE IF NOT EXISTS `mydb`.`gare_aliquotas` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `ncm` VARCHAR(45) NULL DEFAULT NULL,
  `mva4` DECIMAL(15,4) NULL DEFAULT NULL,
  `mva12` DECIMAL(15,4) NULL DEFAULT NULL,
  `aliq_interna` DECIMAL(15,4) NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 66
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`icms`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`icms` ;

CREATE TABLE IF NOT EXISTS `mydb`.`icms` (
  `idicms` INT(11) NOT NULL AUTO_INCREMENT,
  `origem` VARCHAR(2) NOT NULL,
  `destino` VARCHAR(2) NOT NULL,
  `valor` DOUBLE NULL DEFAULT NULL,
  PRIMARY KEY (`idicms`, `origem`, `destino`))
ENGINE = InnoDB
AUTO_INCREMENT = 2203
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`jobs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`jobs` ;

CREATE TABLE IF NOT EXISTS `mydb`.`jobs` (
  `id` INT(11) NOT NULL,
  `dataEnviado` DATE NULL DEFAULT NULL,
  `dataReferente` DATE NULL DEFAULT NULL,
  `status` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`log`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`log` ;

CREATE TABLE IF NOT EXISTS `mydb`.`log` (
  `idLog` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idUsuario` INT(10) NULL DEFAULT NULL,
  `message` VARCHAR(500) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idLog`),
  INDEX `log_usuario_idx` (`idUsuario` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 391
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`loja_has_conta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`loja_has_conta` ;

CREATE TABLE IF NOT EXISTS `mydb`.`loja_has_conta` (
  `idConta` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idLoja` INT(10) UNSIGNED NULL DEFAULT NULL,
  `banco` VARCHAR(45) NULL DEFAULT NULL,
  `agencia` VARCHAR(45) NULL DEFAULT NULL,
  `conta` VARCHAR(45) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idConta`),
  INDEX `loja_idx` (`idLoja` ASC),
  CONSTRAINT `loja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `mydb`.`loja` (`idLoja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 19
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`loja_has_endereco`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`loja_has_endereco` ;

CREATE TABLE IF NOT EXISTS `mydb`.`loja_has_endereco` (
  `idEndereco` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idLoja` INT(10) UNSIGNED NULL DEFAULT NULL,
  `descricao` VARCHAR(45) NULL DEFAULT NULL,
  `cep` VARCHAR(10) NULL DEFAULT NULL,
  `logradouro` VARCHAR(90) NULL DEFAULT NULL,
  `numero` VARCHAR(45) NULL DEFAULT NULL,
  `complemento` VARCHAR(45) NULL DEFAULT NULL,
  `bairro` VARCHAR(72) NULL DEFAULT NULL,
  `cidade` VARCHAR(50) NULL DEFAULT NULL,
  `uf` VARCHAR(45) NULL DEFAULT NULL,
  `codUF` INT(11) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idEndereco`),
  INDEX `fk_Loja_has_Endereco_Loja1_idx` (`idLoja` ASC),
  CONSTRAINT `fk_Loja_has_Endereco_Loja1`
    FOREIGN KEY (`idLoja`)
    REFERENCES `mydb`.`loja` (`idLoja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 11
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`maintenance`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`maintenance` ;

CREATE TABLE IF NOT EXISTS `mydb`.`maintenance` (
  `id` INT(11) NOT NULL,
  `lastInvalidated` DATE NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`orcamento_has_followup`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`orcamento_has_followup` ;

CREATE TABLE IF NOT EXISTS `mydb`.`orcamento_has_followup` (
  `idFollowup` INT(11) NOT NULL AUTO_INCREMENT,
  `idOrcamento` VARCHAR(30) NOT NULL,
  `idOrcamentoBase` VARCHAR(11) NULL DEFAULT NULL,
  `idLoja` INT(11) NOT NULL,
  `idUsuario` INT(11) NOT NULL,
  `semaforo` INT(11) NOT NULL,
  `observacao` VARCHAR(3000) NOT NULL,
  `dataFollowup` DATETIME NOT NULL,
  `dataProxFollowup` DATETIME NOT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idFollowup`),
  INDEX `orcamentofollowup_orcamento_idx` (`idOrcamento` ASC),
  INDEX `index9` (`idOrcamentoBase` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 33655
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`orcamento_has_produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`orcamento_has_produto` ;

CREATE TABLE IF NOT EXISTS `mydb`.`orcamento_has_produto` (
  `idOrcamentoProduto` INT(11) NOT NULL AUTO_INCREMENT,
  `idOrcamento` VARCHAR(30) NOT NULL,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `idProduto` INT(10) UNSIGNED NOT NULL,
  `fornecedor` VARCHAR(45) NOT NULL,
  `produto` VARCHAR(150) NULL DEFAULT NULL,
  `obs` VARCHAR(1000) NOT NULL,
  `prcUnitario` DECIMAL(15,4) NOT NULL,
  `descUnitario` DECIMAL(15,4) NULL DEFAULT NULL,
  `caixas` DOUBLE NOT NULL,
  `quant` DECIMAL(15,4) NOT NULL,
  `un` VARCHAR(45) NOT NULL,
  `unCaixa` DECIMAL(15,4) NOT NULL,
  `codComercial` VARCHAR(100) NOT NULL,
  `formComercial` VARCHAR(100) NOT NULL,
  `parcial` DECIMAL(15,4) NOT NULL,
  `desconto` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `parcialDesc` DECIMAL(15,4) NOT NULL,
  `descGlobal` DECIMAL(15,4) NOT NULL,
  `total` DECIMAL(15,4) NOT NULL,
  `mostrarDesconto` TINYINT(1) NOT NULL DEFAULT '0',
  `estoque` TINYINT(1) NULL DEFAULT NULL,
  `promocao` TINYINT(1) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idOrcamentoProduto`),
  INDEX `fk_Orcamento_has_Produto_Produto2_idx` (`idProduto` ASC),
  INDEX `fk_Orcamento_has_Produto_Orcamento2_idx` (`idOrcamento` ASC),
  INDEX `fk_Orcamento_has_Produto_Loja2_idx` (`idLoja` ASC),
  CONSTRAINT `fk_orcamentoproduto_loja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `mydb`.`loja` (`idLoja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orcamentoproduto_orcamento`
    FOREIGN KEY (`idOrcamento`)
    REFERENCES `mydb`.`orcamento` (`idOrcamento`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_orcamentoproduto_produto`
    FOREIGN KEY (`idProduto`)
    REFERENCES `mydb`.`produto` (`idProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 244257
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`transportadora`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`transportadora` ;

CREATE TABLE IF NOT EXISTS `mydb`.`transportadora` (
  `idTransportadora` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `razaoSocial` VARCHAR(60) NOT NULL,
  `nomeFantasia` VARCHAR(45) NULL DEFAULT NULL,
  `cnpj` VARCHAR(18) NULL DEFAULT NULL,
  `inscEstadual` VARCHAR(20) NULL DEFAULT NULL,
  `antt` VARCHAR(10) NULL DEFAULT NULL,
  `tel` VARCHAR(18) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idTransportadora`),
  FULLTEXT INDEX `idxFT` (`razaoSocial`, `nomeFantasia`))
ENGINE = InnoDB
AUTO_INCREMENT = 11
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`pedido_transportadora`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`pedido_transportadora` ;

CREATE TABLE IF NOT EXISTS `mydb`.`pedido_transportadora` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `idTransportadora` INT(10) UNSIGNED NOT NULL,
  `idPedido` VARCHAR(30) NOT NULL,
  `tipo` VARCHAR(45) NOT NULL,
  `dataEmissao` DATE NOT NULL,
  `dataEntrega` DATE NULL DEFAULT NULL,
  `status` VARCHAR(45) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`id`, `idTransportadora`, `idPedido`, `tipo`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_PedidoTransportadora_Transportadora1_idx` (`idTransportadora` ASC),
  CONSTRAINT `fk_PedidoTransportadora_Transportadora1`
    FOREIGN KEY (`idTransportadora`)
    REFERENCES `mydb`.`transportadora` (`idTransportadora`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`produto_has_preco`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`produto_has_preco` ;

CREATE TABLE IF NOT EXISTS `mydb`.`produto_has_preco` (
  `idPreco` INT(11) NOT NULL AUTO_INCREMENT,
  `idProduto` INT(10) UNSIGNED NOT NULL,
  `preco` DECIMAL(15,4) NULL DEFAULT NULL,
  `validadeInicio` DATE NULL DEFAULT NULL,
  `validadeFim` DATE NULL DEFAULT NULL,
  `expirado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idPreco`),
  INDEX `fk_Produto_has_Preco_Produto1_idx` (`idProduto` ASC),
  INDEX `validadeFim` (`validadeFim` ASC, `expirado` ASC),
  CONSTRAINT `fk_Produto_has_Preco_Produto1`
    FOREIGN KEY (`idProduto`)
    REFERENCES `mydb`.`produto` (`idProduto`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 2458828
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`profissional_has_endereco`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`profissional_has_endereco` ;

CREATE TABLE IF NOT EXISTS `mydb`.`profissional_has_endereco` (
  `idEndereco` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idProfissional` INT(10) UNSIGNED NULL DEFAULT NULL,
  `descricao` VARCHAR(45) NULL DEFAULT NULL,
  `cep` VARCHAR(10) NULL DEFAULT NULL,
  `logradouro` VARCHAR(90) NULL DEFAULT NULL,
  `numero` VARCHAR(45) NULL DEFAULT NULL,
  `complemento` VARCHAR(45) NULL DEFAULT NULL,
  `bairro` VARCHAR(72) NULL DEFAULT NULL,
  `cidade` VARCHAR(50) NULL DEFAULT NULL,
  `uf` VARCHAR(45) NULL DEFAULT NULL,
  `codUF` INT(11) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idEndereco`),
  INDEX `fk_Profissional_has_Endereco_Profissional1_idx` (`idProfissional` ASC),
  CONSTRAINT `fk_Profissional_has_Endereco_Profissional1`
    FOREIGN KEY (`idProfissional`)
    REFERENCES `mydb`.`profissional` (`idProfissional`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 68
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`temp`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`temp` ;

CREATE TABLE IF NOT EXISTS `mydb`.`temp` (
  `codComercial` VARCHAR(45) NOT NULL,
  `descricao` VARCHAR(45) NULL DEFAULT NULL,
  `lote` VARCHAR(45) NOT NULL,
  `estoque atual` DECIMAL(15,4) NOT NULL,
  `ncm` VARCHAR(45) NULL DEFAULT NULL,
  `cfop` VARCHAR(45) NULL DEFAULT NULL,
  `cst` VARCHAR(45) NULL DEFAULT NULL,
  `pis` VARCHAR(45) NULL DEFAULT NULL,
  `cofins` VARCHAR(45) NULL DEFAULT NULL,
  `icmsst` VARCHAR(45) NULL DEFAULT NULL,
  `un` VARCHAR(45) NULL DEFAULT NULL,
  `fornecedor` VARCHAR(45) NULL DEFAULT NULL,
  `localizacao` VARCHAR(45) NOT NULL,
  `custo` DECIMAL(15,4) NULL DEFAULT NULL,
  `total` DECIMAL(15,4) NULL DEFAULT NULL,
  PRIMARY KEY (`codComercial`, `lote`, `estoque atual`, `localizacao`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`temp_distancia`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`temp_distancia` ;

CREATE TABLE IF NOT EXISTS `mydb`.`temp_distancia` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `idVeiculo` INT(11) NULL DEFAULT NULL,
  `modelo` VARCHAR(45) NULL DEFAULT NULL,
  `dataEvento` DATETIME NULL DEFAULT NULL,
  `evento` INT(11) NULL DEFAULT NULL,
  `origem` VARCHAR(450) NULL DEFAULT NULL,
  `destino` VARCHAR(450) NULL DEFAULT NULL,
  `distancia` INT(11) NULL DEFAULT NULL,
  `duracao` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 13031
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`transportadora_has_endereco`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`transportadora_has_endereco` ;

CREATE TABLE IF NOT EXISTS `mydb`.`transportadora_has_endereco` (
  `idEndereco` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idTransportadora` INT(10) UNSIGNED NULL DEFAULT NULL,
  `descricao` VARCHAR(45) NULL DEFAULT NULL,
  `cep` VARCHAR(10) NULL DEFAULT NULL,
  `logradouro` VARCHAR(90) NULL DEFAULT NULL,
  `numero` VARCHAR(45) NULL DEFAULT NULL,
  `complemento` VARCHAR(45) NULL DEFAULT NULL,
  `bairro` VARCHAR(72) NULL DEFAULT NULL,
  `cidade` VARCHAR(50) NULL DEFAULT NULL,
  `uf` VARCHAR(45) NULL DEFAULT NULL,
  `codUF` INT(11) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idEndereco`),
  INDEX `fk_Transportadora_has_Endereco_Transportadora1_idx` (`idTransportadora` ASC),
  CONSTRAINT `fk_Transportadora_has_Endereco_Transportadora1`
    FOREIGN KEY (`idTransportadora`)
    REFERENCES `mydb`.`transportadora` (`idTransportadora`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 7
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`transportadora_has_veiculo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`transportadora_has_veiculo` ;

CREATE TABLE IF NOT EXISTS `mydb`.`transportadora_has_veiculo` (
  `idVeiculo` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idTransportadora` INT(10) UNSIGNED NULL DEFAULT NULL,
  `modelo` VARCHAR(45) NOT NULL,
  `capacidade` INT(11) NOT NULL,
  `placa` VARCHAR(45) NULL DEFAULT NULL,
  `ufPlaca` VARCHAR(45) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idVeiculo`),
  INDEX `fk_Transportadora_has_Veiculo_Transportadora1_idx` (`idTransportadora` ASC),
  FULLTEXT INDEX `fk_veiculo_fulltext` (`modelo`, `placa`),
  CONSTRAINT `fk_Transportadora_has_Veiculo_Transportadora1`
    FOREIGN KEY (`idTransportadora`)
    REFERENCES `mydb`.`transportadora` (`idTransportadora`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 19
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`usuario_has_permissao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`usuario_has_permissao` ;

CREATE TABLE IF NOT EXISTS `mydb`.`usuario_has_permissao` (
  `idUsuario` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `view_tab_orcamento` TINYINT(1) NOT NULL DEFAULT '0',
  `view_tab_venda` TINYINT(1) NOT NULL DEFAULT '0',
  `view_tab_compra` TINYINT(1) NOT NULL DEFAULT '0',
  `view_tab_logistica` TINYINT(1) NOT NULL DEFAULT '0',
  `view_tab_nfe` TINYINT(1) NOT NULL DEFAULT '0',
  `view_tab_estoque` TINYINT(1) NOT NULL DEFAULT '0',
  `view_tab_financeiro` TINYINT(1) NOT NULL DEFAULT '0',
  `view_tab_relatorio` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idUsuario`),
  CONSTRAINT `fk_permissao_usuario`
    FOREIGN KEY (`idUsuario`)
    REFERENCES `mydb`.`usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 113
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`veiculo_has_produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`veiculo_has_produto` ;

CREATE TABLE IF NOT EXISTS `mydb`.`veiculo_has_produto` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `data` DATETIME NOT NULL,
  `idEvento` INT(11) NOT NULL,
  `idVeiculo` INT(11) UNSIGNED NOT NULL,
  `idEstoque` INT(11) UNSIGNED NULL DEFAULT NULL,
  `idVendaProduto` INT(11) NULL DEFAULT NULL,
  `idVenda` VARCHAR(30) NULL DEFAULT NULL,
  `status` VARCHAR(45) NULL DEFAULT NULL,
  `idCompra` INT(11) UNSIGNED NULL DEFAULT NULL,
  `idNFeSaida` INT(11) UNSIGNED NULL DEFAULT NULL,
  `fornecedor` VARCHAR(45) NULL DEFAULT NULL,
  `idLoja` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idProduto` INT(10) UNSIGNED NULL DEFAULT NULL,
  `produto` VARCHAR(150) NULL DEFAULT NULL,
  `obs` VARCHAR(145) NULL DEFAULT NULL,
  `caixas` DOUBLE NULL DEFAULT NULL,
  `kg` DECIMAL(15,4) NULL DEFAULT NULL,
  `quant` DECIMAL(15,4) NULL DEFAULT NULL,
  `un` VARCHAR(45) NULL DEFAULT NULL,
  `unCaixa` DECIMAL(15,4) NULL DEFAULT NULL,
  `codComercial` VARCHAR(100) NULL DEFAULT NULL,
  `formComercial` VARCHAR(100) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`id`, `idEvento`, `idVeiculo`),
  INDEX `veiculo_transportadora_idx` (`idVeiculo` ASC),
  INDEX `veiculo_estoque_idx` (`idEstoque` ASC),
  INDEX `veiculo_idVendaProduto_idx` (`idVendaProduto` ASC),
  INDEX `veiculo_idVenda_idx` (`idVenda` ASC),
  INDEX `veiculo_nfe_idx` (`idNFeSaida` ASC),
  INDEX `veiculo_loja_idx` (`idLoja` ASC),
  INDEX `veiculo_idProduto_idx` (`idProduto` ASC),
  INDEX `veiculo_compra_idx` (`idCompra` ASC),
  CONSTRAINT `veiculo_compra`
    FOREIGN KEY (`idCompra`)
    REFERENCES `mydb`.`pedido_fornecedor_has_produto` (`idCompra`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `veiculo_estoque`
    FOREIGN KEY (`idEstoque`)
    REFERENCES `mydb`.`estoque` (`idEstoque`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `veiculo_idProduto`
    FOREIGN KEY (`idProduto`)
    REFERENCES `mydb`.`produto` (`idProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `veiculo_idVenda`
    FOREIGN KEY (`idVenda`)
    REFERENCES `mydb`.`venda` (`idVenda`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `veiculo_idVendaProduto`
    FOREIGN KEY (`idVendaProduto`)
    REFERENCES `mydb`.`venda_has_produto` (`idVendaProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `veiculo_loja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `mydb`.`loja` (`idLoja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `veiculo_nfe`
    FOREIGN KEY (`idNFeSaida`)
    REFERENCES `mydb`.`nfe` (`idNFe`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `veiculo_transportadora`
    FOREIGN KEY (`idVeiculo`)
    REFERENCES `mydb`.`transportadora_has_veiculo` (`idVeiculo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 46578
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`venda_has_followup`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`venda_has_followup` ;

CREATE TABLE IF NOT EXISTS `mydb`.`venda_has_followup` (
  `idFollowup` INT(11) NOT NULL AUTO_INCREMENT,
  `idVenda` VARCHAR(30) NOT NULL,
  `idVendaBase` VARCHAR(11) NULL DEFAULT NULL,
  `idLoja` INT(11) UNSIGNED NOT NULL,
  `idUsuario` INT(11) UNSIGNED NOT NULL,
  `tipoOperacao` VARCHAR(200) NULL DEFAULT NULL,
  `observacao` VARCHAR(300) NOT NULL,
  `dataFollowup` DATETIME NOT NULL,
  `dataProxFollowup` DATETIME NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idFollowup`),
  INDEX `orcamentofollowup_orcamento_idx` (`idVenda` ASC),
  INDEX `fk_followup_loja_idx` (`idLoja` ASC),
  INDEX `fk_followup_usuario_idx` (`idUsuario` ASC),
  INDEX `index10` (`idVendaBase` ASC),
  CONSTRAINT `fk_followup_loja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `mydb`.`loja` (`idLoja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_followup_usuario`
    FOREIGN KEY (`idUsuario`)
    REFERENCES `mydb`.`usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_followup_venda`
    FOREIGN KEY (`idVenda`)
    REFERENCES `mydb`.`venda` (`idVenda`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 2349
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`versao_erp`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`versao_erp` ;

CREATE TABLE IF NOT EXISTS `mydb`.`versao_erp` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `versaoAtual` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 6
DEFAULT CHARACTER SET = utf8;

USE `mydb` ;

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`VendasCMV`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`VendasCMV` (`id` INT, `mes` INT, `loja` INT, `venda` INT, `qtddvenda` INT, `qtddcompra` INT, `qtddestq` INT, `custocompra` INT, `custoestq` INT, `comissrepr` INT, `repr` INT, `status` INT, `tipoICMS` INT, `vICMS` INT, `percST` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`ViewDespesas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ViewDespesas` (`mes` INT, `nomeFantasia` INT, `representacao` INT, `sem custo` INT, `DespTotal` INT, `DespRH` INT, `DespRT` INT, `DespST` INT, `DespPis` INT, `DespIR` INT, `DespLog` INT, `DespCMV` INT, `DespALU` INT, `DespOutros` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`ViewDespesasExcel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ViewDespesasExcel` (`mes` INT, `status` INT, `valor` INT, `centroCusto` INT, `grupo` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`aaa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`aaa` (`idNFe` INT, `numeroNFe` INT, `valorSujeitoSt` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`bbb`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`bbb` (`idNFe` INT, `percst` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`viewEstoqueConsumo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`viewEstoqueConsumo` (`idVendaProduto` INT, `tipoICMS` INT, `vICMS` INT, `vICMSST` INT, `quant` INT, `valor` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`viewEstoqueConsumo2`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`viewEstoqueConsumo2` (`idVendaProduto` INT, `tipoICMS` INT, `vICMS` INT, `vICMSST` INT, `quant` INT, `valor` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`viewFreteExcel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`viewFreteExcel` (`mes` INT, `status` INT, `frete` INT, `Loja` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`viewPedidoFornecedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`viewPedidoFornecedor` (`aliquotaSt` INT, `st` INT, `status` INT, `idVendaProduto` INT, `quant` INT, `preco` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`viewRelatoriosGestao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`viewRelatoriosGestao` (`Mes` INT, `Vendedor` INT, `Profissional` INT, `Loja` INT, `fornecedor` INT, `Total` INT, `status` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`viewResultadoCD`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`viewResultadoCD` (`mes` INT, `frete` INT, `valor` INT, `DespLogistica` INT, `DespRH` INT, `DespOutras` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`viewSimuladorExcel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`viewSimuladorExcel` (`idOrcamentoProduto` INT, `idOrcamento` INT, `fornecedor` INT, `produto` INT, `codComercial` INT, `prcUnitario` INT, `quant` INT, `desconto` INT, `descGlobal` INT, `total` INT, `frete` INT, `totalgeral` INT, `custo` INT, `st` INT, `profissional` INT, `comissao` INT, `cliente` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`viewTaxaCartaoExcel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`viewTaxaCartaoExcel` (`mes` INT, `valor` INT, `Loja` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_a_pagar_vencer_base`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_a_pagar_vencer_base` (`Data Pagamento` INT, `CONFERIDO` INT, `PENDENTE` INT, `Total` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_a_pagar_vencidos_base`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_a_pagar_vencidos_base` (`Data Pagamento` INT, `CONFERIDO` INT, `PENDENTE` INT, `Total` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_a_receber_vencer_base`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_a_receber_vencer_base` (`Data Pagamento` INT, `Status` INT, `Cartão` INT, `Cheque` INT, `Boleto` INT, `Outros` INT, `Total` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_a_receber_vencidos_base`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_a_receber_vencidos_base` (`Data Pagamento` INT, `Status` INT, `Cartão` INT, `Cheque` INT, `Boleto` INT, `Outros` INT, `Total` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_agendar_coleta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_agendar_coleta` (`prazoEntrega` INT, `dataRealFat` INT, `idEstoque` INT, `lote` INT, `local` INT, `bloco` INT, `fornecedor` INT, `unCaixa` INT, `formComercial` INT, `idProduto` INT, `numeroNFe` INT, `idNFe` INT, `idVenda` INT, `ordemCompra` INT, `produto` INT, `codComercial` INT, `quant` INT, `un` INT, `caixas` INT, `kgcx` INT, `Transportadora` INT, `Peso` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_agendar_entrega`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_agendar_entrega` (`idVendaProduto` INT, `idProduto` INT, `dataPrevEnt` INT, `dataRealEnt` INT, `status` INT, `fornecedor` INT, `idVenda` INT, `NFe Fut` INT, `produto` INT, `idEstoque` INT, `lote` INT, `local` INT, `bloco` INT, `caixas` INT, `quant` INT, `un` INT, `unCaixa` INT, `codComercial` INT, `formComercial` INT, `idConsumo` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_busca_veiculo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_busca_veiculo` (`razaoSocial` INT, `idVeiculo` INT, `modelo` INT, `capacidade` INT, `placa` INT, `desativado` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_calendario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_calendario` (`idVenda` INT, `carga` INT, `caixas` INT, `kg` INT, `data` INT, `razaoSocial` INT, `modelo` INT, `status` INT, `logradouro` INT, `numero` INT, `bairro` INT, `cidade` INT, `uf` INT, `produtos` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_calendario2`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_calendario2` (`razaoSocial` INT, `status` INT, `caixas` INT, `kg` INT, `idVeiculo` INT, `modelo` INT, `data` INT, `idVenda` INT, `endereco` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_calendario_carga`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_calendario_carga` (`idVeiculo` INT, `idEvento` INT, `dataPrevEnt` INT, `idNFe` INT, `NFe Status` INT, `numeroNFe` INT, `NFe Futura` INT, `idVenda` INT, `status` INT, `produtos` INT, `kg` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_calendario_entrega`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_calendario_entrega` (`idVeiculo` INT, `data` INT, `modelo` INT, `kg` INT, `razaoSocial` INT, `idVenda` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_calendario_produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_calendario_produto` (`idEvento` INT, `idVenda` INT, `idVendaProduto` INT, `fornecedor` INT, `produto` INT, `formComercial` INT, `codComercial` INT, `caixas` INT, `quant` INT, `un` INT, `kg` INT, `idEstoque` INT, `lote` INT, `local` INT, `bloco` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_caminhao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_caminhao` (`idVeiculo` INT, `Transportadora` INT, `Veículo` INT, `Placa` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_caminhao_resumo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_caminhao_resumo` (`idVeiculo` INT, `data` INT, `Kg` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_coleta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_coleta` (`prazoEntrega` INT, `dataPrevColeta` INT, `idEstoque` INT, `lote` INT, `local` INT, `bloco` INT, `fornecedor` INT, `numeroNFe` INT, `idVenda` INT, `ordemCompra` INT, `produto` INT, `codComercial` INT, `quant` INT, `un` INT, `caixas` INT, `kgcx` INT, `Transportadora` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_compras`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_compras` (`OC` INT, `Compra` INT, `Fornecedor` INT, `Data Venda` INT, `Produtos` INT, `Total` INT, `dataPrevConf` INT, `Vendedor` INT, `Venda` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_compras_financeiro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_compras_financeiro` (`Status` INT, `Status Financeiro` INT, `OC` INT, `Compra` INT, `Código` INT, `Fornecedor` INT, `Produtos` INT, `Total` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_consistencia_compra`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_consistencia_compra` (`descricao` INT, `prcUnitario` INT, `preco` INT, `prcUnitario * quant` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_conta_pagar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_conta_pagar` (`idPagamento` INT, `idLoja` INT, `contraparte` INT, `dataPagamento` INT, `dataEmissao` INT, `valor` INT, `status` INT, `ordemCompra` INT, `idVenda` INT, `numeroNFe` INT, `tipo` INT, `parcela` INT, `observacao` INT, `statusFinanceiro` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_conta_receber`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_conta_receber` (`idPagamento` INT, `idLoja` INT, `representacao` INT, `contraparte` INT, `dataPagamento` INT, `dataEmissao` INT, `idVenda` INT, `valor` INT, `tipo` INT, `parcela` INT, `observacao` INT, `status` INT, `statusFinanceiro` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_custo_estoque`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_custo_estoque` (`idVendaProduto` INT, `ordemCompra` INT, `idVenda` INT, `descricao` INT, `R$ Consumo` INT, `R$ Compra` INT, `quant est` INT, `quant compra` INT, `diferenca` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_entrega`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_entrega` (`prazoEntrega` INT, `idVenda` INT, `Recebeu` INT, `Entregou` INT, `Estoque` INT, `Entregue` INT, `Outros` INT, `Bairro` INT, `Logradouro` INT, `Número` INT, `Cidade` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_entrega_pendente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_entrega_pendente` (`data` INT, `prazoEntrega` INT, `novoPrazoEntrega` INT, `dataRealReceb` INT, `statusFinanceiro` INT, `idVenda` INT, `Estoque` INT, `Agend/Entregue` INT, `Outros` INT, `Bairro` INT, `Logradouro` INT, `Número` INT, `Cidade` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_entrega_produtos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_entrega_produtos` (`idVendaProduto` INT, `idProduto` INT, `dataPrevEnt` INT, `dataRealEnt` INT, `status` INT, `fornecedor` INT, `idVenda` INT, `produto` INT, `caixas` INT, `quant` INT, `un` INT, `unCaixa` INT, `codComercial` INT, `formComercial` INT, `idConsumo` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_estoque`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_estoque` (`cnpjDest` INT, `status` INT, `idEstoque` INT, `fornecedor` INT, `descricao` INT, `restante` INT, `restante est` INT, `unEst` INT, `unProd` INT, `Caixas` INT, `lote` INT, `local` INT, `bloco` INT, `codComercial` INT, `idCompra` INT, `nfe` INT, `dataPrevColeta` INT, `dataRealColeta` INT, `dataPrevReceb` INT, `dataRealReceb` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_estoque2`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_estoque2` (`cnpjDest` INT, `status` INT, `idEstoque` INT, `fornecedor` INT, `descricao` INT, `restante` INT, `unEst` INT, `unProd` INT, `Caixas` INT, `lote` INT, `local` INT, `bloco` INT, `codComercial` INT, `nfe` INT, `idCompra` INT, `dataPrevColeta` INT, `dataRealColeta` INT, `dataPrevReceb` INT, `dataRealReceb` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_estoque_consumo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_estoque_consumo` (`Venda` INT, `idEstoque` INT, `statusProduto` INT, `status` INT, `local` INT, `fornecedor` INT, `descricao` INT, `quant` INT, `quantUpd` INT, `un` INT, `caixas` INT, `codComercial` INT, `dataRealEnt` INT, `created` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_faturamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_faturamento` (`OC` INT, `Fornecedor` INT, `Data Venda` INT, `Produtos` INT, `Total` INT, `idCompra` INT, `dataPrevFat` INT, `Vendedor` INT, `Código` INT, `representacao` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_financeiro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_financeiro` (`mes` INT, `nomeFantasia` INT, `SomaDetotal` INT, `custo` INT, `sem custo` INT, `ICMS` INT, `IR+CSLL` INT, `PIS+Cofins+ISS` INT, `Representacao` INT, `Comissao Representacao` INT, `RT` INT, `ValorComissao` INT, `Cartao` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_fluxo_caixa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_fluxo_caixa` (`Compra/Venda` INT, `Data Pag` INT, `Data` INT, `R$` INT, `Tipo` INT, `contaDestino` INT, `idConta` INT, `Status` INT, `ENT/SAI` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_fluxo_caixa2`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_fluxo_caixa2` (`Compra/Venda` INT, `Data Pag` INT, `Data` INT, `R$` INT, `Tipo` INT, `contaDestino` INT, `idConta` INT, `Status` INT, `ENT/SAI` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_fluxo_resumo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_fluxo_resumo` (`Data Pag` INT, `Data` INT, `idConta` INT, `SAIDA` INT, `ENTRADA` INT, `R$` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_fluxo_resumo2`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_fluxo_resumo2` (`Data Pag` INT, `Data` INT, `Conta` INT, `idConta` INT, `SAIDA` INT, `ENTRADA` INT, `R$` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_fluxo_resumo3`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_fluxo_resumo3` (`Data Pag` INT, `SAIDA` INT, `ENTRADA` INT, `R$` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_followup_orcamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_followup_orcamento` (`idOrcamento` INT, `nome` INT, `observacao` INT, `dataFollowup` INT, `dataProxFollowup` INT, `semaforo` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_followup_venda`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_followup_venda` (`idVenda` INT, `nome` INT, `Tipo` INT, `observacao` INT, `dataFollowup` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_fornecedor_compra`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_fornecedor_compra` (`fornecedor` INT, `PEND` INT, `CONF` INT, `FAT` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_fornecedor_compra_confirmar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_fornecedor_compra_confirmar` (`CONF` INT, `Fornecedor` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_fornecedor_compra_faturar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_fornecedor_compra_faturar` (`FAT` INT, `Fornecedor` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_fornecedor_compra_gerar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_fornecedor_compra_gerar` (`PEND` INT, `Fornecedor` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_fornecedor_logistica_agendar_coleta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_fornecedor_logistica_agendar_coleta` (`Fornecedor` INT, `Estoque` INT, `Venda` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_fornecedor_logistica_coleta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_fornecedor_logistica_coleta` (`Fornecedor` INT, `COLET` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_fornecedor_logistica_recebimento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_fornecedor_logistica_recebimento` (`Fornecedor` INT, `RECEB` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_fornecedor_logistica_representacao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_fornecedor_logistica_representacao` (`Fornecedor` INT, `Produtos` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_logistica_representacao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_logistica_representacao` (`prazoEntrega` INT, `idPedido` INT, `fornecedor` INT, `idVenda` INT, `idVendaProduto` INT, `cliente` INT, `ordemCompra` INT, `descricao` INT, `codComercial` INT, `quant` INT, `un` INT, `caixas` INT, `kgcx` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_nfe_entrada`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_nfe_entrada` (`idNFe` INT, `CNPJ Dest` INT, `Fornecedor` INT, `NFe` INT, `Status` INT, `Recebido Por` INT, `Data Receb` INT, `GARE` INT, `GARE Pago Em` INT, `OC` INT, `Venda` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_nfe_saida`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_nfe_saida` (`idNFe` INT, `chaveAcesso` INT, `Emitente` INT, `NFe` INT, `Status` INT, `Venda` INT, `CPF/CNPJ` INT, `Cliente` INT, `valor` INT, `Criado em` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_orcamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_orcamento` (`idLoja` INT, `idUsuario` INT, `idUsuarioConsultor` INT, `Status` INT, `Dias restantes` INT, `Código` INT, `Vendedor` INT, `Consultor` INT, `Cliente` INT, `Profissional` INT, `Telefone` INT, `Celular` INT, `Tel Prof` INT, `Data` INT, `Total` INT, `Data Followup` INT, `Data Próx Followup` INT, `Observação` INT, `semaforo` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_ordemcompra`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_ordemcompra` (`statusPF` INT, `statusVP` INT, `idVenda` INT, `idVendaProdutoPF` INT, `idVendaProdutoEHC` INT, `fornecedor` INT, `descricao` INT, `colecao` INT, `codComercial` INT, `quant` INT, `un` INT, `un2` INT, `caixas` INT, `prcUnitario` INT, `preco` INT, `kgcx` INT, `formComercial` INT, `codBarras` INT, `obs` INT, `idPedido` INT, `idCompra` INT, `ordemCompra` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_ordemcompra_nfe`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_ordemcompra_nfe` (`ordemCompra` INT, `numeroNFe` INT, `idNFe` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_ordemcompra_resumo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_ordemcompra_resumo` (`OC` INT, `Status` INT, `Venda` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_pagamento_loja`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_pagamento_loja` (`idLoja` INT, `idPagamento` INT, `pagamento` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_pedido_fornecedor_livre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_pedido_fornecedor_livre` (`idPedido` INT, `idVenda` INT, `idVendaProduto` INT, `ordemCompra` INT, `idCompra` INT, `descricao` INT, `quant` INT, `un` INT, `caixas` INT, `prcUnitario` INT, `codComercial` INT, `dataPrevCompra` INT, `dataRealCompra` INT, `dataPrevConf` INT, `status` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_preparar_entrega`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_preparar_entrega` (`idEvento` INT, `idVenda` INT, `produtos` INT, `idNFeSaida` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_produto` (`idProduto` INT, `estoque` INT, `promocao` INT, `descontinuado` INT, `desativado` INT, `representacao` INT, `fornecedor` INT, `statusEstoque` INT, `descricao` INT, `estoqueRestante` INT, `un` INT, `un2` INT, `colecao` INT, `tipo` INT, `minimo` INT, `multiplo` INT, `m2cx` INT, `pccx` INT, `kgcx` INT, `formComercial` INT, `codComercial` INT, `precoVenda` INT, `validade` INT, `ui` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_produto_estoque`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_produto_estoque` (`idVendaProduto` INT, `idProduto` INT, `fornecedor` INT, `produto` INT, `descUnitario` INT, `caixas` INT, `quant` INT, `un` INT, `unCaixa` INT, `codComercial` INT, `formComercial` INT, `total` INT, `codBarras` INT, `ncm` INT, `cfop` INT, `unTrib` INT, `numeroPedido` INT, `itemPedido` INT, `tipoICMS` INT, `orig` INT, `cstICMS` INT, `modBC` INT, `vBC` INT, `pICMS` INT, `vICMS` INT, `modBCST` INT, `pMVAST` INT, `vBCST` INT, `pICMSST` INT, `vICMSST` INT, `cEnq` INT, `cstIPI` INT, `cstPIS` INT, `vBCPIS` INT, `pPIS` INT, `vPIS` INT, `cstCOFINS` INT, `vBCCOFINS` INT, `pCOFINS` INT, `vCOFINS` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_produto_pendente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_produto_pendente` (`status` INT, `idVendaProduto` INT, `fornecedor` INT, `idVenda` INT, `idProduto` INT, `produto` INT, `obs` INT, `colecao` INT, `formComercial` INT, `quant` INT, `un` INT, `Un2` INT, `Caixas` INT, `kgcx` INT, `codComercial` INT, `codBarras` INT, `custo` INT, `idCompra` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_produtos_pendentes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_produtos_pendentes` (`Fornecedor` INT, `Descrição` INT, `Form` INT, `Quant` INT, `Un` INT, `Un2` INT, `Caixas` INT, `Cód Com` INT, `idCompra` INT, `Status` INT, `Financeiro` INT, `Mês` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_recebimento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_recebimento` (`prazoEntrega` INT, `dataPrevReceb` INT, `idEstoque` INT, `lote` INT, `local` INT, `bloco` INT, `fornecedor` INT, `numeroNFe` INT, `idVenda` INT, `ordemCompra` INT, `produto` INT, `codComercial` INT, `quant` INT, `un` INT, `caixas` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_relatorio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_relatorio` (`Loja` INT, `Vendedor` INT, `idUsuario` INT, `idVenda` INT, `Mês` INT, `Faturamento` INT, `Comissão` INT, `%` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_relatorio_loja`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_relatorio_loja` (`Loja` INT, `Faturamento` INT, `Comissão` INT, `%` INT, `Mês` INT, `Reposição` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_relatorio_nfe`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_relatorio_nfe` (`NFe` INT, `Serie` INT, `DataEmi` INT, `produtos` INT, `icmsst` INT, `frete` INT, `seguro` INT, `ipi` INT, `outrasdesp` INT, `desconto` INT, `totalnfe` INT, `bcicms` INT, `icms` INT, `cofins` INT, `impimp` INT, `pis` INT, `tipo` INT, `e/s` INT, `nprotocolo` INT, `dataautor` INT, `Criado em` INT, `status` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_relatorio_pagar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_relatorio_pagar` (`dataEmissao` INT, `dataRealizado` INT, `valorReal` INT, `Conta` INT, `observacao` INT, `contraParte` INT, `grupo` INT, `subGrupo` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_relatorio_receber`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_relatorio_receber` (`dataEmissao` INT, `dataRealizado` INT, `valorReal` INT, `Conta` INT, `observacao` INT, `contraParte` INT, `grupo` INT, `subGrupo` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_relatorio_temp`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_relatorio_temp` (`dia` INT, `jane` INT, `feve` INT, `marc` INT, `abri` INT, `maio` INT, `junh` INT, `julh` INT, `agos` INT, `sete` INT, `outu` INT, `nove` INT, `deze` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_relatorio_temp2`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_relatorio_temp2` (`dia` INT, `mes12` INT, `mes11` INT, `mes10` INT, `mes9` INT, `mes8` INT, `mes7` INT, `mes6` INT, `mes5` INT, `mes4` INT, `mes3` INT, `mes2` INT, `mes1` INT, `mes0` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_relatorio_vendedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_relatorio_vendedor` (`Loja` INT, `Vendedor` INT, `idUsuario` INT, `Faturamento` INT, `Comissão` INT, `%` INT, `Mês` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_resumo_relatorio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_resumo_relatorio` (`Loja` INT, `Vendedor` INT, `Validos Anteriores` INT, `Gerados Mes` INT, `Revalidados Mes` INT, `Fechados Mes` INT, `Perdidos Mes` INT, `Validos Mes` INT, `% Fechados / Gerados` INT, `% Fechados / Carteira` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_validacao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_validacao` (`idVenda` INT, `soma` INT, `total` INT, `Pag.` INT, `Dif` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_venda`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_venda` (`idLoja` INT, `idUsuario` INT, `idUsuarioConsultor` INT, `statusFinanceiro` INT, `dataFinanceiro` INT, `Status` INT, `Dias restantes` INT, `Código` INT, `OC Rep` INT, `Vendedor` INT, `Consultor` INT, `Cliente` INT, `Profissional` INT, `Data` INT, `Total R$` INT, `Data Followup` INT, `Observação` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_venda_produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_venda_produto` (`status` INT, `statusFinanceiro` INT, `dataFinanceiro` INT, `idVenda` INT, `Vendedor` INT, `fornecedor` INT, `produto` INT, `obs` INT, `caixas` INT, `quant` INT, `un` INT, `codComercial` INT, `formComercial` INT, `prazoEntrega` INT, `novoPrazoEntrega` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`viewlucroreal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`viewlucroreal` (`mes` INT, `nomeFantasia` INT, `SomaDetotal` INT, `somadefrete` INT, `custo` INT, `sem custo` INT, `ICMS` INT, `IR+CSLL` INT, `PIS+Cofins+ISS` INT, `representacao` INT, `Comissao Representacao` INT, `RT` INT, `ValorComissao` INT, `Cartao` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`xxxx`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`xxxx` (`idVendaProduto` INT, `percST` INT);

-- -----------------------------------------------------
-- procedure invalidar_orcamentos_expirados
-- -----------------------------------------------------

USE `mydb`;
DROP procedure IF EXISTS `mydb`.`invalidar_orcamentos_expirados`;

DELIMITER $$
USE `mydb`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `invalidar_orcamentos_expirados`()
BEGIN
UPDATE orcamento 
SET 
    status = 'EXPIRADO'
WHERE
    NOW() > DATE_ADD(data, INTERVAL validade DAY)
        AND status = 'ATIVO';
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure invalidar_produtos_expirados
-- -----------------------------------------------------

USE `mydb`;
DROP procedure IF EXISTS `mydb`.`invalidar_produtos_expirados`;

DELIMITER $$
USE `mydb`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `invalidar_produtos_expirados`()
BEGIN 

UPDATE produto_has_preco 
SET 
    expirado = TRUE
WHERE
    validadeFim < CURDATE();
    
    -- se nao tiver preço valido marca produto como descontinuado                
UPDATE produto 
SET 
    descontinuado = TRUE
WHERE
    descontinuado = FALSE AND estoque = FALSE
        AND idProduto NOT IN (SELECT 
            idProduto
        FROM
            produto_has_preco
        WHERE
            expirado = FALSE);

-- copia o preço valido para produto
UPDATE produto AS p,
    produto_has_preco AS prc 
SET 
    p.precovenda = prc.preco,
    p.validade = prc.validadeFim
WHERE
    p.idProduto = prc.idProduto
        AND prc.expirado = FALSE
        AND p.descontinuado = FALSE
        AND p.validade != prc.validadeFim;
        
END$$

DELIMITER ;

-- -----------------------------------------------------
-- function mydate
-- -----------------------------------------------------

USE `mydb`;
DROP function IF EXISTS `mydb`.`mydate`;

DELIMITER $$
USE `mydb`$$
CREATE DEFINER=`root`@`%` FUNCTION `mydate`() RETURNS varchar(10) CHARSET utf8
    NO SQL
    DETERMINISTIC
return @mydate$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure relatorio
-- -----------------------------------------------------

USE `mydb`;
DROP procedure IF EXISTS `mydb`.`relatorio`;

DELIMITER $$
USE `mydb`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `relatorio`(mes varchar(20))
BEGIN
select * from view_relatorio where Mês = mes;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_produto_estoque_quant
-- -----------------------------------------------------

USE `mydb`;
DROP procedure IF EXISTS `mydb`.`update_produto_estoque_quant`;

DELIMITER $$
USE `mydb`$$
CREATE DEFINER=`root`@`%` PROCEDURE `update_produto_estoque_quant`()
BEGIN

    UPDATE produto p LEFT JOIN view_estoque2 v ON p.idEstoque = v.idEstoque
    SET p.estoqueRestante = COALESCE(v.restante, 0)
    WHERE p.estoque = TRUE;

    UPDATE produto p SET p.descontinuado = FALSE where p.estoqueRestante > 0 and p.estoque = TRUE;
    UPDATE produto p SET p.descontinuado = TRUE WHERE p.estoqueRestante <= 0 and p.estoque = TRUE;

  END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_venda_status
-- -----------------------------------------------------

USE `mydb`;
DROP procedure IF EXISTS `mydb`.`update_venda_status`;

DELIMITER $$
USE `mydb`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `update_venda_status`()
BEGIN 

    UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'DEVOLVIDO' AND v.status != 'CANCELADO' AND v.devolucao = false;
    UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'ENTREGUE' AND v.status != 'CANCELADO' AND v.devolucao = false;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'REPO. ENTREGA' AND v.status != 'CANCELADO' AND v.devolucao = false;
    UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'REPO. RECEB.' AND v.status != 'CANCELADO' AND v.devolucao = false;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'EM ENTREGA' AND v.status != 'CANCELADO' AND v.devolucao = false;
    UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'ENTREGA AGEND.' AND v.status != 'CANCELADO' AND v.devolucao = false;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'ESTOQUE' AND v.status != 'CANCELADO' AND v.devolucao = false;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'EM RECEBIMENTO' AND v.status != 'CANCELADO' AND v.devolucao = false;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'EM COLETA' AND v.status != 'CANCELADO' AND v.devolucao = false;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'EM FATURAMENTO' AND v.status != 'CANCELADO' AND v.devolucao = false;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'EM COMPRA' AND v.status != 'CANCELADO' AND v.devolucao = false;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'INICIADO' AND v.status != 'CANCELADO' AND v.devolucao = false;
    UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'PENDENTE' AND v.status != 'CANCELADO' AND v.devolucao = false;    
        
END$$

DELIMITER ;

-- -----------------------------------------------------
-- View `mydb`.`VendasCMV`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`VendasCMV`;
DROP VIEW IF EXISTS `mydb`.`VendasCMV` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`VendasCMV` AS select `vp`.`idVendaProduto` AS `id`,date_format(`v`.`data`,'%Y/%m') AS `mes`,`l`.`descricao` AS `loja`,`vp`.`total` AS `venda`,`vp`.`quant` AS `qtddvenda`,sum(`pf`.`quant`) AS `qtddcompra`,sum(`ehc`.`quant`) AS `qtddestq`,sum(`pf`.`preco`) AS `custocompra`,sum(`ehc`.`valor`) AS `custoestq`,`f`.`comissaoLoja` AS `comissrepr`,`v`.`representacao` AS `repr`,`vp`.`status` AS `status`,`ehc`.`tipoICMS` AS `tipoICMS`,coalesce(group_concat(distinct `ehc`.`vICMSST` separator ','),0) AS `vICMS`,`xxxx`.`percST` AS `percST` from ((((((`mydb`.`venda_has_produto` `vp` left join `mydb`.`venda` `v` on((`vp`.`idVenda` = `v`.`idVenda`))) left join `mydb`.`loja` `l` on((`vp`.`idLoja` = `l`.`idLoja`))) left join `mydb`.`viewPedidoFornecedor` `pf` on((`vp`.`idVendaProduto` = `pf`.`idVendaProduto`))) left join `mydb`.`viewEstoqueConsumo2` `ehc` on((`vp`.`idVendaProduto` = `ehc`.`idVendaProduto`))) left join `mydb`.`fornecedor` `f` on((`vp`.`fornecedor` = `f`.`razaoSocial`))) left join `mydb`.`xxxx` on((`vp`.`idVendaProduto` = `xxxx`.`idVendaProduto`))) where (`v`.`data` >= '2017-01-01') group by `vp`.`idVendaProduto`,date_format(`v`.`data`,'%Y/%m'),`l`.`descricao`,`vp`.`total`,`vp`.`quant`,`f`.`comissaoLoja`,`v`.`representacao`,`vp`.`status`,`ehc`.`tipoICMS`,`ehc`.`vICMS` having (`vp`.`status` not in ('CANCELADO','SUBSTITUIDO'));

-- -----------------------------------------------------
-- View `mydb`.`ViewDespesas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`ViewDespesas`;
DROP VIEW IF EXISTS `mydb`.`ViewDespesas` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`ViewDespesas` AS select date_format(`mydb`.`conta_a_pagar_has_pagamento`.`dataEmissao`,'%Y/%m') AS `mes`,`mydb`.`loja`.`nomeFantasia` AS `nomeFantasia`,'Venda' AS `representacao`,'' AS `sem custo`,(sum(if((`mydb`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),`mydb`.`conta_a_pagar_has_pagamento`.`valorReal`,`mydb`.`conta_a_pagar_has_pagamento`.`valor`)) + 0E0) AS `DespTotal`,sum(if((`mydb`.`conta_a_pagar_has_pagamento`.`grupo` like 'RH%'),if((`mydb`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),`mydb`.`conta_a_pagar_has_pagamento`.`valorReal`,`mydb`.`conta_a_pagar_has_pagamento`.`valor`),0E0)) AS `DespRH`,sum(if((`mydb`.`conta_a_pagar_has_pagamento`.`grupo` = 'RT\'s'),if((`mydb`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),`mydb`.`conta_a_pagar_has_pagamento`.`valorReal`,`mydb`.`conta_a_pagar_has_pagamento`.`valor`),0E0)) AS `DespRT`,sum(if((`mydb`.`conta_a_pagar_has_pagamento`.`grupo` = 'Impostos - ICMS;ST;ISS'),if((`mydb`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),`mydb`.`conta_a_pagar_has_pagamento`.`valorReal`,`mydb`.`conta_a_pagar_has_pagamento`.`valor`),0E0)) AS `DespST`,sum(if((`mydb`.`conta_a_pagar_has_pagamento`.`grupo` = 'Impostos - Pis;Cofins'),if((`mydb`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),`mydb`.`conta_a_pagar_has_pagamento`.`valorReal`,`mydb`.`conta_a_pagar_has_pagamento`.`valor`),0E0)) AS `DespPis`,sum(if((`mydb`.`conta_a_pagar_has_pagamento`.`grupo` = 'Impostos - IR;CSLL'),if((`mydb`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),`mydb`.`conta_a_pagar_has_pagamento`.`valorReal`,`mydb`.`conta_a_pagar_has_pagamento`.`valor`),0E0)) AS `DespIR`,sum(if((`mydb`.`conta_a_pagar_has_pagamento`.`grupo` like 'Logística%'),if((`mydb`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),`mydb`.`conta_a_pagar_has_pagamento`.`valorReal`,`mydb`.`conta_a_pagar_has_pagamento`.`valor`),0E0)) AS `DespLog`,sum(if((`mydb`.`conta_a_pagar_has_pagamento`.`grupo` = 'Produtos - Venda'),if((`mydb`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),`mydb`.`conta_a_pagar_has_pagamento`.`valorReal`,`mydb`.`conta_a_pagar_has_pagamento`.`valor`),0E0)) AS `DespCMV`,sum(if((`mydb`.`conta_a_pagar_has_pagamento`.`grupo` = 'Aluguel'),if((`mydb`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),`mydb`.`conta_a_pagar_has_pagamento`.`valorReal`,`mydb`.`conta_a_pagar_has_pagamento`.`valor`),0E0)) AS `DespALU`,sum(if(((not((`mydb`.`conta_a_pagar_has_pagamento`.`grupo` like 'Impostos - %'))) and (not((`mydb`.`conta_a_pagar_has_pagamento`.`grupo` like 'Logística%'))) and (not((`mydb`.`conta_a_pagar_has_pagamento`.`grupo` like 'RH%'))) and (`mydb`.`conta_a_pagar_has_pagamento`.`grupo` <> 'RT\'s') and (`mydb`.`conta_a_pagar_has_pagamento`.`grupo` <> 'Produtos - Venda') and (`mydb`.`conta_a_pagar_has_pagamento`.`grupo` <> 'Aluguel')),if((`mydb`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),`mydb`.`conta_a_pagar_has_pagamento`.`valorReal`,`mydb`.`conta_a_pagar_has_pagamento`.`valor`),0E0)) AS `DespOutros` from (`mydb`.`conta_a_pagar_has_pagamento` left join `mydb`.`loja` on((`mydb`.`loja`.`idLoja` = `mydb`.`conta_a_pagar_has_pagamento`.`centroCusto`))) where ((`mydb`.`conta_a_pagar_has_pagamento`.`grupo` <> 'Transferência') and (`mydb`.`conta_a_pagar_has_pagamento`.`status` <> 'CANCELADO') and (`mydb`.`conta_a_pagar_has_pagamento`.`desativado` = FALSE) and (`mydb`.`conta_a_pagar_has_pagamento`.`status` <> 'SUBSTITUIDO')) group by `mes`,`mydb`.`loja`.`nomeFantasia`,`representacao`,`sem custo`;

-- -----------------------------------------------------
-- View `mydb`.`ViewDespesasExcel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`ViewDespesasExcel`;
DROP VIEW IF EXISTS `mydb`.`ViewDespesasExcel` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`ViewDespesasExcel` AS select date_format(`cp`.`dataEmissao`,'%Y/%m') AS `mes`,`cp`.`status` AS `status`,sum(if((`cp`.`status` = 'pago'),`cp`.`valorReal`,(`cp`.`valor` + 0E0))) AS `valor`,`mydb`.`loja`.`descricao` AS `centroCusto`,`cp`.`grupo` AS `grupo` from (`mydb`.`conta_a_pagar_has_pagamento` `cp` left join `mydb`.`loja` on((`mydb`.`loja`.`idLoja` = `cp`.`centroCusto`))) where ((`cp`.`desativado` = 0) and (`cp`.`dataEmissao` > '2016-12-31') and (`cp`.`status` <> 'cancelado') and (`cp`.`status` <> 'substituido')) group by date_format(`cp`.`dataEmissao`,'%Y/%m'),`cp`.`status`,`cp`.`centroCusto`,`cp`.`grupo`;

-- -----------------------------------------------------
-- View `mydb`.`aaa`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`aaa`;
DROP VIEW IF EXISTS `mydb`.`aaa` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`aaa` AS select `n`.`idNFe` AS `idNFe`,`n`.`numeroNFe` AS `numeroNFe`,sum(if((`e`.`tipoICMS` = 'ICMS00'),`e`.`valor`,0)) AS `valorSujeitoSt` from (`mydb`.`estoque` `e` left join `mydb`.`nfe` `n` on((`n`.`idNFe` = `e`.`idNFe`))) where (`e`.`idNFe` is not null) group by `n`.`idNFe` having (`valorSujeitoSt` > 0);

-- -----------------------------------------------------
-- View `mydb`.`bbb`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`bbb`;
DROP VIEW IF EXISTS `mydb`.`bbb` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`bbb` AS select `aaa`.`idNFe` AS `idNFe`,(`cp`.`valorReal` / `aaa`.`valorSujeitoSt`) AS `percst` from (`mydb`.`aaa` left join `mydb`.`conta_a_pagar_has_pagamento` `cp` on((`cp`.`nfe` = `aaa`.`numeroNFe`))) having (`percst` > 0);

-- -----------------------------------------------------
-- View `mydb`.`viewEstoqueConsumo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`viewEstoqueConsumo`;
DROP VIEW IF EXISTS `mydb`.`viewEstoqueConsumo` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`viewEstoqueConsumo` AS select `ehc`.`idVendaProduto` AS `idVendaProduto`,group_concat(distinct `ehc`.`tipoICMS` separator ',') AS `tipoICMS`,group_concat(distinct `ehc`.`vICMS` separator ',') AS `vICMS`,sum(`ehc`.`vICMSST`) AS `vICMSST`,sum(`ehc`.`quant`) AS `quant`,sum(`ehc`.`valor`) AS `valor` from `mydb`.`estoque_has_consumo` `ehc` where (`ehc`.`idVendaProduto` is not null) group by `ehc`.`idVendaProduto`;

-- -----------------------------------------------------
-- View `mydb`.`viewEstoqueConsumo2`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`viewEstoqueConsumo2`;
DROP VIEW IF EXISTS `mydb`.`viewEstoqueConsumo2` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`viewEstoqueConsumo2` AS select `ehc`.`idVendaProduto` AS `idVendaProduto`,`e`.`tipoICMS` AS `tipoICMS`,(`e`.`vICMS` * ((`ehc`.`quant` * -(1)) / `e`.`quant`)) AS `vICMS`,(`e`.`vICMSST` * ((`ehc`.`quant` * -(1)) / `e`.`quant`)) AS `vICMSST`,((`ehc`.`quant` * -(1)) / `e`.`quant`) AS `quant`,(`e`.`valor` * ((`ehc`.`quant` * -(1)) / `e`.`quant`)) AS `valor` from (`mydb`.`estoque_has_consumo` `ehc` left join `mydb`.`estoque` `e` on((`ehc`.`idEstoque` = `e`.`idEstoque`))) where (`ehc`.`idVendaProduto` is not null) group by `ehc`.`idVendaProduto`,`ehc`.`idEstoque`;

-- -----------------------------------------------------
-- View `mydb`.`viewFreteExcel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`viewFreteExcel`;
DROP VIEW IF EXISTS `mydb`.`viewFreteExcel` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`viewFreteExcel` AS select date_format(`v`.`data`,'%Y/%m') AS `mes`,`v`.`status` AS `status`,sum(`v`.`frete`) AS `frete`,`mydb`.`loja`.`descricao` AS `Loja` from (`mydb`.`venda` `v` left join `mydb`.`loja` on((`mydb`.`loja`.`idLoja` = `v`.`idLoja`))) where ((`v`.`status` <> 'cancelado') and (`v`.`data` > '2016-12-31')) group by date_format(`v`.`data`,'%Y/%m'),`v`.`status`,`mydb`.`loja`.`descricao`;

-- -----------------------------------------------------
-- View `mydb`.`viewPedidoFornecedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`viewPedidoFornecedor`;
DROP VIEW IF EXISTS `mydb`.`viewPedidoFornecedor` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`viewPedidoFornecedor` AS select `mydb`.`pedido_fornecedor_has_produto`.`aliquotaSt` AS `aliquotaSt`,`mydb`.`pedido_fornecedor_has_produto`.`st` AS `st`,`mydb`.`pedido_fornecedor_has_produto`.`status` AS `status`,`mydb`.`pedido_fornecedor_has_produto`.`idVendaProduto` AS `idVendaProduto`,`mydb`.`pedido_fornecedor_has_produto`.`quant` AS `quant`,`mydb`.`pedido_fornecedor_has_produto`.`preco` AS `preco` from `mydb`.`pedido_fornecedor_has_produto` where (`mydb`.`pedido_fornecedor_has_produto`.`status` <> 'cancelado');

-- -----------------------------------------------------
-- View `mydb`.`viewRelatoriosGestao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`viewRelatoriosGestao`;
DROP VIEW IF EXISTS `mydb`.`viewRelatoriosGestao` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`viewRelatoriosGestao` AS select date_format(`mydb`.`venda`.`data`,'%Y/%m') AS `Mes`,`mydb`.`usuario`.`user` AS `Vendedor`,`mydb`.`profissional`.`nome_razao` AS `Profissional`,`mydb`.`loja`.`descricao` AS `Loja`,`mydb`.`venda_has_produto`.`fornecedor` AS `fornecedor`,(sum(`mydb`.`venda_has_produto`.`total`) + 0) AS `Total`,`mydb`.`venda_has_produto`.`status` AS `status` from ((((`mydb`.`venda_has_produto` left join `mydb`.`venda` on((`mydb`.`venda_has_produto`.`idVenda` = `mydb`.`venda`.`idVenda`))) left join `mydb`.`profissional` on((`mydb`.`venda`.`idProfissional` = `mydb`.`profissional`.`idProfissional`))) left join `mydb`.`usuario` on((`mydb`.`venda`.`idUsuario` = `mydb`.`usuario`.`idUsuario`))) left join `mydb`.`loja` on((`mydb`.`venda_has_produto`.`idLoja` = `mydb`.`loja`.`idLoja`))) group by date_format(`mydb`.`venda`.`data`,'%Y/%m'),`mydb`.`usuario`.`user`,`mydb`.`loja`.`descricao`,`mydb`.`profissional`.`nome_razao`,`mydb`.`venda_has_produto`.`fornecedor`,`mydb`.`venda_has_produto`.`status` having (`mydb`.`venda_has_produto`.`status` <> 'cancelado');

-- -----------------------------------------------------
-- View `mydb`.`viewResultadoCD`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`viewResultadoCD`;
DROP VIEW IF EXISTS `mydb`.`viewResultadoCD` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`viewResultadoCD` AS select `v`.`mes` AS `mes`,`v`.`frete` AS `frete`,`c`.`VALOR` AS `valor`,`c`.`DespLogistica` AS `DespLogistica`,`c`.`DespRH` AS `DespRH`,`c`.`DespOutras` AS `DespOutras` from (((select date_format(`mydb`.`venda`.`data`,'%Y/%m') AS `mes`,sum(`mydb`.`venda`.`frete`) AS `frete` from `mydb`.`venda` where (`mydb`.`venda`.`status` <> 'cancelado') group by date_format(`mydb`.`venda`.`data`,'%Y/%m'))) `v` left join (select date_format(`mydb`.`conta_a_pagar_has_pagamento`.`dataEmissao`,'%Y/%m') AS `mes`,sum(if((`mydb`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),`mydb`.`conta_a_pagar_has_pagamento`.`valorReal`,`mydb`.`conta_a_pagar_has_pagamento`.`valor`)) AS `VALOR`,sum(if((left(`mydb`.`conta_a_pagar_has_pagamento`.`grupo`,9) = 'Logística'),`mydb`.`conta_a_pagar_has_pagamento`.`valor`,0)) AS `DespLogistica`,sum(if((left(`mydb`.`conta_a_pagar_has_pagamento`.`grupo`,2) = 'RH'),`mydb`.`conta_a_pagar_has_pagamento`.`valor`,0)) AS `DespRH`,sum(if(((left(`mydb`.`conta_a_pagar_has_pagamento`.`grupo`,9) = 'Logística') or if((left(`mydb`.`conta_a_pagar_has_pagamento`.`grupo`,2) = 'RH'),`mydb`.`conta_a_pagar_has_pagamento`.`valor`,0)),0,`mydb`.`conta_a_pagar_has_pagamento`.`valor`)) AS `DespOutras` from `mydb`.`conta_a_pagar_has_pagamento` where ((`mydb`.`conta_a_pagar_has_pagamento`.`centroCusto` = 6) and (`mydb`.`conta_a_pagar_has_pagamento`.`status` <> 'CANCELADO') and (`mydb`.`conta_a_pagar_has_pagamento`.`status` <> 'SUBSTITUIDO') and (`mydb`.`conta_a_pagar_has_pagamento`.`desativado` = FALSE)) group by date_format(`mydb`.`conta_a_pagar_has_pagamento`.`dataEmissao`,'%Y/%m')) `c` on((`v`.`mes` = `c`.`mes`))) where (`v`.`mes` > '2017');

-- -----------------------------------------------------
-- View `mydb`.`viewSimuladorExcel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`viewSimuladorExcel`;
DROP VIEW IF EXISTS `mydb`.`viewSimuladorExcel` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`viewSimuladorExcel` AS select `ohp`.`idOrcamentoProduto` AS `idOrcamentoProduto`,`ohp`.`idOrcamento` AS `idOrcamento`,`ohp`.`fornecedor` AS `fornecedor`,`ohp`.`produto` AS `produto`,`ohp`.`codComercial` AS `codComercial`,`ohp`.`prcUnitario` AS `prcUnitario`,`ohp`.`quant` AS `quant`,`ohp`.`desconto` AS `desconto`,`ohp`.`descGlobal` AS `descGlobal`,`ohp`.`total` AS `total`,`o`.`frete` AS `frete`,`o`.`total` AS `totalgeral`,`p`.`custo` AS `custo`,`p`.`st` AS `st`,`pr`.`nome_razao` AS `profissional`,`pr`.`comissao` AS `comissao`,`c`.`nome_razao` AS `cliente` from ((((`mydb`.`orcamento_has_produto` `ohp` left join `mydb`.`orcamento` `o` on((`ohp`.`idOrcamento` = `o`.`idOrcamento`))) left join `mydb`.`produto` `p` on((`p`.`idProduto` = `ohp`.`idProduto`))) left join `mydb`.`profissional` `pr` on((`pr`.`idProfissional` = `o`.`idProfissional`))) left join `mydb`.`cliente` `c` on((`c`.`idCliente` = `o`.`idCliente`))) where ((`o`.`status` = 'ativo') or (`o`.`status` = 'expirado'));

-- -----------------------------------------------------
-- View `mydb`.`viewTaxaCartaoExcel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`viewTaxaCartaoExcel`;
DROP VIEW IF EXISTS `mydb`.`viewTaxaCartaoExcel` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`viewTaxaCartaoExcel` AS select date_format(`v`.`dataEmissao`,'%Y/%m') AS `mes`,sum((if((`v`.`status` = 'RECEBIDO'),`v`.`valorReal`,`v`.`valor`) * -(1))) AS `valor`,`mydb`.`loja`.`descricao` AS `Loja` from (`mydb`.`conta_a_receber_has_pagamento` `v` left join `mydb`.`loja` on((`mydb`.`loja`.`idLoja` = `v`.`centroCusto`))) where ((`v`.`status` <> 'cancelado') and (`v`.`status` <> 'cancelado') and (`v`.`desativado` = 0) and (`v`.`taxa` = 1) and (`v`.`dataEmissao` > '2016-12-31')) group by date_format(`v`.`dataEmissao`,'%Y/%m'),`mydb`.`loja`.`descricao`;

-- -----------------------------------------------------
-- View `mydb`.`view_a_pagar_vencer_base`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_a_pagar_vencer_base`;
DROP VIEW IF EXISTS `mydb`.`view_a_pagar_vencer_base` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_a_pagar_vencer_base` AS select `cr`.`dataPagamento` AS `Data Pagamento`,sum(if(((`cr`.`status` = 'CONFERIDO') and (`cr`.`desativado` = FALSE)),`cr`.`valor`,0)) AS `CONFERIDO`,sum(if(((`cr`.`status` = 'PENDENTE') and (`cr`.`desativado` = FALSE)),`cr`.`valor`,0)) AS `PENDENTE`,sum(`cr`.`valor`) AS `Total` from `mydb`.`conta_a_pagar_has_pagamento` `cr` where ((`cr`.`desativado` = FALSE) and (`cr`.`dataPagamento` >= curdate()) and ((`cr`.`status` = 'PENDENTE') or (`cr`.`status` = 'CONFERIDO'))) group by `cr`.`dataPagamento`;

-- -----------------------------------------------------
-- View `mydb`.`view_a_pagar_vencidos_base`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_a_pagar_vencidos_base`;
DROP VIEW IF EXISTS `mydb`.`view_a_pagar_vencidos_base` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`view_a_pagar_vencidos_base` AS select `cr`.`dataPagamento` AS `Data Pagamento`,sum(if(((`cr`.`status` = 'CONFERIDO') and (`cr`.`desativado` = FALSE)),`cr`.`valor`,0)) AS `CONFERIDO`,sum(if(((`cr`.`status` = 'PENDENTE') and (`cr`.`desativado` = FALSE)),`cr`.`valor`,0)) AS `PENDENTE`,sum(`cr`.`valor`) AS `Total` from `mydb`.`conta_a_pagar_has_pagamento` `cr` where ((`cr`.`desativado` = FALSE) and (`cr`.`dataPagamento` < curdate()) and ((`cr`.`status` = 'PENDENTE') or (`cr`.`status` = 'CONFERIDO'))) group by `cr`.`dataPagamento`;

-- -----------------------------------------------------
-- View `mydb`.`view_a_receber_vencer_base`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_a_receber_vencer_base`;
DROP VIEW IF EXISTS `mydb`.`view_a_receber_vencer_base` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_a_receber_vencer_base` AS select `cr`.`dataPagamento` AS `Data Pagamento`,`cr`.`status` AS `Status`,sum(if(((`cr`.`tipo` like '%cartão%') and (`cr`.`desativado` = FALSE)),`cr`.`valor`,0)) AS `Cartão`,sum(if(((`cr`.`tipo` like '%cheque%') and (`cr`.`desativado` = FALSE)),`cr`.`valor`,0)) AS `Cheque`,sum(if(((`cr`.`tipo` like '%boleto%') and (`cr`.`desativado` = FALSE)),`cr`.`valor`,0)) AS `Boleto`,sum(if(((not((`cr`.`tipo` like '%cartão%'))) and (not((`cr`.`tipo` like '%cheque%'))) and (not((`cr`.`tipo` like '%boleto%'))) and (`cr`.`desativado` = FALSE)),`cr`.`valor`,0)) AS `Outros`,sum(`cr`.`valor`) AS `Total` from `mydb`.`conta_a_receber_has_pagamento` `cr` where (`cr`.`desativado` = FALSE) group by `cr`.`dataPagamento`,`cr`.`representacao`,`cr`.`status` having ((`cr`.`dataPagamento` >= curdate()) and (`cr`.`representacao` = 0) and ((`cr`.`status` = 'PENDENTE') or (`cr`.`status` = 'CONFERIDO')));

-- -----------------------------------------------------
-- View `mydb`.`view_a_receber_vencidos_base`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_a_receber_vencidos_base`;
DROP VIEW IF EXISTS `mydb`.`view_a_receber_vencidos_base` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_a_receber_vencidos_base` AS select `cr`.`dataPagamento` AS `Data Pagamento`,`cr`.`status` AS `Status`,sum(if(((`cr`.`tipo` like '%cartão%') and (`cr`.`desativado` = FALSE)),`cr`.`valor`,0)) AS `Cartão`,sum(if(((`cr`.`tipo` like '%cheque%') and (`cr`.`desativado` = FALSE)),`cr`.`valor`,0)) AS `Cheque`,sum(if(((`cr`.`tipo` like '%boleto%') and (`cr`.`desativado` = FALSE)),`cr`.`valor`,0)) AS `Boleto`,sum(if(((not((`cr`.`tipo` like '%cartão%'))) and (not((`cr`.`tipo` like '%cheque%'))) and (not((`cr`.`tipo` like '%boleto%'))) and (`cr`.`desativado` = FALSE)),`cr`.`valor`,0)) AS `Outros`,sum(`cr`.`valor`) AS `Total` from `mydb`.`conta_a_receber_has_pagamento` `cr` where (`cr`.`desativado` = FALSE) group by `cr`.`dataPagamento`,`cr`.`representacao`,`cr`.`status` having ((`cr`.`dataPagamento` < curdate()) and (`cr`.`representacao` = 0) and ((`cr`.`status` = 'PENDENTE') or (`cr`.`status` = 'CONFERIDO')));

-- -----------------------------------------------------
-- View `mydb`.`view_agendar_coleta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_agendar_coleta`;
DROP VIEW IF EXISTS `mydb`.`view_agendar_coleta` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`view_agendar_coleta` AS select cast(min((`v`.`data` + interval `v`.`prazoEntrega` day)) as date) AS `prazoEntrega`,any_value(`pf`.`dataRealFat`) AS `dataRealFat`,`e`.`idEstoque` AS `idEstoque`,`e`.`lote` AS `lote`,`e`.`local` AS `local`,`e`.`bloco` AS `bloco`,any_value(`pf`.`fornecedor`) AS `fornecedor`,if(((upper(`e`.`un`) = 'M²') or (upper(`e`.`un`) = 'M2') or (upper(`e`.`un`) = 'ML')),`p`.`m2cx`,`p`.`pccx`) AS `unCaixa`,`p`.`formComercial` AS `formComercial`,`p`.`idProduto` AS `idProduto`,`n`.`numeroNFe` AS `numeroNFe`,`n`.`idNFe` AS `idNFe`,any_value(`pf`.`idVenda`) AS `idVenda`,any_value(`pf`.`ordemCompra`) AS `ordemCompra`,`e`.`descricao` AS `produto`,`e`.`codComercial` AS `codComercial`,abs(`e`.`quant`) AS `quant`,`e`.`un` AS `un`,`e`.`caixas` AS `caixas`,any_value(`pf`.`kgcx`) AS `kgcx`,`n`.`transportadora` AS `Transportadora`,(`e`.`caixas` * max(`pf`.`kgcx`)) AS `Peso` from (((((`mydb`.`estoque` `e` left join `mydb`.`estoque_has_compra` `ehc` on((`e`.`idEstoque` = `ehc`.`idEstoque`))) left join `mydb`.`pedido_fornecedor_has_produto` `pf` on((`ehc`.`idPedido` = `pf`.`idPedido`))) left join `mydb`.`nfe` `n` on((`e`.`idNFe` = `n`.`idNFe`))) left join `mydb`.`venda` `v` on((`v`.`idVenda` = `pf`.`idVenda`))) left join `mydb`.`produto` `p` on((`e`.`idProduto` = `p`.`idProduto`))) where ((`e`.`status` = 'EM COLETA') and isnull(`pf`.`dataPrevColeta`) and (`pf`.`idPedido` is not null)) group by `e`.`idEstoque` desc order by `prazoEntrega`;

-- -----------------------------------------------------
-- View `mydb`.`view_agendar_entrega`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_agendar_entrega`;
DROP VIEW IF EXISTS `mydb`.`view_agendar_entrega` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`view_agendar_entrega` AS select `vp`.`idVendaProduto` AS `idVendaProduto`,`vp`.`idProduto` AS `idProduto`,`vp`.`dataPrevEnt` AS `dataPrevEnt`,`vp`.`dataRealEnt` AS `dataRealEnt`,`vp`.`status` AS `status`,`vp`.`fornecedor` AS `fornecedor`,`vp`.`idVenda` AS `idVenda`,`vp`.`idNFeFutura` AS `NFe Fut`,`vp`.`produto` AS `produto`,group_concat(distinct `e`.`idEstoque` separator ', ') AS `idEstoque`,group_concat(distinct `e`.`lote` separator ', ') AS `lote`,group_concat(distinct `e`.`local` separator ', ') AS `local`,group_concat(distinct `e`.`bloco` separator ', ') AS `bloco`,`vp`.`caixas` AS `caixas`,`vp`.`quant` AS `quant`,`vp`.`un` AS `un`,`vp`.`unCaixa` AS `unCaixa`,`vp`.`codComercial` AS `codComercial`,`vp`.`formComercial` AS `formComercial`,group_concat(`ehc`.`idConsumo` separator ',') AS `idConsumo` from ((`mydb`.`venda_has_produto` `vp` left join `mydb`.`estoque_has_consumo` `ehc` on((`vp`.`idVendaProduto` = `ehc`.`idVendaProduto`))) left join `mydb`.`estoque` `e` on((`ehc`.`idEstoque` = `e`.`idEstoque`))) group by `vp`.`idVendaProduto`;

-- -----------------------------------------------------
-- View `mydb`.`view_busca_veiculo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_busca_veiculo`;
DROP VIEW IF EXISTS `mydb`.`view_busca_veiculo` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_busca_veiculo` AS select `t`.`razaoSocial` AS `razaoSocial`,`thv`.`idVeiculo` AS `idVeiculo`,`thv`.`modelo` AS `modelo`,`thv`.`capacidade` AS `capacidade`,`thv`.`placa` AS `placa`,`thv`.`desativado` AS `desativado` from (`mydb`.`transportadora` `t` left join `mydb`.`transportadora_has_veiculo` `thv` on((`t`.`idTransportadora` = `thv`.`idTransportadora`)));

-- -----------------------------------------------------
-- View `mydb`.`view_calendario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_calendario`;
DROP VIEW IF EXISTS `mydb`.`view_calendario` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`view_calendario` AS select `vp`.`idVenda` AS `idVenda`,`vp`.`idEvento` AS `carga`,sum(`vp`.`caixas`) AS `caixas`,sum(`vp`.`kg`) AS `kg`,`vp`.`data` AS `data`,`t`.`razaoSocial` AS `razaoSocial`,`thv`.`modelo` AS `modelo`,`vp`.`status` AS `status`,`che`.`logradouro` AS `logradouro`,`che`.`numero` AS `numero`,`che`.`bairro` AS `bairro`,`che`.`cidade` AS `cidade`,`che`.`uf` AS `uf`,group_concat(concat(left(`vp`.`produto`,25),' - ',`vp`.`caixas`,' cx.') separator '/') AS `produtos` from ((((`mydb`.`veiculo_has_produto` `vp` left join `mydb`.`transportadora_has_veiculo` `thv` on((`vp`.`idVeiculo` = `thv`.`idVeiculo`))) left join `mydb`.`transportadora` `t` on((`t`.`idTransportadora` = `thv`.`idTransportadora`))) left join `mydb`.`venda` `v` on((`v`.`idVenda` = `vp`.`idVenda`))) left join `mydb`.`cliente_has_endereco` `che` on((`che`.`idEndereco` = `v`.`idEnderecoEntrega`))) where (`vp`.`status` <> 'ESTOQUE') group by `vp`.`idVeiculo`,`vp`.`data`,`vp`.`idVenda`,`vp`.`status`,`vp`.`idEvento` order by `vp`.`data`,`vp`.`idVenda`,`t`.`razaoSocial`,`thv`.`modelo`;

-- -----------------------------------------------------
-- View `mydb`.`view_calendario2`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_calendario2`;
DROP VIEW IF EXISTS `mydb`.`view_calendario2` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`view_calendario2` AS select `x`.`razaoSocial` AS `razaoSocial`,group_concat(distinct `x`.`status` separator ',') AS `status`,sum(`x`.`caixas`) AS `caixas`,sum(`x`.`kg`) AS `kg`,`x`.`idVeiculo` AS `idVeiculo`,`x`.`modelo` AS `modelo`,`x`.`data` AS `data`,group_concat(distinct `x`.`idVenda` separator '|') AS `idVenda`,group_concat(distinct `x`.`endereco` separator '|') AS `endereco` from (select `t`.`razaoSocial` AS `razaoSocial`,group_concat(distinct `vhp`.`status` separator ',') AS `status`,sum(`vhp`.`caixas`) AS `caixas`,sum(`vhp`.`kg`) AS `kg`,group_concat(distinct `vhp`.`idEvento` separator ',') AS `idEvento`,`vhp`.`idVenda` AS `idVenda`,`thv`.`modelo` AS `modelo`,`vhp`.`idVeiculo` AS `idVeiculo`,`vhp`.`data` AS `data`,replace(concat(`che`.`logradouro`,',',`che`.`numero`,',',`che`.`cidade`,',',`che`.`uf`),' ','+') AS `endereco` from ((((`mydb`.`veiculo_has_produto` `vhp` left join `mydb`.`transportadora_has_veiculo` `thv` on((`vhp`.`idVeiculo` = `thv`.`idVeiculo`))) left join `mydb`.`transportadora` `t` on((`thv`.`idTransportadora` = `t`.`idTransportadora`))) left join `mydb`.`venda` `v` on((`vhp`.`idVenda` = `v`.`idVenda`))) left join `mydb`.`cliente_has_endereco` `che` on((`che`.`idEndereco` = `v`.`idEnderecoEntrega`))) where ((`vhp`.`idVeiculo` <> 11) and (`che`.`idEndereco` <> 1)) group by `vhp`.`idVenda`,`vhp`.`data`,`vhp`.`idVeiculo`) `x` group by `x`.`idVeiculo`,`x`.`data` order by `x`.`data`,`x`.`idVeiculo`;

-- -----------------------------------------------------
-- View `mydb`.`view_calendario_carga`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_calendario_carga`;
DROP VIEW IF EXISTS `mydb`.`view_calendario_carga` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_calendario_carga` AS select `vhp`.`idVeiculo` AS `idVeiculo`,`vhp`.`idEvento` AS `idEvento`,`vhp`.`data` AS `dataPrevEnt`,`n`.`idNFe` AS `idNFe`,`n`.`status` AS `NFe Status`,`n`.`numeroNFe` AS `numeroNFe`,any_value((select `mydb`.`nfe`.`numeroNFe` from `mydb`.`nfe` where (`mydb`.`nfe`.`idNFe` = `vp`.`idNFeFutura`))) AS `NFe Futura`,`vhp`.`idVenda` AS `idVenda`,`vhp`.`status` AS `status`,count(0) AS `produtos`,sum(`vhp`.`kg`) AS `kg` from ((`mydb`.`veiculo_has_produto` `vhp` left join `mydb`.`venda_has_produto` `vp` on((`vhp`.`idVendaProduto` = `vp`.`idVendaProduto`))) left join `mydb`.`nfe` `n` on((`vp`.`idNFeSaida` = `n`.`idNFe`))) where ((`vhp`.`status` = 'ENTREGA AGEND.') or (`vhp`.`status` = 'EM ENTREGA')) group by `vhp`.`idVeiculo`,`vhp`.`data`,`n`.`idNFe`,`vhp`.`idVenda`,`vhp`.`idEvento`,`vhp`.`status`,`n`.`numeroNFe`;

-- -----------------------------------------------------
-- View `mydb`.`view_calendario_entrega`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_calendario_entrega`;
DROP VIEW IF EXISTS `mydb`.`view_calendario_entrega` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_calendario_entrega` AS select `vhp`.`idVeiculo` AS `idVeiculo`,cast(`vhp`.`data` as date) AS `data`,`thv`.`modelo` AS `modelo`,sum(`vhp`.`kg`) AS `kg`,`t`.`razaoSocial` AS `razaoSocial`,group_concat(distinct `vhp`.`idVenda` separator ', ') AS `idVenda` from ((`mydb`.`veiculo_has_produto` `vhp` left join `mydb`.`transportadora_has_veiculo` `thv` on((`vhp`.`idVeiculo` = `thv`.`idVeiculo`))) left join `mydb`.`transportadora` `t` on((`t`.`idTransportadora` = `thv`.`idTransportadora`))) where ((`vhp`.`status` = 'ENTREGA AGEND.') or (`vhp`.`status` = 'EM ENTREGA')) group by cast(`vhp`.`data` as date),`vhp`.`idVeiculo` order by cast(`vhp`.`data` as date);

-- -----------------------------------------------------
-- View `mydb`.`view_calendario_produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_calendario_produto`;
DROP VIEW IF EXISTS `mydb`.`view_calendario_produto` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_calendario_produto` AS select `vhp`.`idEvento` AS `idEvento`,`vp`.`idVenda` AS `idVenda`,`vp`.`idVendaProduto` AS `idVendaProduto`,`vp`.`fornecedor` AS `fornecedor`,`vp`.`produto` AS `produto`,`vp`.`formComercial` AS `formComercial`,`vp`.`codComercial` AS `codComercial`,`ehc`.`caixas` AS `caixas`,(`ehc`.`quant` * -(1)) AS `quant`,`vp`.`un` AS `un`,(((`ehc`.`quant` * -(1)) / `vp`.`quant`) * `vhp`.`kg`) AS `kg`,`e`.`idEstoque` AS `idEstoque`,`e`.`lote` AS `lote`,`e`.`local` AS `local`,`e`.`bloco` AS `bloco` from (((`mydb`.`veiculo_has_produto` `vhp` left join `mydb`.`venda_has_produto` `vp` on((`vhp`.`idVendaProduto` = `vp`.`idVendaProduto`))) left join `mydb`.`estoque_has_consumo` `ehc` on((`vp`.`idVendaProduto` = `ehc`.`idVendaProduto`))) left join `mydb`.`estoque` `e` on((`ehc`.`idEstoque` = `e`.`idEstoque`))) where ((`ehc`.`status` <> 'CANCELADO') and (`ehc`.`status` <> 'DEVOLVIDO'));

-- -----------------------------------------------------
-- View `mydb`.`view_caminhao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_caminhao`;
DROP VIEW IF EXISTS `mydb`.`view_caminhao` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_caminhao` AS select group_concat(distinct `vhp`.`idVeiculo` separator ',') AS `idVeiculo`,`t`.`razaoSocial` AS `Transportadora`,`thv`.`modelo` AS `Veículo`,`thv`.`placa` AS `Placa` from ((`mydb`.`veiculo_has_produto` `vhp` left join `mydb`.`transportadora_has_veiculo` `thv` on((`vhp`.`idVeiculo` = `thv`.`idVeiculo`))) left join `mydb`.`transportadora` `t` on((`thv`.`idTransportadora` = `t`.`idTransportadora`))) group by `thv`.`idVeiculo`;

-- -----------------------------------------------------
-- View `mydb`.`view_caminhao_resumo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_caminhao_resumo`;
DROP VIEW IF EXISTS `mydb`.`view_caminhao_resumo` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_caminhao_resumo` AS select group_concat(distinct `vhp`.`idVeiculo` separator ',') AS `idVeiculo`,`vhp`.`data` AS `data`,coalesce(sum(`vhp`.`kg`),0) AS `Kg` from `mydb`.`veiculo_has_produto` `vhp` group by `vhp`.`data`;

-- -----------------------------------------------------
-- View `mydb`.`view_coleta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_coleta`;
DROP VIEW IF EXISTS `mydb`.`view_coleta` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`view_coleta` AS select cast(min((`v`.`data` + interval `v`.`prazoEntrega` day)) as date) AS `prazoEntrega`,group_concat(distinct `pf`.`dataPrevColeta` separator ',') AS `dataPrevColeta`,`e`.`idEstoque` AS `idEstoque`,`e`.`lote` AS `lote`,`e`.`local` AS `local`,`e`.`bloco` AS `bloco`,group_concat(distinct `pf`.`fornecedor` separator ',') AS `fornecedor`,group_concat(distinct `n`.`numeroNFe` separator ',') AS `numeroNFe`,group_concat(distinct `pf`.`idVenda` separator ', ') AS `idVenda`,group_concat(distinct `pf`.`ordemCompra` separator ', ') AS `ordemCompra`,`e`.`descricao` AS `produto`,`e`.`codComercial` AS `codComercial`,abs(`e`.`quant`) AS `quant`,`e`.`un` AS `un`,`e`.`caixas` AS `caixas`,group_concat(distinct `pf`.`kgcx` separator ',') AS `kgcx`,group_concat(distinct `n`.`transportadora` separator ',') AS `Transportadora` from ((((`mydb`.`estoque` `e` left join `mydb`.`estoque_has_compra` `ehc` on((`e`.`idEstoque` = `ehc`.`idEstoque`))) left join `mydb`.`pedido_fornecedor_has_produto` `pf` on((`ehc`.`idPedido` = `pf`.`idPedido`))) left join `mydb`.`nfe` `n` on((`e`.`idNFe` = `n`.`idNFe`))) left join `mydb`.`venda` `v` on((`v`.`idVenda` = `pf`.`idVenda`))) where ((`e`.`status` = 'EM COLETA') and (`pf`.`dataPrevColeta` is not null) and (`pf`.`idPedido` is not null)) group by `e`.`idEstoque` desc order by `prazoEntrega`;

-- -----------------------------------------------------
-- View `mydb`.`view_compras`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_compras`;
DROP VIEW IF EXISTS `mydb`.`view_compras` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_compras` AS select any_value(`p`.`ordemCompra`) AS `OC`,`p`.`idCompra` AS `Compra`,any_value(`p`.`fornecedor`) AS `Fornecedor`,min(`v`.`data`) AS `Data Venda`,count(`p`.`idProduto`) AS `Produtos`,sum(`p`.`preco`) AS `Total`,any_value(`p`.`dataPrevConf`) AS `dataPrevConf`,group_concat(distinct substring_index(`u`.`nome`,' ',1) separator ', ') AS `Vendedor`,group_concat(distinct `p`.`idVenda` separator ', ') AS `Venda` from ((`mydb`.`pedido_fornecedor_has_produto` `p` left join `mydb`.`venda` `v` on((`p`.`idVenda` = `v`.`idVenda`))) left join `mydb`.`usuario` `u` on((`v`.`idUsuario` = `u`.`idUsuario`))) where (`p`.`status` = 'EM COMPRA') group by `p`.`idCompra`;

-- -----------------------------------------------------
-- View `mydb`.`view_compras_financeiro`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_compras_financeiro`;
DROP VIEW IF EXISTS `mydb`.`view_compras_financeiro` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_compras_financeiro` AS select group_concat(distinct `p`.`status` separator ', ') AS `Status`,group_concat(distinct `p`.`statusFinanceiro` separator ', ') AS `Status Financeiro`,group_concat(distinct `p`.`ordemCompra` separator ', ') AS `OC`,`p`.`idCompra` AS `Compra`,group_concat(distinct `p`.`idVenda` separator ', ') AS `Código`,group_concat(distinct `p`.`fornecedor` separator ', ') AS `Fornecedor`,count(`p`.`idProduto`) AS `Produtos`,sum(`p`.`preco`) AS `Total` from `mydb`.`pedido_fornecedor_has_produto` `p` where (`p`.`idCompra` is not null) group by `p`.`idCompra`;

-- -----------------------------------------------------
-- View `mydb`.`view_consistencia_compra`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_consistencia_compra`;
DROP VIEW IF EXISTS `mydb`.`view_consistencia_compra` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`view_consistencia_compra` AS select `mydb`.`pedido_fornecedor_has_produto`.`descricao` AS `descricao`,`mydb`.`pedido_fornecedor_has_produto`.`prcUnitario` AS `prcUnitario`,`mydb`.`pedido_fornecedor_has_produto`.`preco` AS `preco`,(`mydb`.`pedido_fornecedor_has_produto`.`prcUnitario` * `mydb`.`pedido_fornecedor_has_produto`.`quant`) AS `prcUnitario * quant` from `mydb`.`pedido_fornecedor_has_produto` where (((`mydb`.`pedido_fornecedor_has_produto`.`prcUnitario` * `mydb`.`pedido_fornecedor_has_produto`.`quant`) / `mydb`.`pedido_fornecedor_has_produto`.`preco`) > 1.01);

-- -----------------------------------------------------
-- View `mydb`.`view_conta_pagar`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_conta_pagar`;
DROP VIEW IF EXISTS `mydb`.`view_conta_pagar` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_conta_pagar` AS select `cp`.`idPagamento` AS `idPagamento`,`cp`.`idLoja` AS `idLoja`,`cp`.`contraParte` AS `contraparte`,`cp`.`dataPagamento` AS `dataPagamento`,`cp`.`dataEmissao` AS `dataEmissao`,`cp`.`valor` AS `valor`,`cp`.`status` AS `status`,group_concat(distinct `pf`.`ordemCompra` separator ',') AS `ordemCompra`,group_concat(distinct `pf`.`idVenda` separator ', ') AS `idVenda`,group_concat(distinct `n`.`numeroNFe` separator ', ') AS `numeroNFe`,`cp`.`tipo` AS `tipo`,`cp`.`parcela` AS `parcela`,`cp`.`observacao` AS `observacao`,group_concat(distinct `pf`.`statusFinanceiro` separator ',') AS `statusFinanceiro` from ((((`mydb`.`conta_a_pagar_has_pagamento` `cp` left join `mydb`.`pedido_fornecedor_has_produto` `pf` on((`cp`.`idCompra` = `pf`.`idCompra`))) left join `mydb`.`estoque_has_compra` `ehc` on((`ehc`.`idPedido` = `pf`.`idPedido`))) left join `mydb`.`estoque` `e` on((`ehc`.`idEstoque` = `e`.`idEstoque`))) left join `mydb`.`nfe` `n` on((`n`.`idNFe` = `e`.`idNFe`))) where (`cp`.`desativado` = FALSE) group by `cp`.`idPagamento` order by `cp`.`dataPagamento`;

-- -----------------------------------------------------
-- View `mydb`.`view_conta_receber`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_conta_receber`;
DROP VIEW IF EXISTS `mydb`.`view_conta_receber` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`view_conta_receber` AS select `cr`.`idPagamento` AS `idPagamento`,`cr`.`idLoja` AS `idLoja`,`cr`.`representacao` AS `representacao`,`cr`.`contraParte` AS `contraparte`,`cr`.`dataPagamento` AS `dataPagamento`,`cr`.`dataEmissao` AS `dataEmissao`,`cr`.`idVenda` AS `idVenda`,`cr`.`valor` AS `valor`,`cr`.`tipo` AS `tipo`,`cr`.`parcela` AS `parcela`,`cr`.`observacao` AS `observacao`,`cr`.`status` AS `status`,`v`.`statusFinanceiro` AS `statusFinanceiro` from (`mydb`.`conta_a_receber_has_pagamento` `cr` left join `mydb`.`venda` `v` on((`cr`.`idVenda` = `v`.`idVenda`))) where ((`cr`.`desativado` = FALSE) and (`cr`.`representacao` = 0)) group by `cr`.`idPagamento` order by `cr`.`dataPagamento`,`cr`.`idVenda`,`cr`.`tipo`,`cr`.`parcela` desc;

-- -----------------------------------------------------
-- View `mydb`.`view_custo_estoque`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_custo_estoque`;
DROP VIEW IF EXISTS `mydb`.`view_custo_estoque` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`view_custo_estoque` AS select `ehc`.`idVendaProduto` AS `idVendaProduto`,`pf`.`ordemCompra` AS `ordemCompra`,`pf`.`idVenda` AS `idVenda`,`ehc`.`descricao` AS `descricao`,`ehc`.`valor` AS `R$ Consumo`,`pf`.`preco` AS `R$ Compra`,`ehc`.`quant` AS `quant est`,`pf`.`quant` AS `quant compra`,(`ehc`.`valor` / `pf`.`preco`) AS `diferenca` from (`mydb`.`estoque_has_consumo` `ehc` left join `mydb`.`pedido_fornecedor_has_produto` `pf` on((`ehc`.`idVendaProduto` = `pf`.`idVendaProduto`))) where ((`pf`.`idVendaProduto` is not null) and ((`ehc`.`valor` / `pf`.`preco`) > 1.01));

-- -----------------------------------------------------
-- View `mydb`.`view_entrega`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_entrega`;
DROP VIEW IF EXISTS `mydb`.`view_entrega` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_entrega` AS select cast(min((`v`.`data` + interval `v`.`prazoEntrega` day)) as date) AS `prazoEntrega`,`vp`.`idVenda` AS `idVenda`,group_concat(distinct `vp`.`recebeu` separator ',') AS `Recebeu`,group_concat(distinct `vp`.`entregou` separator ',') AS `Entregou`,sum((`vp`.`status` = 'ESTOQUE')) AS `Estoque`,sum((`vp`.`status` = 'ENTREGUE')) AS `Entregue`,sum(((`vp`.`status` <> 'ESTOQUE') and (`vp`.`status` <> 'ENTREGUE'))) AS `Outros`,`che`.`bairro` AS `Bairro`,`che`.`logradouro` AS `Logradouro`,`che`.`numero` AS `Número`,`che`.`cidade` AS `Cidade` from ((`mydb`.`venda_has_produto` `vp` left join `mydb`.`venda` `v` on((`vp`.`idVenda` = `v`.`idVenda`))) left join `mydb`.`cliente_has_endereco` `che` on((`v`.`idEnderecoEntrega` = `che`.`idEndereco`))) where (not((`vp`.`idVenda` like '%D'))) group by `vp`.`idVenda`;

-- -----------------------------------------------------
-- View `mydb`.`view_entrega_pendente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_entrega_pendente`;
DROP VIEW IF EXISTS `mydb`.`view_entrega_pendente` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_entrega_pendente` AS select `v`.`data` AS `data`,cast((`v`.`data` + interval `v`.`prazoEntrega` day) as date) AS `prazoEntrega`,cast((`v`.`data` + interval `v`.`novoPrazoEntrega` day) as date) AS `novoPrazoEntrega`,cast(min(`vp`.`dataRealReceb`) as date) AS `dataRealReceb`,`v`.`statusFinanceiro` AS `statusFinanceiro`,`vp`.`idVenda` AS `idVenda`,sum((`vp`.`status` = 'ESTOQUE')) AS `Estoque`,sum(((`vp`.`status` = 'ENTREGUE') or (`vp`.`status` = 'EM ENTREGA') or (`vp`.`status` = 'ENTREGA AGEND.'))) AS `Agend/Entregue`,sum(((`vp`.`status` <> 'ESTOQUE') and (`vp`.`status` <> 'ENTREGUE') and (`vp`.`status` <> 'EM ENTREGA') and (`vp`.`status` <> 'ENTREGA AGEND.') and (`vp`.`status` <> 'DEVOLVIDO') and (`vp`.`status` <> 'QUEBRADO'))) AS `Outros`,`che`.`bairro` AS `Bairro`,`che`.`logradouro` AS `Logradouro`,`che`.`numero` AS `Número`,`che`.`cidade` AS `Cidade` from ((`mydb`.`venda_has_produto` `vp` left join `mydb`.`venda` `v` on((`vp`.`idVenda` = `v`.`idVenda`))) left join `mydb`.`cliente_has_endereco` `che` on((`v`.`idEnderecoEntrega` = `che`.`idEndereco`))) where ((not((`vp`.`idVenda` like '%D'))) and (`v`.`status` <> 'ENTREGUE') and (`v`.`status` <> 'CANCELADO') and (`v`.`status` <> 'DEVOLVIDO') and (`v`.`representacao` = FALSE) and (`v`.`devolucao` = FALSE)) group by `vp`.`idVenda`;

-- -----------------------------------------------------
-- View `mydb`.`view_entrega_produtos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_entrega_produtos`;
DROP VIEW IF EXISTS `mydb`.`view_entrega_produtos` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_entrega_produtos` AS select `vp`.`idVendaProduto` AS `idVendaProduto`,`vp`.`idProduto` AS `idProduto`,`vp`.`dataPrevEnt` AS `dataPrevEnt`,`vp`.`dataRealEnt` AS `dataRealEnt`,`vp`.`status` AS `status`,`vp`.`fornecedor` AS `fornecedor`,`vp`.`idVenda` AS `idVenda`,`vp`.`produto` AS `produto`,`vp`.`caixas` AS `caixas`,`vp`.`quant` AS `quant`,`vp`.`un` AS `un`,`vp`.`unCaixa` AS `unCaixa`,`vp`.`codComercial` AS `codComercial`,`vp`.`formComercial` AS `formComercial`,group_concat(distinct `ehc`.`idConsumo` separator ',') AS `idConsumo` from (`mydb`.`venda_has_produto` `vp` left join `mydb`.`estoque_has_consumo` `ehc` on((`vp`.`idVendaProduto` = `ehc`.`idVendaProduto`))) group by `vp`.`idVendaProduto`;

-- -----------------------------------------------------
-- View `mydb`.`view_estoque`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_estoque`;
DROP VIEW IF EXISTS `mydb`.`view_estoque` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`view_estoque` AS select `y`.`cnpjDest` AS `cnpjDest`,`x`.`status` AS `status`,`x`.`idEstoque` AS `idEstoque`,`x`.`fornecedor` AS `fornecedor`,`x`.`descricao` AS `descricao`,`x`.`Quant Rest` AS `restante`,`x`.`Quant Est` AS `restante est`,`x`.`un3` AS `unEst`,if((`x`.`un` = `x`.`un2`),`x`.`un`,concat(`x`.`un`,'/',`x`.`un2`)) AS `unProd`,if(((`x`.`un` = 'M²') or (`x`.`un` = 'M2') or (`x`.`un` = 'ML')),`x`.`Caixas M2`,`x`.`Caixas PÇ`) AS `Caixas`,`x`.`lote` AS `lote`,`x`.`local` AS `local`,`x`.`bloco` AS `bloco`,`x`.`codComercial` AS `codComercial`,`y`.`idCompra` AS `idCompra`,`y`.`nfe` AS `nfe`,`y`.`dataPrevColeta` AS `dataPrevColeta`,`y`.`dataRealColeta` AS `dataRealColeta`,`y`.`dataPrevReceb` AS `dataPrevReceb`,`y`.`dataRealReceb` AS `dataRealReceb` from (((select `e`.`status` AS `status`,`e`.`idEstoque` AS `idEstoque`,`p`.`fornecedor` AS `fornecedor`,`e`.`descricao` AS `descricao`,(`e`.`quant` + coalesce(sum(`ec`.`quant`),0)) AS `Quant Rest`,(`e`.`quant` + coalesce(sum(if(((`vp`.`status` = 'ENTREGUE') or (`vp`.`status` = 'EM ENTREGA') or (`ec`.`status` = 'AJUSTE') or (`ec`.`status` = 'DEVOLVIDO')),`ec`.`quant`,0)))) AS `Quant Est`,`p`.`un` AS `un`,`p`.`un2` AS `un2`,`e`.`un` AS `un3`,((`e`.`quant` + coalesce(sum(`ec`.`quant`),0)) / `p`.`m2cx`) AS `Caixas M2`,((`e`.`quant` + coalesce(sum(`ec`.`quant`),0)) / `p`.`pccx`) AS `Caixas PÇ`,`e`.`codComercial` AS `codComercial`,`e`.`lote` AS `lote`,`e`.`local` AS `local`,`e`.`bloco` AS `bloco` from (((`mydb`.`estoque` `e` left join `mydb`.`estoque_has_consumo` `ec` on((`e`.`idEstoque` = `ec`.`idEstoque`))) left join `mydb`.`produto` `p` on((`e`.`idProduto` = `p`.`idProduto`))) left join `mydb`.`venda_has_produto` `vp` on((`ec`.`idVendaProduto` = `vp`.`idVendaProduto`))) where ((`e`.`status` <> 'CANCELADO') and (`e`.`status` <> 'QUEBRADO')) group by `e`.`idEstoque`)) `x` join (select group_concat(distinct `n`.`cnpjDest` separator ',') AS `cnpjDest`,`e`.`idEstoque` AS `idEstoque`,group_concat(distinct `ehc`.`idCompra` separator ',') AS `idCompra`,group_concat(distinct `n`.`numeroNFe` separator ', ') AS `nfe`,group_concat(distinct `pf`.`dataPrevColeta` separator ',') AS `dataPrevColeta`,group_concat(distinct `pf`.`dataRealColeta` separator ',') AS `dataRealColeta`,group_concat(distinct `pf`.`dataPrevReceb` separator ',') AS `dataPrevReceb`,group_concat(distinct `pf`.`dataRealReceb` separator ',') AS `dataRealReceb`,group_concat(distinct `pf`.`dataPrevEnt` separator ',') AS `dataPrevEnt`,group_concat(distinct `pf`.`dataRealEnt` separator ',') AS `dataRealEnt` from (((`mydb`.`estoque` `e` left join `mydb`.`estoque_has_compra` `ehc` on((`e`.`idEstoque` = `ehc`.`idEstoque`))) left join `mydb`.`pedido_fornecedor_has_produto` `pf` on((`ehc`.`idPedido` = `pf`.`idPedido`))) left join `mydb`.`nfe` `n` on((`e`.`idNFe` = `n`.`idNFe`))) group by `e`.`idEstoque`) `y` on((`x`.`idEstoque` = `y`.`idEstoque`)));

-- -----------------------------------------------------
-- View `mydb`.`view_estoque2`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_estoque2`;
DROP VIEW IF EXISTS `mydb`.`view_estoque2` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`view_estoque2` AS select group_concat(distinct `n`.`cnpjDest` separator ',') AS `cnpjDest`,`e`.`status` AS `status`,`e`.`idEstoque` AS `idEstoque`,`p`.`fornecedor` AS `fornecedor`,`e`.`descricao` AS `descricao`,(`e`.`quant` + coalesce(`ec`.`consumo`,0)) AS `restante`,`e`.`un` AS `unEst`,if((`p`.`un` = `p`.`un2`),`p`.`un`,concat(`p`.`un`,'/',`p`.`un2`)) AS `unProd`,if(((`p`.`un` = 'M²') or (`p`.`un` = 'M2') or (`p`.`un` = 'ML')),((`e`.`quant` + coalesce(`ec`.`consumo`,0)) / `p`.`m2cx`),((`e`.`quant` + coalesce(`ec`.`consumo`,0)) / `p`.`pccx`)) AS `Caixas`,`e`.`lote` AS `lote`,`e`.`local` AS `local`,`e`.`bloco` AS `bloco`,`e`.`codComercial` AS `codComercial`,group_concat(distinct `n`.`numeroNFe` separator ', ') AS `nfe`,`vp`.`idCompra` AS `idCompra`,`vp`.`dataPrevColeta` AS `dataPrevColeta`,`vp`.`dataRealColeta` AS `dataRealColeta`,`vp`.`dataPrevReceb` AS `dataPrevReceb`,`vp`.`dataRealReceb` AS `dataRealReceb` from ((((((select `e`.`idEstoque` AS `idEstoque`,`e`.`idNFe` AS `idNFe`,`e`.`status` AS `status`,`e`.`idProduto` AS `idProduto`,`e`.`descricao` AS `descricao`,`e`.`lote` AS `lote`,`e`.`local` AS `local`,`e`.`bloco` AS `bloco`,`e`.`quant` AS `quant`,`e`.`un` AS `un`,`e`.`codComercial` AS `codComercial` from `mydb`.`estoque` `e` where (`e`.`status` not in ('QUEBRADO','CANCELADO')))) `e` left join (select sum(`ec`.`quant`) AS `consumo`,`ec`.`idEstoque` AS `idEstoque`,group_concat(distinct `ec`.`idVendaProduto` separator ',') AS `idVendaProduto` from `mydb`.`estoque_has_consumo` `ec` group by `ec`.`idEstoque`) `ec` on((`e`.`idEstoque` = `ec`.`idEstoque`))) left join (select `p`.`idProduto` AS `idProduto`,`p`.`fornecedor` AS `fornecedor`,`p`.`un` AS `un`,`p`.`un2` AS `un2`,`p`.`m2cx` AS `m2cx`,`p`.`pccx` AS `pccx` from `mydb`.`produto` `p`) `p` on((`p`.`idProduto` = `e`.`idProduto`))) left join (select `vp`.`idVendaProduto` AS `idVendaProduto`,`vp`.`idCompra` AS `idCompra`,`vp`.`dataPrevColeta` AS `dataPrevColeta`,`vp`.`dataRealColeta` AS `dataRealColeta`,`vp`.`dataPrevReceb` AS `dataPrevReceb`,`vp`.`dataRealReceb` AS `dataRealReceb` from `mydb`.`venda_has_produto` `vp`) `vp` on((`vp`.`idVendaProduto` = `ec`.`idVendaProduto`))) left join (select `n`.`idNFe` AS `idNFe`,`n`.`numeroNFe` AS `numeroNFe`,`n`.`cnpjDest` AS `cnpjDest` from `mydb`.`nfe` `n`) `n` on((`e`.`idNFe` = `n`.`idNFe`))) group by `e`.`idEstoque`;

-- -----------------------------------------------------
-- View `mydb`.`view_estoque_consumo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_estoque_consumo`;
DROP VIEW IF EXISTS `mydb`.`view_estoque_consumo` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_estoque_consumo` AS select `vp`.`idVenda` AS `Venda`,`ehc`.`idEstoque` AS `idEstoque`,`vp`.`status` AS `statusProduto`,`ehc`.`status` AS `status`,`ehc`.`local` AS `local`,`ehc`.`fornecedor` AS `fornecedor`,`ehc`.`descricao` AS `descricao`,`ehc`.`quant` AS `quant`,`ehc`.`quantUpd` AS `quantUpd`,`ehc`.`un` AS `un`,`ehc`.`caixas` AS `caixas`,`ehc`.`codComercial` AS `codComercial`,`vp`.`dataRealEnt` AS `dataRealEnt`,`ehc`.`created` AS `created` from (`mydb`.`estoque_has_consumo` `ehc` left join `mydb`.`venda_has_produto` `vp` on((`ehc`.`idVendaProduto` = `vp`.`idVendaProduto`)));

-- -----------------------------------------------------
-- View `mydb`.`view_faturamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_faturamento`;
DROP VIEW IF EXISTS `mydb`.`view_faturamento` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_faturamento` AS select any_value(`pf`.`ordemCompra`) AS `OC`,any_value(`pf`.`fornecedor`) AS `Fornecedor`,min(`v`.`data`) AS `Data Venda`,count(`pf`.`idProduto`) AS `Produtos`,sum(`pf`.`preco`) AS `Total`,`pf`.`idCompra` AS `idCompra`,any_value(`pf`.`dataPrevFat`) AS `dataPrevFat`,group_concat(distinct substring_index(`u`.`nome`,' ',1) separator ', ') AS `Vendedor`,group_concat(distinct `pf`.`idVenda` separator ', ') AS `Código`,any_value(`f`.`representacao`) AS `representacao` from (((`mydb`.`pedido_fornecedor_has_produto` `pf` left join `mydb`.`fornecedor` `f` on((`pf`.`fornecedor` = `f`.`razaoSocial`))) left join `mydb`.`venda` `v` on((`v`.`idVenda` = `pf`.`idVenda`))) left join `mydb`.`usuario` `u` on((`v`.`idUsuario` = `u`.`idUsuario`))) where (`pf`.`status` = 'EM FATURAMENTO') group by `pf`.`idCompra`;

-- -----------------------------------------------------
-- View `mydb`.`view_financeiro`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_financeiro`;
DROP VIEW IF EXISTS `mydb`.`view_financeiro` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_financeiro` AS select group_concat(distinct date_format(`v`.`data`,'%m/%Y') separator ',') AS `mes`,`l`.`nomeFantasia` AS `nomeFantasia`,(sum(`vp`.`total`) + 0E0) AS `SomaDetotal`,(sum(if(isnull(`ehc`.`valorunid`),(`pf`.`prcUnitario` * `vp`.`quant`),((`vp`.`quant` * (1 - (0 * (`ehc`.`desconto` / `ehc`.`valor`)))) * `ehc`.`valorunid`))) + 0E0) AS `custo`,if((isnull(`ehc`.`valorunid`) and isnull(`pf`.`prcUnitario`) and (right(`vp`.`idVenda`,1) <> 'R') and (right(`vp`.`idVenda`,2) <> 'RD')),'sem custo','') AS `sem custo`,(sum(if(((right(`vp`.`idVenda`,1) = 'R') or (right(`vp`.`idVenda`,2) = 'RD')),0,((0.58 * 0.12) * if(isnull(`ehc`.`valorunid`),(`pf`.`prcUnitario` * `vp`.`quant`),(`vp`.`quant` * `ehc`.`valorunid`))))) + 0E0) AS `ICMS`,sum(if(((right(`vp`.`idVenda`,1) = 'R') or (right(`vp`.`idVenda`,2) = 'RD')),(((`f`.`comissaoLoja` / 100) * `vp`.`total`) * ((0.25 * 0.32) + (0.09 * 0.32))),(`vp`.`total` * ((0.25 * 0.08) + (0.09 * 0.12))))) AS `IR+CSLL`,sum(if(((right(`vp`.`idVenda`,1) = 'R') or (right(`vp`.`idVenda`,2) = 'RD')),(((`f`.`comissaoLoja` / 100) * `vp`.`total`) * 0.0865),(`vp`.`total` * 0.0365))) AS `PIS+Cofins+ISS`,if(((right(`vp`.`idVenda`,1) = 'R') or (right(`vp`.`idVenda`,2) = 'RD')),'Representacao','Venda') AS `Representacao`,sum(if(((right(`vp`.`idVenda`,1) = 'R') or (right(`vp`.`idVenda`,2) = 'RD')),((`vp`.`total` * `f`.`comissaoLoja`) / 100),0)) AS `Comissao Representacao`,(sum(((`vp`.`total` * `prof`.`comissao`) / 100)) + 0E0) AS `RT`,sum((((`f`.`comissao1` / 100) * `vp`.`total`) - ((((right(`p`.`ui`,1) = 'L') * (`f`.`comissao2` - `f`.`comissao1`)) / 100) * `vp`.`total`))) AS `ValorComissao`,if((group_concat(distinct `cr`.`Cartao` separator ',') is not null),((-(1) * (group_concat(distinct `cr`.`Cartao` separator ',') * group_concat(distinct `vp`.`total` separator ','))) / (group_concat(distinct `v`.`total` separator ',') - group_concat(distinct `v`.`frete` separator ','))),0E0) AS `Cartao` from (((((((((`mydb`.`venda_has_produto` `vp` left join `mydb`.`venda` `v` on((`vp`.`idVenda` = `v`.`idVenda`))) left join `mydb`.`usuario` `u` on((`v`.`idUsuario` = `u`.`idUsuario`))) left join `mydb`.`loja` `l` on((`vp`.`idLoja` = `l`.`idLoja`))) left join (select group_concat(distinct last_insert_id(`ehc`.`valorUnid`) separator ',') AS `valorunid`,group_concat(distinct last_insert_id(`ehc`.`desconto`) separator ',') AS `desconto`,group_concat(distinct last_insert_id(`ehc`.`valor`) separator ',') AS `valor`,last_insert_id(`ehc`.`idVendaProduto`) AS `idvendaproduto` from `mydb`.`estoque_has_consumo` `ehc` group by `ehc`.`idVendaProduto`) `ehc` on((`vp`.`idVendaProduto` = `ehc`.`idvendaproduto`))) left join (select `pf`.`idCompra` AS `idCompra`,`pf`.`idProduto` AS `idProduto`,group_concat(distinct last_insert_id(`pf`.`prcUnitario`) separator ',') AS `prcUnitario` from `mydb`.`pedido_fornecedor_has_produto` `pf` group by `pf`.`idCompra`,`pf`.`idProduto`) `pf` on(((`vp`.`idProduto` = `pf`.`idProduto`) and (`vp`.`idCompra` = `pf`.`idCompra`)))) left join `mydb`.`fornecedor` `f` on((`vp`.`fornecedor` = `f`.`razaoSocial`))) left join `mydb`.`profissional` `prof` on((`v`.`idProfissional` = `prof`.`idProfissional`))) left join `mydb`.`produto` `p` on((`vp`.`idProduto` = `p`.`idProduto`))) left join (select sum(`cr`.`valor`) AS `Cartao`,`cr`.`idVenda` AS `idVenda` from `mydb`.`conta_a_receber_has_pagamento` `cr` where ((`cr`.`status` <> 'CANCELADO') and (`cr`.`tipo` like '%Taxa Cartão') and (`cr`.`desativado` = FALSE)) group by `cr`.`idVenda`) `cr` on((`cr`.`idVenda` = `vp`.`idVenda`))) where (`vp`.`status` <> 'CANCELADO') group by date_format(`v`.`data`,'%Y-%m'),`l`.`nomeFantasia`,if((isnull(`ehc`.`valorunid`) and isnull(`pf`.`prcUnitario`) and (right(`vp`.`idVenda`,1) <> 'R') and (right(`vp`.`idVenda`,2) <> 'RD')),'sem custo',''),if(((right(`vp`.`idVenda`,1) = 'R') or (right(`vp`.`idVenda`,2) = 'RD')),'Representacao','Venda'),if((`cr`.`Cartao` is not null),((`cr`.`Cartao` * `vp`.`total`) / (`v`.`total` - `v`.`frete`)),0);

-- -----------------------------------------------------
-- View `mydb`.`view_fluxo_caixa`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_fluxo_caixa`;
DROP VIEW IF EXISTS `mydb`.`view_fluxo_caixa` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_fluxo_caixa` AS select `cp`.`idCompra` AS `Compra/Venda`,`cp`.`dataPagamento` AS `Data Pag`,`cp`.`dataRealizado` AS `Data`,(`cp`.`valorReal` * -(1)) AS `R$`,`cp`.`tipo` AS `Tipo`,(select concat(`mydb`.`loja_has_conta`.`banco`,' - ',`mydb`.`loja_has_conta`.`agencia`,' - ',`mydb`.`loja_has_conta`.`conta`) from `mydb`.`loja_has_conta` where (`mydb`.`loja_has_conta`.`idConta` = `cp`.`contaDestino`)) AS `contaDestino`,`cp`.`contaDestino` AS `idConta`,`cp`.`status` AS `Status`,'SAIDA' AS `ENT/SAI` from `mydb`.`conta_a_pagar_has_pagamento` `cp` where ((`cp`.`status` = 'PAGO') and (`cp`.`desativado` = FALSE)) union all select `cr`.`idVenda` AS `idVenda`,`cr`.`dataPagamento` AS `dataPagamento`,`cr`.`dataRealizado` AS `Data`,`cr`.`valorReal` AS `valor`,`cr`.`tipo` AS `tipo`,(select concat(`mydb`.`loja_has_conta`.`banco`,' - ',`mydb`.`loja_has_conta`.`agencia`,' - ',`mydb`.`loja_has_conta`.`conta`) from `mydb`.`loja_has_conta` where (`mydb`.`loja_has_conta`.`idConta` = `cr`.`contaDestino`)) AS `contaDestino`,`cr`.`contaDestino` AS `idConta`,`cr`.`status` AS `status`,'ENTRADA' AS `ENTRADA` from `mydb`.`conta_a_receber_has_pagamento` `cr` where ((`cr`.`status` = 'RECEBIDO') and (`cr`.`desativado` = FALSE)) order by `Data Pag`;

-- -----------------------------------------------------
-- View `mydb`.`view_fluxo_caixa2`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_fluxo_caixa2`;
DROP VIEW IF EXISTS `mydb`.`view_fluxo_caixa2` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_fluxo_caixa2` AS select `cp`.`idCompra` AS `Compra/Venda`,`cp`.`dataPagamento` AS `Data Pag`,`cp`.`dataRealizado` AS `Data`,(`cp`.`valor` * -(1)) AS `R$`,`cp`.`tipo` AS `Tipo`,(select concat(`mydb`.`loja_has_conta`.`banco`,' - ',`mydb`.`loja_has_conta`.`agencia`,' - ',`mydb`.`loja_has_conta`.`conta`) from `mydb`.`loja_has_conta` where (`mydb`.`loja_has_conta`.`idConta` = `cp`.`contaDestino`)) AS `contaDestino`,`cp`.`contaDestino` AS `idConta`,`cp`.`status` AS `Status`,'SAIDA' AS `ENT/SAI` from `mydb`.`conta_a_pagar_has_pagamento` `cp` where ((`cp`.`status` <> 'PAGO') and (`cp`.`status` <> 'CANCELADO') and (`cp`.`status` <> 'SUBSTITUIDO') and (`cp`.`desativado` = FALSE)) union all select `cr`.`idVenda` AS `idVenda`,`cr`.`dataPagamento` AS `dataPagamento`,`cr`.`dataRealizado` AS `Data`,`cr`.`valor` AS `valor`,`cr`.`tipo` AS `tipo`,(select concat(`mydb`.`loja_has_conta`.`banco`,' - ',`mydb`.`loja_has_conta`.`agencia`,' - ',`mydb`.`loja_has_conta`.`conta`) from `mydb`.`loja_has_conta` where (`mydb`.`loja_has_conta`.`idConta` = `cr`.`contaDestino`)) AS `contaDestino`,`cr`.`contaDestino` AS `idConta`,`cr`.`status` AS `status`,'ENTRADA' AS `ENTRADA` from `mydb`.`conta_a_receber_has_pagamento` `cr` where ((`cr`.`status` <> 'RECEBIDO') and (`cr`.`status` <> 'CANCELADO') and (`cr`.`status` <> 'SUBSTITUIDO') and (`cr`.`desativado` = FALSE) and (`cr`.`representacao` = FALSE)) order by `Data Pag`;

-- -----------------------------------------------------
-- View `mydb`.`view_fluxo_resumo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_fluxo_resumo`;
DROP VIEW IF EXISTS `mydb`.`view_fluxo_resumo` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_fluxo_resumo` AS select `v`.`Data Pag` AS `Data Pag`,group_concat(distinct `v`.`Data` separator ',') AS `Data`,`v`.`idConta` AS `idConta`,sum(if((`v`.`ENT/SAI` = 'SAIDA'),`v`.`R$`,0)) AS `SAIDA`,sum(if((`v`.`ENT/SAI` = 'ENTRADA'),`v`.`R$`,0)) AS `ENTRADA`,sum(`v`.`R$`) AS `R$` from `mydb`.`view_fluxo_caixa` `v` where ((`v`.`Status` = 'PAGO') or (`v`.`Status` = 'RECEBIDO')) group by `v`.`Data Pag`,`v`.`idConta` order by `v`.`Data Pag`;

-- -----------------------------------------------------
-- View `mydb`.`view_fluxo_resumo2`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_fluxo_resumo2`;
DROP VIEW IF EXISTS `mydb`.`view_fluxo_resumo2` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_fluxo_resumo2` AS select group_concat(distinct `v`.`Data Pag` separator ',') AS `Data Pag`,`v`.`Data` AS `Data`,group_concat(distinct `v`.`contaDestino` separator ',') AS `Conta`,`v`.`idConta` AS `idConta`,sum(if((`v`.`ENT/SAI` = 'SAIDA'),`v`.`R$`,0)) AS `SAIDA`,sum(if((`v`.`ENT/SAI` = 'ENTRADA'),`v`.`R$`,0)) AS `ENTRADA`,sum(`v`.`R$`) AS `R$` from `mydb`.`view_fluxo_caixa` `v` where ((`v`.`Status` = 'PAGO') or (`v`.`Status` = 'RECEBIDO')) group by `v`.`Data`,`v`.`idConta` order by `v`.`Data`;

-- -----------------------------------------------------
-- View `mydb`.`view_fluxo_resumo3`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_fluxo_resumo3`;
DROP VIEW IF EXISTS `mydb`.`view_fluxo_resumo3` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_fluxo_resumo3` AS select `v`.`Data Pag` AS `Data Pag`,sum(if((`v`.`ENT/SAI` = 'SAIDA'),`v`.`R$`,0)) AS `SAIDA`,sum(if((`v`.`ENT/SAI` = 'ENTRADA'),`v`.`R$`,0)) AS `ENTRADA`,sum(`v`.`R$`) AS `R$` from `mydb`.`view_fluxo_caixa2` `v` group by `v`.`Data Pag` order by `v`.`Data Pag`;

-- -----------------------------------------------------
-- View `mydb`.`view_followup_orcamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_followup_orcamento`;
DROP VIEW IF EXISTS `mydb`.`view_followup_orcamento` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`view_followup_orcamento` AS select `ohf`.`idOrcamento` AS `idOrcamento`,`u`.`nome` AS `nome`,`ohf`.`observacao` AS `observacao`,`ohf`.`dataFollowup` AS `dataFollowup`,`ohf`.`dataProxFollowup` AS `dataProxFollowup`,`ohf`.`semaforo` AS `semaforo` from (`mydb`.`orcamento_has_followup` `ohf` left join `mydb`.`usuario` `u` on((`ohf`.`idUsuario` = `u`.`idUsuario`)));

-- -----------------------------------------------------
-- View `mydb`.`view_followup_venda`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_followup_venda`;
DROP VIEW IF EXISTS `mydb`.`view_followup_venda` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`view_followup_venda` AS select `vhf`.`idVenda` AS `idVenda`,`u`.`nome` AS `nome`,`vhf`.`tipoOperacao` AS `Tipo`,`vhf`.`observacao` AS `observacao`,`vhf`.`dataFollowup` AS `dataFollowup` from (`mydb`.`venda_has_followup` `vhf` left join `mydb`.`usuario` `u` on((`vhf`.`idUsuario` = `u`.`idUsuario`)));

-- -----------------------------------------------------
-- View `mydb`.`view_fornecedor_compra`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_fornecedor_compra`;
DROP VIEW IF EXISTS `mydb`.`view_fornecedor_compra` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_fornecedor_compra` AS select `pf`.`fornecedor` AS `fornecedor`,sum((case when (`pf`.`status` = 'PENDENTE') then 1 else 0 end)) AS `PEND`,sum((case when (`pf`.`status` = 'EM COMPRA') then 1 else 0 end)) AS `CONF`,sum((case when (`pf`.`status` = 'EM FATURAMENTO') then 1 else 0 end)) AS `FAT` from `mydb`.`pedido_fornecedor_has_produto` `pf` where ((`pf`.`status` = 'PENDENTE') or (`pf`.`status` = 'INICIADO') or (`pf`.`status` = 'EM COMPRA') or (`pf`.`status` = 'EM FATURAMENTO')) group by `pf`.`fornecedor`;

-- -----------------------------------------------------
-- View `mydb`.`view_fornecedor_compra_confirmar`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_fornecedor_compra_confirmar`;
DROP VIEW IF EXISTS `mydb`.`view_fornecedor_compra_confirmar` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_fornecedor_compra_confirmar` AS select sum((case when (`pf`.`status` = 'EM COMPRA') then 1 else 0 end)) AS `CONF`,`pf`.`fornecedor` AS `Fornecedor` from `mydb`.`pedido_fornecedor_has_produto` `pf` where (`pf`.`status` = 'EM COMPRA') group by `pf`.`fornecedor`;

-- -----------------------------------------------------
-- View `mydb`.`view_fornecedor_compra_faturar`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_fornecedor_compra_faturar`;
DROP VIEW IF EXISTS `mydb`.`view_fornecedor_compra_faturar` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_fornecedor_compra_faturar` AS select sum((case when (`pf`.`status` = 'EM FATURAMENTO') then 1 else 0 end)) AS `FAT`,`pf`.`fornecedor` AS `Fornecedor` from `mydb`.`pedido_fornecedor_has_produto` `pf` where (`pf`.`status` = 'EM FATURAMENTO') group by `pf`.`fornecedor`;

-- -----------------------------------------------------
-- View `mydb`.`view_fornecedor_compra_gerar`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_fornecedor_compra_gerar`;
DROP VIEW IF EXISTS `mydb`.`view_fornecedor_compra_gerar` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_fornecedor_compra_gerar` AS select sum((case when (`pf`.`status` = 'PENDENTE') then 1 else 0 end)) AS `PEND`,`pf`.`fornecedor` AS `Fornecedor` from `mydb`.`pedido_fornecedor_has_produto` `pf` where (`pf`.`status` = 'PENDENTE') group by `pf`.`fornecedor`;

-- -----------------------------------------------------
-- View `mydb`.`view_fornecedor_logistica_agendar_coleta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_fornecedor_logistica_agendar_coleta`;
DROP VIEW IF EXISTS `mydb`.`view_fornecedor_logistica_agendar_coleta` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_fornecedor_logistica_agendar_coleta` AS select `subquery`.`fornecedor` AS `Fornecedor`,sum(isnull(`subquery`.`idVenda`)) AS `Estoque`,sum((`subquery`.`idVenda` is not null)) AS `Venda` from (select group_concat(distinct `pf`.`fornecedor` separator ',') AS `fornecedor`,`e`.`status` AS `status`,group_concat(distinct `pf`.`idVenda` separator ',') AS `idVenda` from ((`mydb`.`estoque` `e` left join `mydb`.`estoque_has_compra` `ehc` on((`e`.`idEstoque` = `ehc`.`idEstoque`))) left join `mydb`.`pedido_fornecedor_has_produto` `pf` on((`ehc`.`idPedido` = `pf`.`idPedido`))) where ((`e`.`status` = 'EM COLETA') and isnull(`pf`.`dataPrevColeta`) and (`pf`.`idPedido` is not null)) group by `e`.`idEstoque`) `subquery` group by `subquery`.`fornecedor`;

-- -----------------------------------------------------
-- View `mydb`.`view_fornecedor_logistica_coleta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_fornecedor_logistica_coleta`;
DROP VIEW IF EXISTS `mydb`.`view_fornecedor_logistica_coleta` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_fornecedor_logistica_coleta` AS select `subquery`.`fornecedor` AS `Fornecedor`,sum((`subquery`.`status` = 'EM COLETA')) AS `COLET` from (select group_concat(distinct `pf`.`fornecedor` separator ',') AS `fornecedor`,`e`.`status` AS `status` from ((`mydb`.`estoque` `e` left join `mydb`.`estoque_has_compra` `ehc` on((`e`.`idEstoque` = `ehc`.`idEstoque`))) left join `mydb`.`pedido_fornecedor_has_produto` `pf` on((`ehc`.`idPedido` = `pf`.`idPedido`))) where ((`e`.`status` = 'EM COLETA') and (`pf`.`dataPrevColeta` is not null) and (`pf`.`idPedido` is not null)) group by `e`.`idEstoque`) `subquery` group by `subquery`.`fornecedor`;

-- -----------------------------------------------------
-- View `mydb`.`view_fornecedor_logistica_recebimento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_fornecedor_logistica_recebimento`;
DROP VIEW IF EXISTS `mydb`.`view_fornecedor_logistica_recebimento` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_fornecedor_logistica_recebimento` AS select `subquery`.`fornecedor` AS `Fornecedor`,sum((`subquery`.`status` = 'EM RECEBIMENTO')) AS `RECEB` from (select group_concat(distinct `pf`.`fornecedor` separator ',') AS `fornecedor`,`e`.`status` AS `status` from ((`mydb`.`estoque` `e` left join `mydb`.`estoque_has_compra` `ehc` on((`e`.`idEstoque` = `ehc`.`idEstoque`))) left join `mydb`.`pedido_fornecedor_has_produto` `pf` on((`ehc`.`idPedido` = `pf`.`idPedido`))) where ((`e`.`status` = 'EM RECEBIMENTO') and (`pf`.`dataPrevReceb` is not null) and (`pf`.`idPedido` is not null)) group by `e`.`idEstoque`) `subquery` group by `subquery`.`fornecedor`;

-- -----------------------------------------------------
-- View `mydb`.`view_fornecedor_logistica_representacao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_fornecedor_logistica_representacao`;
DROP VIEW IF EXISTS `mydb`.`view_fornecedor_logistica_representacao` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_fornecedor_logistica_representacao` AS select `pf`.`fornecedor` AS `Fornecedor`,count(0) AS `Produtos` from (`mydb`.`pedido_fornecedor_has_produto` `pf` left join `mydb`.`venda` `v` on((`pf`.`idVenda` = `v`.`idVenda`))) where ((`v`.`representacao` = 1) and (`pf`.`status` = 'EM ENTREGA')) group by `pf`.`fornecedor`;

-- -----------------------------------------------------
-- View `mydb`.`view_logistica_representacao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_logistica_representacao`;
DROP VIEW IF EXISTS `mydb`.`view_logistica_representacao` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_logistica_representacao` AS select cast(min((`v`.`data` + interval `v`.`prazoEntrega` day)) as date) AS `prazoEntrega`,`pf`.`idPedido` AS `idPedido`,`pf`.`fornecedor` AS `fornecedor`,`pf`.`idVenda` AS `idVenda`,`pf`.`idVendaProduto` AS `idVendaProduto`,`c`.`nome_razao` AS `cliente`,`pf`.`ordemCompra` AS `ordemCompra`,`pf`.`descricao` AS `descricao`,`pf`.`codComercial` AS `codComercial`,`pf`.`quant` AS `quant`,`pf`.`un` AS `un`,`pf`.`caixas` AS `caixas`,`pf`.`kgcx` AS `kgcx` from ((`mydb`.`pedido_fornecedor_has_produto` `pf` left join `mydb`.`venda` `v` on((`pf`.`idVenda` = `v`.`idVenda`))) left join `mydb`.`cliente` `c` on((`v`.`idCliente` = `c`.`idCliente`))) where ((`v`.`representacao` = 1) and (`pf`.`status` = 'EM ENTREGA')) group by `pf`.`idPedido` order by `prazoEntrega`;

-- -----------------------------------------------------
-- View `mydb`.`view_nfe_entrada`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_nfe_entrada`;
DROP VIEW IF EXISTS `mydb`.`view_nfe_entrada` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_nfe_entrada` AS select `n`.`idNFe` AS `idNFe`,`n`.`cnpjDest` AS `CNPJ Dest`,group_concat(distinct `pf`.`fornecedor` separator ', ') AS `Fornecedor`,`n`.`numeroNFe` AS `NFe`,`n`.`status` AS `Status`,group_concat(distinct `e`.`recebidoPor` separator ',') AS `Recebido Por`,group_concat(distinct `pf`.`dataRealReceb` separator ',') AS `Data Receb`,`n`.`gare` AS `GARE`,`n`.`gareData` AS `GARE Pago Em`,group_concat(distinct `pf`.`ordemCompra` order by `pf`.`ordemCompra` ASC separator ', ') AS `OC`,group_concat(distinct `pf`.`idVenda` separator ', ') AS `Venda` from (((`mydb`.`nfe` `n` left join `mydb`.`estoque` `e` on((`n`.`idNFe` = `e`.`idNFe`))) left join `mydb`.`estoque_has_compra` `ehc` on((`e`.`idEstoque` = `ehc`.`idEstoque`))) left join `mydb`.`pedido_fornecedor_has_produto` `pf` on((`ehc`.`idPedido` = `pf`.`idPedido`))) where (`n`.`tipo` = 'ENTRADA') group by `n`.`idNFe`;

-- -----------------------------------------------------
-- View `mydb`.`view_nfe_saida`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_nfe_saida`;
DROP VIEW IF EXISTS `mydb`.`view_nfe_saida` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_nfe_saida` AS select `n`.`idNFe` AS `idNFe`,`n`.`chaveAcesso` AS `chaveAcesso`,`n`.`cnpjOrig` AS `Emitente`,`n`.`numeroNFe` AS `NFe`,`n`.`status` AS `Status`,group_concat(distinct `v`.`idVenda` separator ',') AS `Venda`,if((group_concat(distinct `c`.`pfpj` separator ',') = 'PF'),group_concat(distinct `c`.`cpf` separator ','),group_concat(distinct `c`.`cnpj` separator ',')) AS `CPF/CNPJ`,group_concat(distinct `c`.`nome_razao` separator ',') AS `Cliente`,`n`.`valor` AS `valor`,`n`.`created` AS `Criado em` from (((`mydb`.`nfe` `n` left join `mydb`.`venda_has_produto` `vp` on((`n`.`idNFe` = `vp`.`idNFeSaida`))) left join `mydb`.`venda` `v` on((`vp`.`idVenda` = `v`.`idVenda`))) left join `mydb`.`cliente` `c` on((`c`.`idCliente` = `v`.`idCliente`))) where (`n`.`tipo` = 'SAíDA') group by `n`.`idNFe` order by `n`.`numeroNFe`;

-- -----------------------------------------------------
-- View `mydb`.`view_orcamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_orcamento`;
DROP VIEW IF EXISTS `mydb`.`view_orcamento` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_orcamento` AS select `o`.`idLoja` AS `idLoja`,`o`.`idUsuario` AS `idUsuario`,`o`.`idUsuarioConsultor` AS `idUsuarioConsultor`,`o`.`status` AS `Status`,(`o`.`validade` - (to_days(now()) - to_days(`o`.`data`))) AS `Dias restantes`,`o`.`idOrcamento` AS `Código`,`u`.`nome` AS `Vendedor`,`u2`.`nome` AS `Consultor`,`c`.`nome_razao` AS `Cliente`,`p`.`nome_razao` AS `Profissional`,`c`.`tel` AS `Telefone`,`c`.`telCel` AS `Celular`,if(isnull(`p`.`telCel`),if(isnull(`p`.`tel`),`p`.`telCom`,`p`.`tel`),`p`.`telCel`) AS `Tel Prof`,`o`.`data` AS `Data`,`o`.`total` AS `Total`,`ohf`.`dataFollowup` AS `Data Followup`,`ohf`.`dataProxFollowup` AS `Data Próx Followup`,`ohf`.`observacao` AS `Observação`,`ohf`.`semaforo` AS `semaforo` from ((((((`mydb`.`orcamento` `o` left join `mydb`.`cliente` `c` on((`o`.`idCliente` = `c`.`idCliente`))) left join `mydb`.`usuario` `u` on((`o`.`idUsuario` = `u`.`idUsuario`))) left join `mydb`.`profissional` `p` on((`o`.`idProfissional` = `p`.`idProfissional`))) left join `mydb`.`usuario` `u2` on((`o`.`idUsuarioConsultor` = `u2`.`idUsuario`))) left join (select max(`tmp`.`idFollowup`) AS `idFollowup`,`tmp`.`idOrcamentoBase` AS `idOrcamentoBase` from `mydb`.`orcamento_has_followup` `tmp` group by `tmp`.`idOrcamentoBase`) `ohf2` on((`o`.`idOrcamentoBase` = `ohf2`.`idOrcamentoBase`))) left join `mydb`.`orcamento_has_followup` `ohf` on((`ohf2`.`idFollowup` = `ohf`.`idFollowup`)));

-- -----------------------------------------------------
-- View `mydb`.`view_ordemcompra`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_ordemcompra`;
DROP VIEW IF EXISTS `mydb`.`view_ordemcompra` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`view_ordemcompra` AS select `pf`.`status` AS `statusPF`,`vp`.`status` AS `statusVP`,`pf`.`idVenda` AS `idVenda`,`pf`.`idVendaProduto` AS `idVendaProdutoPF`,`ehc`.`idVendaProduto` AS `idVendaProdutoEHC`,`pf`.`fornecedor` AS `fornecedor`,`pf`.`descricao` AS `descricao`,`pf`.`colecao` AS `colecao`,`pf`.`codComercial` AS `codComercial`,`pf`.`quant` AS `quant`,`pf`.`un` AS `un`,`pf`.`un2` AS `un2`,`pf`.`caixas` AS `caixas`,`pf`.`prcUnitario` AS `prcUnitario`,`pf`.`preco` AS `preco`,`pf`.`kgcx` AS `kgcx`,`pf`.`formComercial` AS `formComercial`,`pf`.`codBarras` AS `codBarras`,`pf`.`obs` AS `obs`,`pf`.`idPedido` AS `idPedido`,`pf`.`idCompra` AS `idCompra`,`pf`.`ordemCompra` AS `ordemCompra` from ((`mydb`.`pedido_fornecedor_has_produto` `pf` left join `mydb`.`venda_has_produto` `vp` on((`pf`.`idVendaProduto` = `vp`.`idVendaProduto`))) left join `mydb`.`estoque_has_consumo` `ehc` on((`pf`.`idPedido` = `ehc`.`idPedido`)));

-- -----------------------------------------------------
-- View `mydb`.`view_ordemcompra_nfe`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_ordemcompra_nfe`;
DROP VIEW IF EXISTS `mydb`.`view_ordemcompra_nfe` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_ordemcompra_nfe` AS select distinct `pf`.`ordemCompra` AS `ordemCompra`,`n`.`numeroNFe` AS `numeroNFe`,`n`.`idNFe` AS `idNFe` from (((`mydb`.`nfe` `n` left join `mydb`.`estoque` `e` on((`n`.`idNFe` = `e`.`idNFe`))) left join `mydb`.`estoque_has_compra` `ehc` on((`ehc`.`idEstoque` = `e`.`idEstoque`))) left join `mydb`.`pedido_fornecedor_has_produto` `pf` on((`pf`.`idPedido` = `ehc`.`idPedido`))) where (`pf`.`ordemCompra` is not null);

-- -----------------------------------------------------
-- View `mydb`.`view_ordemcompra_resumo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_ordemcompra_resumo`;
DROP VIEW IF EXISTS `mydb`.`view_ordemcompra_resumo` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_ordemcompra_resumo` AS select `pf`.`ordemCompra` AS `OC`,group_concat(distinct `pf`.`status` separator ',') AS `Status`,group_concat(distinct `pf`.`idVenda` order by `pf`.`idVenda` ASC separator ', ') AS `Venda` from `mydb`.`pedido_fornecedor_has_produto` `pf` where (`pf`.`ordemCompra` is not null) group by `pf`.`ordemCompra`;

-- -----------------------------------------------------
-- View `mydb`.`view_pagamento_loja`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_pagamento_loja`;
DROP VIEW IF EXISTS `mydb`.`view_pagamento_loja` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_pagamento_loja` AS select `fpl`.`idLoja` AS `idLoja`,`fpl`.`idPagamento` AS `idPagamento`,`fp`.`pagamento` AS `pagamento` from (`mydb`.`forma_pagamento` `fp` left join `mydb`.`forma_pagamento_has_loja` `fpl` on((`fp`.`idPagamento` = `fpl`.`idPagamento`)));

-- -----------------------------------------------------
-- View `mydb`.`view_pedido_fornecedor_livre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_pedido_fornecedor_livre`;
DROP VIEW IF EXISTS `mydb`.`view_pedido_fornecedor_livre` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_pedido_fornecedor_livre` AS select `pf`.`idPedido` AS `idPedido`,`pf`.`idVenda` AS `idVenda`,`pf`.`idVendaProduto` AS `idVendaProduto`,`pf`.`ordemCompra` AS `ordemCompra`,`pf`.`idCompra` AS `idCompra`,`pf`.`descricao` AS `descricao`,`pf`.`quant` AS `quant`,`pf`.`un` AS `un`,`pf`.`caixas` AS `caixas`,`pf`.`prcUnitario` AS `prcUnitario`,`pf`.`codComercial` AS `codComercial`,`pf`.`dataPrevCompra` AS `dataPrevCompra`,`pf`.`dataRealCompra` AS `dataRealCompra`,`pf`.`dataPrevConf` AS `dataPrevConf`,`pf`.`status` AS `status` from `mydb`.`pedido_fornecedor_has_produto` `pf` where isnull(`pf`.`idVendaProduto`);

-- -----------------------------------------------------
-- View `mydb`.`view_preparar_entrega`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_preparar_entrega`;
DROP VIEW IF EXISTS `mydb`.`view_preparar_entrega` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_preparar_entrega` AS select `vhp`.`idEvento` AS `idEvento`,`vp`.`idVenda` AS `idVenda`,count(`vp`.`idVenda`) AS `produtos`,group_concat(distinct `vp`.`idNFeSaida` separator ',') AS `idNFeSaida` from (`mydb`.`veiculo_has_produto` `vhp` left join `mydb`.`venda_has_produto` `vp` on((`vhp`.`idVendaProduto` = `vp`.`idVendaProduto`))) group by `vp`.`idVenda`,`vhp`.`idEvento`;

-- -----------------------------------------------------
-- View `mydb`.`view_produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_produto`;
DROP VIEW IF EXISTS `mydb`.`view_produto` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`view_produto` AS select `p`.`idProduto` AS `idProduto`,`p`.`estoque` AS `estoque`,`p`.`promocao` AS `promocao`,`p`.`descontinuado` AS `descontinuado`,`p`.`desativado` AS `desativado`,`p`.`representacao` AS `representacao`,`p`.`fornecedor` AS `fornecedor`,`e`.`status` AS `statusEstoque`,`p`.`descricao` AS `descricao`,`p`.`estoqueRestante` AS `estoqueRestante`,`p`.`un` AS `un`,`p`.`un2` AS `un2`,`p`.`colecao` AS `colecao`,`p`.`tipo` AS `tipo`,`p`.`minimo` AS `minimo`,`p`.`multiplo` AS `multiplo`,`p`.`m2cx` AS `m2cx`,`p`.`pccx` AS `pccx`,`p`.`kgcx` AS `kgcx`,`p`.`formComercial` AS `formComercial`,`p`.`codComercial` AS `codComercial`,`p`.`precoVenda` AS `precoVenda`,`p`.`validade` AS `validade`,`p`.`ui` AS `ui` from (`mydb`.`produto` `p` left join `mydb`.`estoque` `e` on((`p`.`idEstoque` = `e`.`idEstoque`)));

-- -----------------------------------------------------
-- View `mydb`.`view_produto_estoque`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_produto_estoque`;
DROP VIEW IF EXISTS `mydb`.`view_produto_estoque` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_produto_estoque` AS select `ehc`.`idVendaProduto` AS `idVendaProduto`,group_concat(distinct `ehc`.`idProduto` separator ',') AS `idProduto`,`vp`.`fornecedor` AS `fornecedor`,`vp`.`produto` AS `produto`,(`vp`.`total` / `vp`.`quant`) AS `descUnitario`,sum(`ehc`.`caixas`) AS `caixas`,sum((`ehc`.`quant` * -(1))) AS `quant`,group_concat(distinct `ehc`.`un` separator ',') AS `un`,`vp`.`unCaixa` AS `unCaixa`,group_concat(distinct `ehc`.`codComercial` separator ',') AS `codComercial`,`vp`.`formComercial` AS `formComercial`,sum((((`vp`.`total` / `vp`.`quant`) * `ehc`.`quant`) * -(1))) AS `total`,group_concat(distinct `ehc`.`codBarras` separator ',') AS `codBarras`,group_concat(distinct `ehc`.`ncm` separator ',') AS `ncm`,group_concat(distinct `ehc`.`cfop` separator ',') AS `cfop`,group_concat(distinct `ehc`.`unTrib` separator ',') AS `unTrib`,group_concat(distinct `ehc`.`numeroPedido` separator ',') AS `numeroPedido`,group_concat(distinct `ehc`.`itemPedido` separator ',') AS `itemPedido`,group_concat(distinct `ehc`.`tipoICMS` separator ',') AS `tipoICMS`,group_concat(distinct `ehc`.`orig` separator ',') AS `orig`,group_concat(distinct `ehc`.`cstICMS` separator ',') AS `cstICMS`,group_concat(distinct `ehc`.`modBC` separator ',') AS `modBC`,sum(`ehc`.`vBC`) AS `vBC`,group_concat(distinct `ehc`.`pICMS` separator ',') AS `pICMS`,sum(`ehc`.`vICMS`) AS `vICMS`,group_concat(distinct `ehc`.`modBCST` separator ',') AS `modBCST`,group_concat(distinct `ehc`.`pMVAST` separator ',') AS `pMVAST`,sum(`ehc`.`vBCST`) AS `vBCST`,group_concat(distinct `ehc`.`pICMSST` separator ',') AS `pICMSST`,sum(`ehc`.`vICMSST`) AS `vICMSST`,group_concat(distinct `ehc`.`cEnq` separator ',') AS `cEnq`,group_concat(distinct `ehc`.`cstIPI` separator ',') AS `cstIPI`,group_concat(distinct `ehc`.`cstPIS` separator ',') AS `cstPIS`,sum(`ehc`.`vBCPIS`) AS `vBCPIS`,group_concat(distinct `ehc`.`pPIS` separator ',') AS `pPIS`,sum(`ehc`.`vPIS`) AS `vPIS`,group_concat(distinct `ehc`.`cstCOFINS` separator ',') AS `cstCOFINS`,sum(`ehc`.`vBCCOFINS`) AS `vBCCOFINS`,group_concat(distinct `ehc`.`pCOFINS` separator ',') AS `pCOFINS`,sum(`ehc`.`vCOFINS`) AS `vCOFINS` from (`mydb`.`venda_has_produto` `vp` left join `mydb`.`estoque_has_consumo` `ehc` on((`vp`.`idVendaProduto` = `ehc`.`idVendaProduto`))) where ((`ehc`.`idEstoque` is not null) and ((`ehc`.`status` = 'PRÉ-CONSUMO') or (`ehc`.`status` = 'CONSUMO'))) group by `vp`.`idVendaProduto`;

-- -----------------------------------------------------
-- View `mydb`.`view_produto_pendente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_produto_pendente`;
DROP VIEW IF EXISTS `mydb`.`view_produto_pendente` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_produto_pendente` AS select `v`.`status` AS `status`,`v`.`idVendaProduto` AS `idVendaProduto`,`v`.`fornecedor` AS `fornecedor`,`v`.`idVenda` AS `idVenda`,`v`.`idProduto` AS `idProduto`,`v`.`produto` AS `produto`,`v`.`obs` AS `obs`,`p`.`colecao` AS `colecao`,`v`.`formComercial` AS `formComercial`,`v`.`quant` AS `quant`,`v`.`un` AS `un`,`p`.`un2` AS `Un2`,`v`.`caixas` AS `Caixas`,`p`.`kgcx` AS `kgcx`,`v`.`codComercial` AS `codComercial`,`p`.`codBarras` AS `codBarras`,`p`.`custo` AS `custo`,`v`.`idCompra` AS `idCompra` from (`mydb`.`venda_has_produto` `v` left join `mydb`.`produto` `p` on((`v`.`idProduto` = `p`.`idProduto`)));

-- -----------------------------------------------------
-- View `mydb`.`view_produtos_pendentes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_produtos_pendentes`;
DROP VIEW IF EXISTS `mydb`.`view_produtos_pendentes` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_produtos_pendentes` AS select group_concat(distinct `vp`.`fornecedor` separator ',') AS `Fornecedor`,group_concat(distinct `vp`.`produto` separator ',') AS `Descrição`,group_concat(distinct `vp`.`formComercial` separator ',') AS `Form`,sum(`vp`.`quant`) AS `Quant`,group_concat(distinct `vp`.`un` separator ',') AS `Un`,group_concat(distinct `p`.`un2` separator ',') AS `Un2`,group_concat(distinct `vp`.`caixas` separator ',') AS `Caixas`,`vp`.`codComercial` AS `Cód Com`,group_concat(distinct `vp`.`idCompra` separator ',') AS `idCompra`,`vp`.`status` AS `Status`,group_concat(distinct `v`.`statusFinanceiro` separator ',') AS `Financeiro`,monthname(`v`.`data`) AS `Mês` from ((`mydb`.`venda_has_produto` `vp` left join `mydb`.`venda` `v` on((`v`.`idVenda` = `vp`.`idVenda`))) left join `mydb`.`produto` `p` on((`p`.`idProduto` = `vp`.`idProduto`))) group by `vp`.`status`,`vp`.`codComercial`,`Mês`;

-- -----------------------------------------------------
-- View `mydb`.`view_recebimento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_recebimento`;
DROP VIEW IF EXISTS `mydb`.`view_recebimento` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`view_recebimento` AS select cast(min((`v`.`data` + interval `v`.`prazoEntrega` day)) as date) AS `prazoEntrega`,group_concat(distinct `pf`.`dataPrevReceb` separator ',') AS `dataPrevReceb`,`e`.`idEstoque` AS `idEstoque`,`e`.`lote` AS `lote`,`e`.`local` AS `local`,`e`.`bloco` AS `bloco`,group_concat(distinct `pf`.`fornecedor` separator ',') AS `fornecedor`,group_concat(distinct `n`.`numeroNFe` separator ',') AS `numeroNFe`,group_concat(distinct `pf`.`idVenda` separator ', ') AS `idVenda`,group_concat(distinct `pf`.`ordemCompra` separator ', ') AS `ordemCompra`,`e`.`descricao` AS `produto`,`e`.`codComercial` AS `codComercial`,abs(`e`.`quant`) AS `quant`,`e`.`un` AS `un`,`e`.`caixas` AS `caixas` from ((((`mydb`.`estoque` `e` left join `mydb`.`estoque_has_compra` `ehc` on((`e`.`idEstoque` = `ehc`.`idEstoque`))) left join `mydb`.`pedido_fornecedor_has_produto` `pf` on((`ehc`.`idPedido` = `pf`.`idPedido`))) left join `mydb`.`nfe` `n` on((`e`.`idNFe` = `n`.`idNFe`))) left join `mydb`.`venda` `v` on((`v`.`idVenda` = `pf`.`idVenda`))) where ((`e`.`status` = 'EM RECEBIMENTO') and (`pf`.`dataPrevReceb` is not null) and (`pf`.`idPedido` is not null)) group by `e`.`idEstoque` desc order by `prazoEntrega`;

-- -----------------------------------------------------
-- View `mydb`.`view_relatorio`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_relatorio`;
DROP VIEW IF EXISTS `mydb`.`view_relatorio` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_relatorio` AS select group_concat(distinct `l`.`descricao` separator ',') AS `Loja`,group_concat(distinct `u`.`nome` separator ',') AS `Vendedor`,group_concat(distinct `u`.`idUsuario` separator ',') AS `idUsuario`,group_concat(distinct `v`.`idVenda` separator ',') AS `idVenda`,group_concat(distinct date_format(`v`.`data`,'%Y-%m') separator ',') AS `Mês`,sum(`vp`.`total`) AS `Faturamento`,if((right(group_concat(distinct `p`.`ui` separator ','),1) = 'L'),((sum(`vp`.`total`) * group_concat(distinct `f`.`comissao2` separator ',')) / 100),((sum(`vp`.`total`) * group_concat(distinct `f`.`comissao1` separator ',')) / 100)) AS `Comissão`,if((right(`p`.`ui`,1) = 'L'),`f`.`comissao2`,`f`.`comissao1`) AS `%` from (((((`mydb`.`venda` `v` left join `mydb`.`venda_has_produto` `vp` on((`v`.`idVenda` = `vp`.`idVenda`))) left join `mydb`.`loja` `l` on((`l`.`idLoja` = `v`.`idLoja`))) left join `mydb`.`usuario` `u` on((`u`.`idUsuario` = `v`.`idUsuario`))) left join `mydb`.`produto` `p` on((`p`.`idProduto` = `vp`.`idProduto`))) left join `mydb`.`fornecedor` `f` on((`f`.`idFornecedor` = `p`.`idFornecedor`))) where (`v`.`status` <> 'CANCELADO') group by `l`.`descricao`,`u`.`nome`,`v`.`idVenda`,if((right(`p`.`ui`,1) = 'L'),`f`.`comissao2`,`f`.`comissao1`) order by `l`.`descricao`,`u`.`nome`,`v`.`idVenda`;

-- -----------------------------------------------------
-- View `mydb`.`view_relatorio_loja`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_relatorio_loja`;
DROP VIEW IF EXISTS `mydb`.`view_relatorio_loja` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`view_relatorio_loja` AS select `v`.`Loja` AS `Loja`,sum(`v`.`Faturamento`) AS `Faturamento`,sum(`v`.`Comissão`) AS `Comissão`,((sum(`v`.`Comissão`) / sum(`v`.`Faturamento`)) * 100) AS `%`,`v`.`Mês` AS `Mês`,(group_concat(distinct `x`.`custo` separator ',') + 0.0) AS `Reposição` from ((((`mydb`.`view_relatorio` `v` left join `mydb`.`usuario` `u` on((`v`.`Vendedor` = `u`.`nome`))) left join `mydb`.`venda` `v2` on((`v`.`idVenda` = `v2`.`idVenda`))) left join `mydb`.`loja` `l` on((`v2`.`idLoja` = `l`.`idLoja`))) left join (select `l`.`descricao` AS `loja`,date_format(`v`.`data`,'%Y-%m') AS `data`,sum((`vp`.`quant` * `p`.`custo`)) AS `custo` from (((`mydb`.`venda_has_produto` `vp` left join `mydb`.`produto` `p` on((`vp`.`idProduto` = `p`.`idProduto`))) left join `mydb`.`venda` `v` on((`vp`.`idVenda` = `v`.`idVenda`))) left join `mydb`.`loja` `l` on((`v`.`idLoja` = `l`.`idLoja`))) where (`vp`.`reposicaoEntrega` = TRUE) group by `l`.`descricao`,date_format(`v`.`data`,'%Y-%m') order by `l`.`descricao`,date_format(`v`.`data`,'%Y-%m')) `x` on(((`x`.`loja` = `v`.`Loja`) and (`x`.`data` = `v`.`Mês`)))) group by `v`.`Loja`,`v`.`Mês`;

-- -----------------------------------------------------
-- View `mydb`.`view_relatorio_nfe`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_relatorio_nfe`;
DROP VIEW IF EXISTS `mydb`.`view_relatorio_nfe` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`view_relatorio_nfe` AS select extractvalue(`mydb`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/ide/cNF') AS `NFe`,extractvalue(`mydb`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/ide/serie') AS `Serie`,date_format(extractvalue(`mydb`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/ide/dhEmi'),'%d/%m/%Y') AS `DataEmi`,extractvalue(`mydb`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/total/ICMSTot/vProd') AS `produtos`,extractvalue(`mydb`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/total/ICMSTot/vST') AS `icmsst`,extractvalue(`mydb`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/total/ICMSTot/vFrete') AS `frete`,extractvalue(`mydb`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/total/ICMSTot/vSeg') AS `seguro`,extractvalue(`mydb`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/total/ICMSTot/vIPI') AS `ipi`,extractvalue(`mydb`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/total/ICMSTot/vOutro') AS `outrasdesp`,extractvalue(`mydb`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/total/ICMSTot/vDesc') AS `desconto`,extractvalue(`mydb`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/total/ICMSTot/vNF') AS `totalnfe`,extractvalue(`mydb`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/total/ICMSTot/vBC') AS `bcicms`,extractvalue(`mydb`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/total/ICMSTot/vICMS') AS `icms`,extractvalue(`mydb`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/total/ICMSTot/vCOFINS') AS `cofins`,extractvalue(`mydb`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/total/ICMSTot/vII') AS `impimp`,extractvalue(`mydb`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/total/ICMSTot/vPIS') AS `pis`,extractvalue(`mydb`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/ide/cNF') AS `tipo`,`mydb`.`nfe`.`tipo` AS `e/s`,extractvalue(`mydb`.`nfe`.`xml`,'/nfeProc/protNFe/infProt/nProt') AS `nprotocolo`,date_format(extractvalue(`mydb`.`nfe`.`xml`,'/nfeProc/protNFe/infProt/dhRecbto'),'%d/%m/%Y') AS `dataautor`,`mydb`.`nfe`.`created` AS `Criado em`,`mydb`.`nfe`.`status` AS `status` from `mydb`.`nfe` where ((`mydb`.`nfe`.`tipo` = 'SAIDA') and (`mydb`.`nfe`.`status` = 'AUTORIZADO'));

-- -----------------------------------------------------
-- View `mydb`.`view_relatorio_pagar`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_relatorio_pagar`;
DROP VIEW IF EXISTS `mydb`.`view_relatorio_pagar` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`view_relatorio_pagar` AS select `cp`.`dataEmissao` AS `dataEmissao`,`cp`.`dataRealizado` AS `dataRealizado`,`cp`.`valorReal` AS `valorReal`,concat(`lhc`.`banco`,' - ',`lhc`.`agencia`,' - ',`lhc`.`conta`) AS `Conta`,`cp`.`observacao` AS `observacao`,`cp`.`contraParte` AS `contraParte`,`cp`.`grupo` AS `grupo`,`cp`.`subGrupo` AS `subGrupo` from ((`mydb`.`conta_a_pagar_has_pagamento` `cp` left join `mydb`.`nfe` `n` on((`cp`.`nfe` = `n`.`idNFe`))) left join `mydb`.`loja_has_conta` `lhc` on((`cp`.`contaDestino` = `lhc`.`idConta`))) where ((`cp`.`dataRealizado` is not null) and (`cp`.`valorReal` is not null) and (`cp`.`status` = 'PAGO') and (`cp`.`desativado` = FALSE)) order by `cp`.`dataRealizado`;

-- -----------------------------------------------------
-- View `mydb`.`view_relatorio_receber`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_relatorio_receber`;
DROP VIEW IF EXISTS `mydb`.`view_relatorio_receber` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`view_relatorio_receber` AS select `cr`.`dataEmissao` AS `dataEmissao`,`cr`.`dataRealizado` AS `dataRealizado`,`cr`.`valorReal` AS `valorReal`,concat(`lhc`.`banco`,' - ',`lhc`.`agencia`,' - ',`lhc`.`conta`) AS `Conta`,`cr`.`observacao` AS `observacao`,`cr`.`contraParte` AS `contraParte`,`cr`.`grupo` AS `grupo`,`cr`.`subGrupo` AS `subGrupo` from (`mydb`.`conta_a_receber_has_pagamento` `cr` left join `mydb`.`loja_has_conta` `lhc` on((`cr`.`contaDestino` = `lhc`.`idConta`))) where ((`cr`.`valorReal` is not null) and (`cr`.`status` = 'RECEBIDO') and (`cr`.`desativado` = FALSE)) order by `cr`.`dataRealizado`;

-- -----------------------------------------------------
-- View `mydb`.`view_relatorio_temp`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_relatorio_temp`;
DROP VIEW IF EXISTS `mydb`.`view_relatorio_temp` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`view_relatorio_temp` AS select dayofmonth(`v`.`data`) AS `dia`,sum(if((month(`v`.`data`) = 1),`v`.`total`,0)) AS `jane`,sum(if((month(`v`.`data`) = 2),`v`.`total`,0)) AS `feve`,sum(if((month(`v`.`data`) = 3),`v`.`total`,0)) AS `marc`,sum(if((month(`v`.`data`) = 4),`v`.`total`,0)) AS `abri`,sum(if((month(`v`.`data`) = 5),`v`.`total`,0)) AS `maio`,sum(if((month(`v`.`data`) = 6),`v`.`total`,0)) AS `junh`,sum(if((month(`v`.`data`) = 7),`v`.`total`,0)) AS `julh`,sum(if((month(`v`.`data`) = 8),`v`.`total`,0)) AS `agos`,sum(if((month(`v`.`data`) = 9),`v`.`total`,0)) AS `sete`,sum(if((month(`v`.`data`) = 10),`v`.`total`,0)) AS `outu`,sum(if((month(`v`.`data`) = 11),`v`.`total`,0)) AS `nove`,sum(if((month(`v`.`data`) = 12),`v`.`total`,0)) AS `deze` from `mydb`.`venda` `v` where ((`v`.`data` >= '2018-01-01') and (`v`.`data` < '2019-01-01') and (`v`.`status` <> 'CANCELADO')) group by dayofmonth(`v`.`data`);

-- -----------------------------------------------------
-- View `mydb`.`view_relatorio_temp2`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_relatorio_temp2`;
DROP VIEW IF EXISTS `mydb`.`view_relatorio_temp2` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`view_relatorio_temp2` AS select dayofmonth(`v`.`data`) AS `dia`,sum((case when ((month(`v`.`data`) = month((now() - interval 12 month))) and (year(`v`.`data`) = year((now() - interval 12 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes12`,sum((case when ((month(`v`.`data`) = month((now() - interval 11 month))) and (year(`v`.`data`) = year((now() - interval 11 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes11`,sum((case when ((month(`v`.`data`) = month((now() - interval 10 month))) and (year(`v`.`data`) = year((now() - interval 10 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes10`,sum((case when ((month(`v`.`data`) = month((now() - interval 9 month))) and (year(`v`.`data`) = year((now() - interval 9 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes9`,sum((case when ((month(`v`.`data`) = month((now() - interval 8 month))) and (year(`v`.`data`) = year((now() - interval 8 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes8`,sum((case when ((month(`v`.`data`) = month((now() - interval 7 month))) and (year(`v`.`data`) = year((now() - interval 7 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes7`,sum((case when ((month(`v`.`data`) = month((now() - interval 6 month))) and (year(`v`.`data`) = year((now() - interval 6 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes6`,sum((case when ((month(`v`.`data`) = month((now() - interval 5 month))) and (year(`v`.`data`) = year((now() - interval 5 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes5`,sum((case when ((month(`v`.`data`) = month((now() - interval 4 month))) and (year(`v`.`data`) = year((now() - interval 4 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes4`,sum((case when ((month(`v`.`data`) = month((now() - interval 3 month))) and (year(`v`.`data`) = year((now() - interval 3 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes3`,sum((case when ((month(`v`.`data`) = month((now() - interval 2 month))) and (year(`v`.`data`) = year((now() - interval 2 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes2`,sum((case when ((month(`v`.`data`) = month((now() - interval 1 month))) and (year(`v`.`data`) = year((now() - interval 1 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes1`,sum((case when ((month(`v`.`data`) = month(now())) and (year(`v`.`data`) = year(now()))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes0` from `mydb`.`venda` `v` where (`v`.`status` <> 'CANCELADO') group by dayofmonth(`v`.`data`);

-- -----------------------------------------------------
-- View `mydb`.`view_relatorio_vendedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_relatorio_vendedor`;
DROP VIEW IF EXISTS `mydb`.`view_relatorio_vendedor` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_relatorio_vendedor` AS select `v`.`Loja` AS `Loja`,group_concat(distinct `v`.`Vendedor` separator ',') AS `Vendedor`,group_concat(distinct `v`.`idUsuario` separator ',') AS `idUsuario`,sum(`v`.`Faturamento`) AS `Faturamento`,sum(`v`.`Comissão`) AS `Comissão`,((sum(`v`.`Comissão`) / sum(`v`.`Faturamento`)) * 100) AS `%`,`v`.`Mês` AS `Mês` from (`mydb`.`view_relatorio` `v` left join `mydb`.`usuario` `u` on((`v`.`Vendedor` = `u`.`nome`))) group by `u`.`nome`,`v`.`Loja`,`v`.`Mês` order by `v`.`Loja`;

-- -----------------------------------------------------
-- View `mydb`.`view_resumo_relatorio`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_resumo_relatorio`;
DROP VIEW IF EXISTS `mydb`.`view_resumo_relatorio` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`view_resumo_relatorio` AS select `l`.`descricao` AS `Loja`,`u`.`user` AS `Vendedor`,sum(if(((date_format(`o`.`data`,'%Y-%m') < convert(`MYDATE`() using utf8mb4)) and ((`o`.`status` = 'ATIVO') or (`o`.`status` = 'EXPIRADO') or ((`o`.`status` = 'FECHADO') and (date_format(`v`.`data`,'%Y-%m') >= convert(`MYDATE`() using utf8mb4))) or ((`o`.`status` = 'PERDIDO') and (date_format(`o`.`lastUpdated`,'%Y-%m') >= convert(`MYDATE`() using utf8mb4))))),`o`.`total`,0)) AS `Validos Anteriores`,sum(if(((date_format(`o`.`data`,'%Y-%m') = convert(`MYDATE`() using utf8mb4)) and isnull(`o_1`.`data`)),`o`.`total`,0)) AS `Gerados Mes`,sum(if(((date_format(`o`.`data`,'%Y-%m') = convert(`MYDATE`() using utf8mb4)) and (`o_1`.`data` is not null)),`o`.`total`,0)) AS `Revalidados Mes`,sum(if(((date_format(`v`.`data`,'%Y-%m') = convert(`MYDATE`() using utf8mb4)) and (`o`.`status` = 'FECHADO')),`o`.`total`,0)) AS `Fechados Mes`,sum(if(((date_format(`o`.`lastUpdated`,'%Y-%m') = convert(`MYDATE`() using utf8mb4)) and (`o`.`status` = 'PERDIDO')),`o`.`total`,0)) AS `Perdidos Mes`,sum(if(((date_format(`o`.`data`,'%Y-%m') <= convert(`MYDATE`() using utf8mb4)) and ((`o`.`status` = 'ATIVO') or (`o`.`status` = 'EXPIRADO') or ((`o`.`status` = 'FECHADO') and (date_format(`v`.`data`,'%Y-%m') > convert(`MYDATE`() using utf8mb4))) or ((`o`.`status` = 'PERDIDO') and (date_format(`o`.`lastUpdated`,'%Y-%m') > convert(`MYDATE`() using utf8mb4))))),`o`.`total`,0)) AS `Validos Mes`,((sum(if(((date_format(`v`.`data`,'%Y-%m') = convert(`MYDATE`() using utf8mb4)) and (`o`.`status` = 'FECHADO')),`o`.`total`,0)) / (sum(if(((date_format(`o`.`data`,'%Y-%m') = convert(`MYDATE`() using utf8mb4)) and isnull(`o_1`.`data`)),`o`.`total`,0)) + sum(if(((date_format(`o`.`data`,'%Y-%m') = convert(`MYDATE`() using utf8mb4)) and (`o_1`.`data` is not null)),`o`.`total`,0)))) * 100) AS `% Fechados / Gerados`,((sum(if(((date_format(`v`.`data`,'%Y-%m') = convert(`MYDATE`() using utf8mb4)) and (`o`.`status` = 'FECHADO')),`o`.`total`,0)) / ((sum(if(((date_format(`o`.`data`,'%Y-%m') < convert(`MYDATE`() using utf8mb4)) and ((`o`.`status` = 'ATIVO') or (`o`.`status` = 'EXPIRADO') or ((`o`.`status` = 'FECHADO') and (date_format(`v`.`data`,'%Y-%m') >= convert(`MYDATE`() using utf8mb4))) or ((`o`.`status` = 'PERDIDO') and (date_format(`o`.`lastUpdated`,'%Y-%m') >= convert(`MYDATE`() using utf8mb4))))),`o`.`total`,0)) + sum(if(((date_format(`o`.`data`,'%Y-%m') = convert(`MYDATE`() using utf8mb4)) and isnull(`o_1`.`data`)),`o`.`total`,0))) + sum(if(((date_format(`o`.`data`,'%Y-%m') = convert(`MYDATE`() using utf8mb4)) and (`o_1`.`data` is not null)),`o`.`total`,0)))) * 100) AS `% Fechados / Carteira` from (((((((`mydb`.`orcamento` `o` left join `mydb`.`loja` `l` on((`o`.`idLoja` = `l`.`idLoja`))) left join `mydb`.`usuario` `u` on((`o`.`idUsuario` = `u`.`idUsuario`))) left join `mydb`.`cliente` `c` on((`o`.`idCliente` = `c`.`idCliente`))) left join `mydb`.`profissional` `p` on((`o`.`idProfissional` = `p`.`idProfissional`))) left join `mydb`.`orcamento` `o_1` on((`o`.`replicadoDe` = `o_1`.`idOrcamento`))) left join `mydb`.`orcamento_has_followup` `ohf` on((`o`.`idOrcamento` = `ohf`.`idOrcamento`))) left join `mydb`.`venda` `v` on((`o`.`idOrcamento` = `v`.`idOrcamento`))) where ((`o`.`status` <> 'REPLICADO') and (`o`.`status` <> 'CANCELADO')) group by `l`.`descricao`,`u`.`user` order by `l`.`descricao`,`u`.`user`;

-- -----------------------------------------------------
-- View `mydb`.`view_validacao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_validacao`;
DROP VIEW IF EXISTS `mydb`.`view_validacao` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_validacao` AS select `v`.`idVenda` AS `idVenda`,((`v`.`subTotalLiq` + `v`.`frete`) - `v`.`descontoReais`) AS `soma`,`v`.`total` AS `total`,sum(`c`.`valor`) AS `Pag.`,(sum(`c`.`valor`) - `v`.`total`) AS `Dif` from (`mydb`.`venda` `v` left join `mydb`.`conta_a_receber_has_pagamento` `c` on((`v`.`idVenda` = `c`.`idVenda`))) where ((`c`.`tipo` <> 'Crédito') and (not((`v`.`idVenda` like '%D'))) and (`c`.`desativado` = FALSE)) group by `c`.`idVenda`;

-- -----------------------------------------------------
-- View `mydb`.`view_venda`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_venda`;
DROP VIEW IF EXISTS `mydb`.`view_venda` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_venda` AS select `v`.`idLoja` AS `idLoja`,`v`.`idUsuario` AS `idUsuario`,`v`.`idUsuarioConsultor` AS `idUsuarioConsultor`,`v`.`statusFinanceiro` AS `statusFinanceiro`,`v`.`dataFinanceiro` AS `dataFinanceiro`,`v`.`status` AS `Status`,((to_days(`v`.`data`) + `v`.`prazoEntrega`) - to_days(now())) AS `Dias restantes`,`v`.`idVenda` AS `Código`,group_concat(distinct `pf`.`ordemRepresentacao` separator ',') AS `OC Rep`,`u`.`nome` AS `Vendedor`,`u2`.`nome` AS `Consultor`,`c`.`nome_razao` AS `Cliente`,`p`.`nome_razao` AS `Profissional`,`v`.`data` AS `Data`,`v`.`total` AS `Total R$`,group_concat(distinct `vhf`.`dataFollowup` separator ',') AS `Data Followup`,group_concat(distinct `vhf`.`observacao` separator ',') AS `Observação` from ((((((((`mydb`.`venda` `v` left join `mydb`.`pedido_fornecedor_has_produto` `pf` on((`v`.`idVenda` = `pf`.`idVenda`))) left join `mydb`.`usuario` `u` on((`v`.`idUsuario` = `u`.`idUsuario`))) left join `mydb`.`cliente_has_endereco` `e` on((`v`.`idEnderecoEntrega` = `e`.`idEndereco`))) left join `mydb`.`profissional` `p` on((`v`.`idProfissional` = `p`.`idProfissional`))) left join `mydb`.`cliente` `c` on((`v`.`idCliente` = `c`.`idCliente`))) left join `mydb`.`usuario` `u2` on((`v`.`idUsuarioConsultor` = `u2`.`idUsuario`))) left join (select max(`tmp`.`idFollowup`) AS `idFollowup`,`tmp`.`idVendaBase` AS `idVendaBase` from `mydb`.`venda_has_followup` `tmp` group by `tmp`.`idVendaBase`) `vhf2` on((`v`.`idVendaBase` = `vhf2`.`idVendaBase`))) left join `mydb`.`venda_has_followup` `vhf` on((`vhf2`.`idFollowup` = `vhf`.`idFollowup`))) group by `v`.`idVenda`;

-- -----------------------------------------------------
-- View `mydb`.`view_venda_produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view_venda_produto`;
DROP VIEW IF EXISTS `mydb`.`view_venda_produto` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`view_venda_produto` AS select `vp`.`status` AS `status`,`v`.`statusFinanceiro` AS `statusFinanceiro`,`v`.`dataFinanceiro` AS `dataFinanceiro`,`vp`.`idVenda` AS `idVenda`,substring_index(`u`.`nome`,' ',1) AS `Vendedor`,`vp`.`fornecedor` AS `fornecedor`,`vp`.`produto` AS `produto`,`vp`.`obs` AS `obs`,`vp`.`caixas` AS `caixas`,`vp`.`quant` AS `quant`,`vp`.`un` AS `un`,`vp`.`codComercial` AS `codComercial`,`vp`.`formComercial` AS `formComercial`,cast((`v`.`data` + interval `v`.`prazoEntrega` day) as date) AS `prazoEntrega`,cast((`v`.`data` + interval `v`.`novoPrazoEntrega` day) as date) AS `novoPrazoEntrega` from ((`mydb`.`venda` `v` left join `mydb`.`venda_has_produto` `vp` on((`v`.`idVenda` = `vp`.`idVenda`))) left join `mydb`.`usuario` `u` on((`v`.`idUsuario` = `u`.`idUsuario`)));

-- -----------------------------------------------------
-- View `mydb`.`viewlucroreal`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`viewlucroreal`;
DROP VIEW IF EXISTS `mydb`.`viewlucroreal` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mydb`.`viewlucroreal` AS select group_concat(distinct date_format(`v`.`data`,'%Y/%m') separator ',') AS `mes`,`l`.`nomeFantasia` AS `nomeFantasia`,(sum(`vp`.`total`) + 0E0) AS `SomaDetotal`,(sum(((`v`.`frete` / (`v`.`total` - `v`.`frete`)) * `vp`.`total`)) + 0E0) AS `somadefrete`,sum(if(isnull(`ehc`.`valor`),(`pf`.`prcUnitario` * `vp`.`quant`),(`ehc`.`valor` + 0E0))) AS `custo`,if((isnull(group_concat(distinct `ehc`.`valor` separator ',')) and isnull(group_concat(distinct `pf`.`prcUnitario` separator ',')) and (group_concat(distinct `v`.`representacao` separator ',') = FALSE)),'sem custo','') AS `sem custo`,(sum(if((`v`.`representacao` = TRUE),0,((0.58 * 0.18) * if(isnull(`ehc`.`valor`),(`pf`.`prcUnitario` * `vp`.`quant`),`ehc`.`valor`)))) + 0E0) AS `ICMS`,sum(if((`v`.`representacao` = TRUE),((((`f`.`comissaoLoja` / 100) * `vp`.`total`) * (1 - 0.0925)) * ((0.25 * 1) + (0.09 * 1))),((((`vp`.`total` - if(isnull(`ehc`.`valor`),(`pf`.`prcUnitario` * `vp`.`quant`),(`ehc`.`valor` + 0E0))) - ((0.58 * 0.18) * if(isnull(`ehc`.`valor`),(`pf`.`prcUnitario` * `vp`.`quant`),`ehc`.`valor`))) - ((`vp`.`total` - if(isnull(`ehc`.`valor`),(`pf`.`prcUnitario` * `vp`.`quant`),`ehc`.`valor`)) * 0.0925)) * ((0.25 * 1) + (0.09 * 1))))) AS `IR+CSLL`,sum(if((`v`.`representacao` = TRUE),(((`f`.`comissaoLoja` / 100) * `vp`.`total`) * 0.0925),((`vp`.`total` - if(isnull(`ehc`.`valor`),(`pf`.`prcUnitario` * `vp`.`quant`),`ehc`.`valor`)) * 0.0925))) AS `PIS+Cofins+ISS`,if((`v`.`representacao` = TRUE),'Representacao','Venda') AS `representacao`,sum(if((`v`.`representacao` = TRUE),((`vp`.`total` * `f`.`comissaoLoja`) / 100),0E0)) AS `Comissao Representacao`,(sum(((`vp`.`total` * `prof`.`comissao`) / 100)) + 0E0) AS `RT`,sum((if((right(`p`.`ui`,1) = 'L'),(`f`.`comissao2` / 100),(`f`.`comissao1` / 100)) * `vp`.`total`)) AS `ValorComissao`,sum(if((`cr`.`Cartao` is not null),((-(1) * (`cr`.`Cartao` * `vp`.`total`)) / (`v`.`total` - `v`.`frete`)),0E0)) AS `Cartao` from (((((((((`mydb`.`venda_has_produto` `vp` left join `mydb`.`venda` `v` on((`vp`.`idVenda` = `v`.`idVenda`))) left join `mydb`.`usuario` `u` on((`v`.`idUsuario` = `u`.`idUsuario`))) left join `mydb`.`loja` `l` on((`vp`.`idLoja` = `l`.`idLoja`))) left join (select group_concat(distinct `ehc`.`valorUnid` separator ',') AS `valorunid`,group_concat(distinct `ehc`.`desconto` separator ',') AS `desconto`,group_concat(distinct `ehc`.`valor` separator ',') AS `valor`,`ehc`.`idVendaProduto` AS `idvendaproduto` from `mydb`.`estoque_has_consumo` `ehc` group by `ehc`.`idVendaProduto`) `ehc` on((`vp`.`idVendaProduto` = `ehc`.`idvendaproduto`))) left join (select `pf`.`idCompra` AS `idCompra`,`pf`.`idProduto` AS `idProduto`,group_concat(distinct `pf`.`prcUnitario` separator ',') AS `prcUnitario` from `mydb`.`pedido_fornecedor_has_produto` `pf` group by `pf`.`idCompra`,`pf`.`idProduto`) `pf` on(((`vp`.`idProduto` = `pf`.`idProduto`) and (`vp`.`idCompra` = `pf`.`idCompra`)))) left join `mydb`.`fornecedor` `f` on((`vp`.`fornecedor` = `f`.`razaoSocial`))) left join `mydb`.`profissional` `prof` on((`v`.`idProfissional` = `prof`.`idProfissional`))) left join `mydb`.`produto` `p` on((`vp`.`idProduto` = `p`.`idProduto`))) left join (select sum(`cr`.`valor`) AS `Cartao`,`cr`.`idVenda` AS `idVenda` from `mydb`.`conta_a_receber_has_pagamento` `cr` where ((`cr`.`status` <> 'CANCELADO') and (`cr`.`tipo` like '%Taxa Cartão') and (`cr`.`desativado` = FALSE)) group by `cr`.`idVenda`) `cr` on((`cr`.`idVenda` = `vp`.`idVenda`))) where ((`vp`.`status` <> 'CANCELADO') and (`v`.`data` >= '2016-12-01')) group by date_format(`v`.`data`,'%Y-%m'),`l`.`nomeFantasia`,if((isnull(`ehc`.`valorunid`) and isnull(`pf`.`prcUnitario`) and (`v`.`representacao` = FALSE)),'sem custo',''),if((`v`.`representacao` = TRUE),'Representacao','Venda');

-- -----------------------------------------------------
-- View `mydb`.`xxxx`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`xxxx`;
DROP VIEW IF EXISTS `mydb`.`xxxx` ;
USE `mydb`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `mydb`.`xxxx` AS select `ehc`.`idVendaProduto` AS `idVendaProduto`,max(`bbb`.`percst`) AS `percST` from ((`mydb`.`estoque_has_consumo` `ehc` left join `mydb`.`estoque` `e` on((`ehc`.`idEstoque` = `e`.`idEstoque`))) left join `mydb`.`bbb` on((`bbb`.`idNFe` = `e`.`idNFe`))) where ((`bbb`.`percst` is not null) and (`ehc`.`idVendaProduto` is not null)) group by `ehc`.`idVendaProduto`;
USE `mydb`;

DELIMITER $$

USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`estoque_has_consumo_AFTER_DELETE` $$
USE `mydb`$$
CREATE
DEFINER=`root`@`%`
TRIGGER `mydb`.`estoque_has_consumo_AFTER_DELETE`
AFTER DELETE ON `mydb`.`estoque_has_consumo`
FOR EACH ROW
BEGIN
UPDATE produto p SET estoqueRestante = (SELECT e.quant + COALESCE(SUM(ehc.quant), 0) FROM estoque e 
LEFT JOIN estoque_has_consumo ehc ON e.idEstoque = ehc.idEstoque WHERE e.idEstoque = OLD.idEstoque GROUP BY ehc.idEstoque)
 WHERE p.idEstoque = OLD.idEstoque;
 END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`estoque_has_consumo_AFTER_INSERT` $$
USE `mydb`$$
CREATE
DEFINER=`root`@`%`
TRIGGER `mydb`.`estoque_has_consumo_AFTER_INSERT`
AFTER INSERT ON `mydb`.`estoque_has_consumo`
FOR EACH ROW
BEGIN
UPDATE produto p SET estoqueRestante = (SELECT e.quant + COALESCE(SUM(ehc.quant), 0) FROM estoque e 
LEFT JOIN estoque_has_consumo ehc ON e.idEstoque = ehc.idEstoque WHERE e.idEstoque = NEW.idEstoque GROUP BY ehc.idEstoque)
 WHERE p.idEstoque = NEW.idEstoque;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`estoque_has_consumo_AFTER_UPDATE` $$
USE `mydb`$$
CREATE
DEFINER=`root`@`%`
TRIGGER `mydb`.`estoque_has_consumo_AFTER_UPDATE`
AFTER UPDATE ON `mydb`.`estoque_has_consumo`
FOR EACH ROW
BEGIN
UPDATE produto p SET estoqueRestante = (SELECT e.quant + COALESCE(SUM(ehc.quant), 0) FROM estoque e 
LEFT JOIN estoque_has_consumo ehc ON e.idEstoque = ehc.idEstoque WHERE e.idEstoque = NEW.idEstoque GROUP BY ehc.idEstoque)
 WHERE p.idEstoque = NEW.idEstoque;
 END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
